{"version":3,"sources":["../src/animate/custom-animate.ts"],"names":[],"mappings":"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","file":"custom-animate.js","sourcesContent":["import type { IPoint, IPointLike } from '@visactor/vutils';\nimport {\n  clamp,\n  getDecimalPlaces,\n  isArray,\n  isNumber,\n  isValidNumber,\n  pi,\n  pi2,\n  Point,\n  PointService\n} from '@visactor/vutils';\nimport { application } from '../application';\nimport { AttributeUpdateType } from '../common/enums';\nimport { CustomPath2D } from '../common/custom-path2d';\nimport type {\n  EasingType,\n  IArcGraphicAttribute,\n  IArea,\n  IAreaCacheItem,\n  ICubicBezierCurve,\n  ICurve,\n  ICustomPath2D,\n  IGraphic,\n  IGroup,\n  ILine,\n  ILineAttribute,\n  ILinearGradient,\n  IRect,\n  IRectAttribute,\n  IRectGraphicAttribute,\n  ISegment,\n  IShadowRoot\n} from '../interface';\nimport { ACustomAnimate } from './animate';\nimport { Easing } from './easing';\nimport { pointInterpolation } from '../common/utils';\nimport { divideCubic } from '../common/segment/curve/cubic-bezier';\n\nexport class IncreaseCount extends ACustomAnimate<{ text: string | number }> {\n  declare valid: boolean;\n\n  private fromNumber: number;\n  private toNumber: number;\n  private decimalLength: number;\n\n  constructor(\n    from: { text: string | number },\n    to: { text: string | number },\n    duration: number,\n    easing: EasingType,\n    params?: { fixed?: boolean }\n  ) {\n    super(from, to, duration, easing, params);\n  }\n\n  getEndProps(): Record<string, any> | void {\n    if (this.valid === false) {\n      return {};\n    }\n    return {\n      text: this.to\n    };\n  }\n\n  onBind(): void {\n    this.fromNumber = isNumber(this.from?.text) ? this.from?.text : Number.parseFloat(this.from?.text);\n    this.toNumber = isNumber(this.to?.text) ? this.to?.text : Number.parseFloat(this.to?.text);\n    if (!Number.isFinite(this.toNumber)) {\n      this.fromNumber = 0;\n    }\n    if (!Number.isFinite(this.toNumber)) {\n      this.valid = false;\n    }\n    if (this.valid !== false) {\n      this.decimalLength =\n        this.params?.fixed ?? Math.max(getDecimalPlaces(this.fromNumber), getDecimalPlaces(this.toNumber));\n    }\n  }\n\n  onEnd(): void {\n    return;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (this.valid === false) {\n      return;\n    }\n    if (end) {\n      out.text = this.to?.text;\n    } else {\n      out.text = (this.fromNumber + (this.toNumber - this.fromNumber) * ratio).toFixed(this.decimalLength);\n    }\n  }\n}\n\nenum Direction {\n  LEFT_TO_RIGHT = 0,\n  RIGHT_TO_LEFT = 1,\n  TOP_TO_BOTTOM = 2,\n  BOTTOM_TO_TOP = 3,\n  STROKE = 4\n}\nexport class FadeInPlus extends ACustomAnimate<any> {\n  declare direction: number;\n  declare toFill: string;\n  declare toStroke: string;\n  declare fillGradient: ILinearGradient;\n  declare strokeGradient: ILinearGradient;\n  declare fill: boolean;\n  declare stroke: boolean;\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params?: { direction?: number; fill?: boolean; stroke?: boolean }\n  ) {\n    super(from, to, duration, easing, params);\n    const { direction = Direction.LEFT_TO_RIGHT, fill = true, stroke = true } = params || {};\n    this.direction = direction;\n    this.fill = fill;\n    this.stroke = stroke;\n    this.fillGradient = {\n      gradient: 'linear',\n      stops: []\n    };\n    this.strokeGradient = {\n      gradient: 'linear',\n      stops: []\n    };\n  }\n\n  getEndProps(): Record<string, any> {\n    return {\n      fill: this.toFill,\n      stroke: this.toStroke\n    };\n  }\n\n  onBind(): void {\n    // this.to = parseFloat(this.target.getAnimatePropByName('text'));\n    this.toFill = this.target.getComputedAttribute('fill');\n    this.toStroke = this.target.getComputedAttribute('stroke');\n  }\n\n  onEnd(): void {\n    return;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (!this.toFill) {\n      return;\n    }\n    if (!this.toStroke) {\n      return;\n    }\n    switch (this.direction) {\n      case Direction.RIGHT_TO_LEFT:\n        this.rightToLeft(end, ratio, out);\n        break;\n      case Direction.TOP_TO_BOTTOM:\n        this.topToBottom(end, ratio, out);\n        break;\n      case Direction.BOTTOM_TO_TOP:\n        this.bottomToTop(end, ratio, out);\n        break;\n      case Direction.STROKE:\n        this.strokePath(end, ratio, out);\n        break;\n      default:\n        this.leftToRight(end, ratio, out);\n        break;\n    }\n  }\n\n  leftToRight(end: boolean, ratio: number, out: Record<string, any>) {\n    if (this.fill) {\n      const toFillColor = this.toFill;\n      this.fillGradient.x0 = 0;\n      this.fillGradient.y0 = 0;\n      this.fillGradient.x1 = 1;\n      this.fillGradient.y1 = 0;\n      this.fillGradient.stops = [\n        { offset: 0, color: toFillColor },\n        { offset: ratio, color: toFillColor },\n        { offset: Math.min(1, ratio * 2), color: 'transparent' }\n      ];\n      out.fill = this.fillGradient;\n    }\n    if (this.stroke) {\n      const toStrokeColor = this.toStroke;\n      this.strokeGradient.x0 = 0;\n      this.strokeGradient.y0 = 0;\n      this.strokeGradient.x1 = 1;\n      this.strokeGradient.y1 = 0;\n      this.strokeGradient.stops = [\n        { offset: 0, color: toStrokeColor },\n        { offset: ratio, color: toStrokeColor },\n        { offset: Math.min(1, ratio * 6), color: 'transparent' }\n      ];\n      out.stroke = this.strokeGradient;\n      // const dashLen = 300;\n      // const offset = ratio * dashLen;\n      // out.lineDash = [offset, dashLen - offset];\n    }\n    return;\n  }\n\n  strokePath(end: boolean, ratio: number, out: Record<string, any>) {\n    if (this.fill) {\n      const toFillColor = this.toFill;\n      this.fillGradient.x0 = 0;\n      this.fillGradient.y0 = 0;\n      this.fillGradient.x1 = 1;\n      this.fillGradient.y1 = 0;\n      this.fillGradient.stops = [\n        { offset: 0, color: toFillColor },\n        { offset: ratio, color: toFillColor },\n        { offset: Math.min(1, ratio * 2), color: 'transparent' }\n      ];\n      out.fill = this.fillGradient;\n    }\n    if (this.stroke) {\n      const dashLen = 300;\n      const offset = ratio * dashLen;\n      out.lineDash = [offset, dashLen - offset];\n    }\n    return;\n  }\n  rightToLeft(end: boolean, ratio: number, out: Record<string, any>) {\n    return;\n  }\n  topToBottom(end: boolean, ratio: number, out: Record<string, any>) {\n    return;\n  }\n  bottomToTop(end: boolean, ratio: number, out: Record<string, any>) {\n    return;\n  }\n}\n\nexport class InputText extends ACustomAnimate<{ text: string }> {\n  declare valid: boolean;\n  declare target: IGraphic;\n\n  private fromText: string = '';\n  private toText: string | string[] = '';\n\n  getEndProps(): Record<string, any> {\n    if (this.valid === false) {\n      return {};\n    }\n    return {\n      text: this.to\n    };\n  }\n\n  onBind(): void {\n    this.fromText = this.from?.text ?? '';\n    this.toText = this.to?.text || '';\n    if (!this.toText || (isArray(this.toText) && this.toText.length === 0)) {\n      this.valid = false;\n    }\n    if (isArray(this.toText)) {\n      this.toText = this.toText.map(item => (item || '').toString());\n    }\n    //  else {\n    //   this.toText = this.toText.toString();\n    //   // const root = this.target.attachShadow();\n    //   // const line = application.graphicService.creator.line({\n    //   //   x: 0,\n    //   //   y: 0,\n    //   //   points: [\n    //   //     { x: 0, y: 0 },\n    //   //     { x: 0, y: this.target.getComputedAttribute('fontSize') }\n    //   //   ],\n    //   //   stroke: 'black',\n    //   //   lineWidth: 1\n    //   // });\n    //   // root.add(line);\n    // }\n  }\n\n  onEnd(): void {\n    this.target.detachShadow();\n    return;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (this.valid === false) {\n      return;\n    }\n    // update text\n    const fromCount = this.fromText.length;\n    const toTextIsArray = isArray(this.toText);\n    const toCount = toTextIsArray\n      ? (this.toText as unknown as string[]).reduce((c, t) => c + (t || '').length, 0)\n      : this.toText.length;\n    const count = Math.ceil(fromCount + (toCount - fromCount) * ratio);\n\n    if (toTextIsArray) {\n      out.text = [];\n      let len = 0;\n      (this.toText as unknown as string[]).forEach(t => {\n        if (len + t.length > count) {\n          out.text.push(t.substr(0, count - len));\n          len = count;\n        } else {\n          out.text.push(t);\n          len += t.length;\n        }\n      });\n    } else {\n      out.text = (this.toText as string).substr(0, count);\n    }\n    // console.log(out.text)\n\n    // update line position\n    // const line = this.target.shadowRoot?.at(0) as IGraphic;\n    // const endX = (this.target as any).clipedWidth + 2;\n    // line.setAttribute('x', endX);\n  }\n}\n\nexport class StreamLight extends ACustomAnimate<any> {\n  declare valid: boolean;\n  declare target: IGraphic;\n\n  declare rect: IRect;\n  declare line: ILine;\n  declare area: IArea;\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params?: { attribute?: Partial<IRectAttribute | ILineAttribute>; streamLength?: number; isHorizontal?: boolean }\n  ) {\n    super(from, to, duration, easing, params);\n  }\n\n  getEndProps(): Record<string, any> {\n    return {};\n  }\n\n  onStart(): void {\n    if (!this.target) {\n      return;\n    }\n    if (this.target.type === 'rect') {\n      this.onStartRect();\n    } else if (this.target.type === 'line') {\n      this.onStartLineOrArea('line');\n    } else if (this.target.type === 'area') {\n      this.onStartLineOrArea('area');\n    }\n  }\n\n  onStartLineOrArea(type: 'line' | 'area') {\n    const root = this.target.attachShadow();\n    const line = application.graphicService.creator[type]({\n      ...this.params?.attribute\n    });\n    this[type] = line;\n    line.pathProxy = new CustomPath2D();\n    root.add(line);\n  }\n\n  onStartRect(): void {\n    const root = this.target.attachShadow();\n\n    const isHorizontal = this.params?.isHorizontal ?? true;\n    const sizeAttr = isHorizontal ? 'height' : 'width';\n    const otherSizeAttr = isHorizontal ? 'width' : 'height';\n    const size = this.target.AABBBounds[sizeAttr]();\n    const y = isHorizontal ? 0 : this.target.AABBBounds.y1;\n\n    const rect = application.graphicService.creator.rect({\n      [sizeAttr]: size,\n      fill: '#bcdeff',\n      shadowBlur: 30,\n      shadowColor: '#bcdeff',\n      ...this.params?.attribute,\n      x: 0,\n      y,\n      [otherSizeAttr]: 0\n    });\n    this.rect = rect;\n    root.add(rect);\n  }\n\n  onBind(): void {\n    return;\n  }\n\n  onEnd(): void {\n    this.target.detachShadow();\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (this.rect) {\n      return this.onUpdateRect(end, ratio, out);\n    } else if (this.line || this.area) {\n      return this.onUpdateLineOrArea(end, ratio, out);\n    }\n  }\n\n  protected onUpdateRect(end: boolean, ratio: number, out: Record<string, any>): void {\n    const isHorizontal = this.params?.isHorizontal ?? true;\n    const parentAttr = (this.target as any).attribute;\n    if (isHorizontal) {\n      const parentWidth = parentAttr.width ?? Math.abs(parentAttr.x1 - parentAttr.x) ?? 250;\n      const streamLength = this.params?.streamLength ?? parentWidth;\n      const maxLength = this.params?.attribute?.width ?? 60;\n      // 起点，rect x右端点 对齐 parent左端点\n      // 如果parent.x1 < parent.x, 需要把rect属性移到parent x1的位置上, 因为初始 rect.x = parent.x\n      const startX = -maxLength;\n      // 插值\n      const currentX = startX + (streamLength - startX) * ratio;\n      // 位置限定 > 0\n      const x = Math.max(currentX, 0);\n      // 宽度计算\n      const w = Math.min(Math.min(currentX + maxLength, maxLength), streamLength - currentX);\n      // 如果 rect右端点 超出 parent右端点, 宽度动态调整\n      const width = w + x > parentWidth ? Math.max(parentWidth - x, 0) : w;\n      this.rect.setAttributes(\n        {\n          x,\n          width,\n          dx: Math.min(parentAttr.x1 - parentAttr.x, 0)\n        } as any,\n        false,\n        {\n          type: AttributeUpdateType.ANIMATE_PLAY,\n          animationState: {\n            ratio,\n            end\n          }\n        }\n      );\n    } else {\n      const parentHeight = parentAttr.height ?? Math.abs(parentAttr.y1 - parentAttr.y) ?? 250;\n      const streamLength = this.params?.streamLength ?? parentHeight;\n      const maxLength = this.params?.attribute?.height ?? 60;\n      // 起点，y上端点 对齐 parent下端点\n      const startY = parentHeight;\n      // 插值\n      const currentY = startY - (streamLength + maxLength) * ratio;\n      // 位置限定 < parentHeight\n      let y = Math.min(currentY, parentHeight);\n      // 高度最小值\n      const h = Math.min(parentHeight - currentY, maxLength);\n      // 如果 rect上端点=y 超出 parent上端点 = 0, 则高度不断变小\n      let height;\n      if (y <= 0) {\n        // 必须先得到高度再将y置为0, 顺序很重要\n        height = Math.max(y + h, 0);\n        y = 0;\n      } else {\n        height = h;\n      }\n      this.rect.setAttributes(\n        {\n          y,\n          height,\n          dy: Math.min(parentAttr.y1 - parentAttr.y, 0)\n        } as any,\n        false,\n        {\n          type: AttributeUpdateType.ANIMATE_PLAY,\n          animationState: {\n            ratio,\n            end\n          }\n        }\n      );\n    }\n  }\n\n  protected onUpdateLineOrArea(end: boolean, ratio: number, out: Record<string, any>) {\n    const target = this.line || this.area;\n    if (!target) {\n      return;\n    }\n    const customPath = target.pathProxy as ICustomPath2D;\n    const targetLine = this.target as ILine | IArea;\n    if (targetLine.cache || targetLine.cacheArea) {\n      this._onUpdateLineOrAreaWithCache(customPath, targetLine, end, ratio, out);\n    } else {\n      this._onUpdateLineWithoutCache(customPath, targetLine, end, ratio, out);\n    }\n    const targetAttrs = targetLine.attribute;\n    target.setAttributes({\n      stroke: targetAttrs.stroke,\n      ...target.attribute\n    });\n    target.addUpdateBoundTag();\n  }\n\n  // 针对有cache的linear\n  protected _onUpdateLineOrAreaWithCache(\n    customPath: ICustomPath2D,\n    g: ILine | IArea,\n    end: boolean,\n    ratio: number,\n    out: Record<string, any>\n  ) {\n    customPath.clear();\n    if (g.type === 'line') {\n      let cache = g.cache;\n      if (!Array.isArray(cache)) {\n        cache = [cache];\n      }\n      const totalLen = cache.reduce((l: any, c: any) => l + c.getLength(), 0);\n      const curves: ICurve<IPoint>[] = [];\n      cache.forEach((c: any) => {\n        c.curves.forEach((ci: any) => curves.push(ci));\n      });\n      return this._updateCurves(customPath, curves, totalLen, ratio);\n    } else if (g.type === 'area' && g.cacheArea?.top?.curves) {\n      const cache = g.cacheArea as IAreaCacheItem;\n      const totalLen = cache.top.curves.reduce((a, b) => a + b.getLength(), 0);\n      return this._updateCurves(customPath, cache.top.curves, totalLen, ratio);\n    }\n  }\n\n  protected _updateCurves(customPath: ICustomPath2D, curves: ICurve<IPoint>[], totalLen: number, ratio: number) {\n    const startLen = totalLen * ratio;\n    const endLen = Math.min(startLen + this.params?.streamLength ?? 10, totalLen);\n    let lastLen = 0;\n    let start = false;\n    for (let i = 0; i < curves.length; i++) {\n      if (curves[i].defined !== false) {\n        const curveItem = curves[i];\n        const len = curveItem.getLength();\n        const startPercent = 1 - (lastLen + len - startLen) / len;\n        let endPercent = 1 - (lastLen + len - endLen) / len;\n        let curveForStart: ICubicBezierCurve;\n        if (lastLen < startLen && lastLen + len > startLen) {\n          start = true;\n          if (curveItem.p2 && curveItem.p3) {\n            const [_, curve2] = divideCubic(curveItem as ICubicBezierCurve, startPercent);\n            customPath.moveTo(curve2.p0.x, curve2.p0.y);\n            curveForStart = curve2;\n            // console.log(curve2.p0.x, curve2.p0.y);\n          } else {\n            const p = curveItem.getPointAt(startPercent);\n            customPath.moveTo(p.x, p.y);\n          }\n        }\n        if (lastLen < endLen && lastLen + len > endLen) {\n          if (curveItem.p2 && curveItem.p3) {\n            if (curveForStart) {\n              endPercent = (endLen - startLen) / curveForStart.getLength();\n            }\n            const [curve1] = divideCubic(curveForStart || (curveItem as ICubicBezierCurve), endPercent);\n            customPath.bezierCurveTo(curve1.p1.x, curve1.p1.y, curve1.p2.x, curve1.p2.y, curve1.p3.x, curve1.p3.y);\n          } else {\n            const p = curveItem.getPointAt(endPercent);\n            customPath.lineTo(p.x, p.y);\n          }\n          break;\n        } else if (start) {\n          if (curveItem.p2 && curveItem.p3) {\n            const curve = curveForStart || curveItem;\n            customPath.bezierCurveTo(curve.p1.x, curve.p1.y, curve.p2.x, curve.p2.y, curve.p3.x, curve.p3.y);\n          } else {\n            customPath.lineTo(curveItem.p1.x, curveItem.p1.y);\n          }\n        }\n        lastLen += len;\n      }\n    }\n  }\n\n  // 只针对最简单的linear\n  protected _onUpdateLineWithoutCache(\n    customPath: ICustomPath2D,\n    line: ILine,\n    end: boolean,\n    ratio: number,\n    out: Record<string, any>\n  ) {\n    const { points, curveType } = line.attribute;\n    if (!points || points.length < 2 || curveType !== 'linear') {\n      return;\n    }\n    let totalLen = 0;\n    for (let i = 1; i < points.length; i++) {\n      totalLen += PointService.distancePP(points[i], points[i - 1]);\n    }\n    const startLen = totalLen * ratio;\n    const endLen = Math.min(startLen + this.params?.streamLength ?? 10, totalLen);\n    const nextPoints = [];\n    let lastLen = 0;\n    for (let i = 1; i < points.length; i++) {\n      const len = PointService.distancePP(points[i], points[i - 1]);\n      if (lastLen < startLen && lastLen + len > startLen) {\n        nextPoints.push(PointService.pointAtPP(points[i - 1], points[i], 1 - (lastLen + len - startLen) / len));\n      }\n      if (lastLen < endLen && lastLen + len > endLen) {\n        nextPoints.push(PointService.pointAtPP(points[i - 1], points[i], 1 - (lastLen + len - endLen) / len));\n        break;\n      } else if (nextPoints.length) {\n        nextPoints.push(points[i]);\n      }\n      lastLen += len;\n    }\n\n    if (!nextPoints.length || nextPoints.length < 2) {\n      return;\n    }\n    customPath.clear();\n    customPath.moveTo(nextPoints[0].x, nextPoints[0].y);\n    for (let i = 1; i < nextPoints.length; i++) {\n      customPath.lineTo(nextPoints[i].x, nextPoints[i].y);\n    }\n  }\n}\n\nexport class Meteor extends ACustomAnimate<any> {\n  declare size: number;\n  declare target: IGraphic;\n  declare root: IShadowRoot;\n  declare posList: IPoint[];\n\n  get lastPos(): IPoint {\n    return this.posList[this.posList.length - 1];\n  }\n\n  constructor(size: number, duration: number, easing: EasingType, params?: any) {\n    super(null, null, duration, easing, params);\n    this.size = size;\n    this.posList = [];\n  }\n\n  onBind(): void {\n    const root = this.target.attachShadow();\n    this.root = root;\n    for (let i = 0; i < this.size; i++) {\n      const g = this.target.clone();\n      const scale = Math.min(((this.size - i) / this.size) * 3, 1);\n      const opacity = Math.min(0.2 + 0.7 / this.size);\n      g.setAttributes({ x: 0, y: 0, dx: 0, dy: 0, scaleX: scale, scaleY: scale, opacity }, false, {\n        type: AttributeUpdateType.ANIMATE_BIND\n      });\n      root.add(g);\n    }\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (end) {\n      this.target.detachShadow();\n      this.posList.length = 0;\n      return;\n    }\n\n    const x = this.target.getComputedAttribute('x');\n    const y = this.target.getComputedAttribute('y');\n\n    const nextPos = new Point(x, y);\n    if (!this.posList.length) {\n      this.posList.push(nextPos);\n      return;\n    }\n\n    this.target.shadowRoot.forEachChildren((g: IGraphic, i) => {\n      const pos = this.posList[Math.max(this.posList.length - i - 1, 0)];\n      g.setAttributes(\n        {\n          x: pos.x - x,\n          y: pos.y - y\n        },\n        false\n      );\n    });\n\n    this.posList.push(nextPos);\n  }\n}\n\nexport class MotionPath extends ACustomAnimate<any> {\n  declare valid: boolean;\n  declare pathLength: number;\n  declare path: CustomPath2D;\n  declare distance: number;\n  declare initAngle: number;\n  declare changeAngle: boolean;\n  declare cb?: (from: any, to: any, ratio: number, target: IGraphic) => void;\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params?: {\n      path: CustomPath2D;\n      distance: number;\n      cb?: (from: any, to: any, ratio: number, target: IGraphic) => void;\n      initAngle?: number;\n      changeAngle?: boolean;\n    }\n  ) {\n    super(from, to, duration, easing, params);\n    if (params) {\n      this.pathLength = params.path.getLength();\n      this.path = params.path;\n      this.distance = params.distance;\n      this.to = params.distance * this.pathLength;\n      this.initAngle = params.initAngle ?? 0;\n      this.changeAngle = !!params.changeAngle;\n      this.cb = params.cb;\n    }\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    // 计算位置\n    const at = this.to * ratio;\n    const { pos, angle } = this.path.getAttrAt(at);\n    out.x = pos.x;\n    out.y = pos.y;\n    if (this.changeAngle) {\n      out.angle = angle + this.initAngle;\n    }\n    this.cb && this.cb(this.from, this.to, ratio, this.target as IGraphic);\n    // out.angle = angle + this.initAngle;\n  }\n}\n\nexport class TagPointsUpdate extends ACustomAnimate<{ points?: IPointLike[]; segments?: ISegment[] }> {\n  protected fromPoints: IPointLike[];\n  protected toPoints: IPointLike[];\n  protected points: IPointLike[];\n  protected interpolatePoints: [IPointLike, IPointLike][];\n  protected newPointAnimateType: 'grow' | 'appear' | 'clip';\n  protected clipRange: number;\n  protected shrinkClipRange: number;\n  protected clipRangeByDimension: 'x' | 'y';\n  protected segmentsCache: number[];\n\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params?: { newPointAnimateType?: 'grow' | 'appear' | 'clip'; clipRangeByDimension?: 'x' | 'y' }\n  ) {\n    super(from, to, duration, easing, params);\n    this.newPointAnimateType = params?.newPointAnimateType ?? 'grow';\n    this.clipRangeByDimension = params?.clipRangeByDimension ?? 'x';\n  }\n\n  private getPoints(attribute: typeof this.from, cache = false): IPointLike[] {\n    if (attribute.points) {\n      return attribute.points;\n    }\n\n    if (attribute.segments) {\n      const points = [] as IPointLike[];\n      if (!this.segmentsCache) {\n        this.segmentsCache = [];\n      }\n      attribute.segments.map(segment => {\n        if (segment.points) {\n          points.push(...segment.points);\n        }\n        if (cache) {\n          this.segmentsCache.push(segment.points?.length ?? 0);\n        }\n      });\n      return points;\n    }\n    return [];\n  }\n\n  onBind(): void {\n    const originFromPoints = this.getPoints(this.from);\n    const originToPoints = this.getPoints(this.to, true);\n    this.fromPoints = !originFromPoints ? [] : !Array.isArray(originFromPoints) ? [originFromPoints] : originFromPoints;\n    this.toPoints = !originToPoints ? [] : !Array.isArray(originToPoints) ? [originToPoints] : originToPoints;\n\n    const tagMap = new Map<string, IPointLike>();\n    this.fromPoints.forEach(point => {\n      if (point.context) {\n        tagMap.set(point.context, point);\n      }\n    });\n    let firstMatchedIndex = Infinity;\n    let lastMatchedIndex = -Infinity;\n    let firstMatchedPoint: IPointLike;\n    let lastMatchedPoint: IPointLike;\n    for (let i = 0; i < this.toPoints.length; i += 1) {\n      if (tagMap.has(this.toPoints[i].context)) {\n        firstMatchedIndex = i;\n        firstMatchedPoint = tagMap.get(this.toPoints[i].context);\n        break;\n      }\n    }\n    for (let i = this.toPoints.length - 1; i >= 0; i -= 1) {\n      if (tagMap.has(this.toPoints[i].context)) {\n        lastMatchedIndex = i;\n        lastMatchedPoint = tagMap.get(this.toPoints[i].context);\n        break;\n      }\n    }\n\n    if (this.newPointAnimateType === 'clip') {\n      if (this.toPoints.length !== 0) {\n        if (Number.isFinite(lastMatchedIndex)) {\n          this.clipRange =\n            this.toPoints[lastMatchedIndex][this.clipRangeByDimension] /\n            this.toPoints[this.toPoints.length - 1][this.clipRangeByDimension];\n          if (this.clipRange === 1) {\n            this.shrinkClipRange =\n              this.toPoints[lastMatchedIndex][this.clipRangeByDimension] /\n              this.fromPoints[this.fromPoints.length - 1][this.clipRangeByDimension];\n          }\n          if (!isValidNumber(this.clipRange)) {\n            this.clipRange = 0;\n          } else {\n            this.clipRange = clamp(this.clipRange, 0, 1);\n          }\n        } else {\n          this.clipRange = 0;\n        }\n      }\n    }\n    // TODO: shrink removed points\n    // if no point is matched, animation should start from toPoint[0]\n    let prevMatchedPoint = this.toPoints[0];\n    this.interpolatePoints = this.toPoints.map((point, index) => {\n      const matchedPoint = tagMap.get(point.context);\n      if (matchedPoint) {\n        prevMatchedPoint = matchedPoint;\n        return [matchedPoint, point];\n      }\n      // appear new point\n      if (this.newPointAnimateType === 'appear' || this.newPointAnimateType === 'clip') {\n        return [point, point];\n      }\n      // grow new point\n      if (index < firstMatchedIndex && firstMatchedPoint) {\n        return [firstMatchedPoint, point];\n      } else if (index > lastMatchedIndex && lastMatchedPoint) {\n        return [lastMatchedPoint, point];\n      }\n      return [prevMatchedPoint, point];\n    });\n    this.points = this.interpolatePoints.map(interpolate => {\n      const fromPoint = interpolate[0];\n      const toPoint = interpolate[1];\n      const newPoint = new Point(fromPoint.x, fromPoint.y, fromPoint.x1, fromPoint.y1);\n      newPoint.defined = toPoint.defined;\n      newPoint.context = toPoint.context;\n      return newPoint;\n    });\n  }\n\n  onFirstRun(): void {\n    const lastClipRange = this.target.attribute.clipRange;\n    if (isValidNumber(lastClipRange * this.clipRange)) {\n      this.clipRange *= lastClipRange;\n    }\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    // if not create new points, multi points animation might not work well.\n    this.points = this.points.map((point, index) => {\n      const newPoint = pointInterpolation(this.interpolatePoints[index][0], this.interpolatePoints[index][1], ratio);\n      newPoint.context = point.context;\n      return newPoint;\n    });\n    if (this.clipRange) {\n      if (this.shrinkClipRange) {\n        // 折线变短\n        if (!end) {\n          out.points = this.fromPoints;\n          out.clipRange = this.clipRange - (this.clipRange - this.shrinkClipRange) * ratio;\n        } else {\n          out.points = this.toPoints;\n          out.clipRange = 1;\n        }\n        return;\n      }\n      out.clipRange = this.clipRange + (1 - this.clipRange) * ratio;\n    }\n    if (this.segmentsCache && this.to.segments) {\n      let start = 0;\n      out.segments = this.to.segments.map((segment, index) => {\n        const end = start + this.segmentsCache[index];\n        const points = this.points.slice(start, end);\n        start = end;\n        return {\n          ...segment,\n          points\n        };\n      });\n    } else {\n      out.points = this.points;\n    }\n  }\n}\n\nexport class GraphicAnimate extends ACustomAnimate<any> {\n  graphic: IGraphic;\n\n  constructor(from: any, to: any, duration: number, easing: EasingType, params?: { graphic: IGraphic }) {\n    super(from, to, duration, easing, params);\n    this.graphic = params?.graphic;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (!this.graphic) {\n      return;\n    }\n    Object.keys(this.from).forEach(k => {\n      out[k] = this.from[k] + (this.to[k] - this.from[k]) * ratio;\n    });\n  }\n}\n\nexport class ClipGraphicAnimate extends ACustomAnimate<any> {\n  private _group?: IGroup;\n  private _clipGraphic?: IGraphic;\n  protected clipFromAttribute?: any;\n  protected clipToAttribute?: any;\n\n  private _lastClip?: boolean;\n  private _lastPath?: IGraphic[];\n\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params: { group: IGroup; clipGraphic: IGraphic }\n  ) {\n    super(null, null, duration, easing, params);\n    this.clipFromAttribute = from;\n    this.clipToAttribute = to;\n    this._group = params?.group;\n    this._clipGraphic = params?.clipGraphic;\n  }\n\n  onBind() {\n    if (this._group && this._clipGraphic) {\n      this._lastClip = this._group.attribute.clip;\n      this._lastPath = this._group.attribute.path;\n      this._group.setAttributes(\n        {\n          clip: true,\n          path: [this._clipGraphic]\n        },\n        false,\n        { type: AttributeUpdateType.ANIMATE_BIND }\n      );\n    }\n  }\n\n  onEnd() {\n    if (this._group) {\n      this._group.setAttributes(\n        {\n          clip: this._lastClip,\n          path: this._lastPath\n        },\n        false,\n        { type: AttributeUpdateType.ANIMATE_END }\n      );\n    }\n    return;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (!this._clipGraphic) {\n      return;\n    }\n    const res: any = {};\n    Object.keys(this.clipFromAttribute).forEach(k => {\n      res[k] = this.clipFromAttribute[k] + (this.clipToAttribute[k] - this.clipFromAttribute[k]) * ratio;\n    });\n    this._clipGraphic.setAttributes(res, false, {\n      type: AttributeUpdateType.ANIMATE_UPDATE,\n      animationState: { ratio, end }\n    });\n  }\n}\n\nexport class ClipAngleAnimate extends ClipGraphicAnimate {\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params: {\n      group: IGroup;\n      center?: { x: number; y: number };\n      startAngle?: number;\n      radius?: number;\n      orient?: 'clockwise' | 'anticlockwise';\n      animationType?: 'in' | 'out';\n    }\n  ) {\n    const groupAttribute = params?.group?.attribute ?? {};\n    const width = groupAttribute.width ?? 0;\n    const height = groupAttribute.height ?? 0;\n\n    const animationType = params?.animationType ?? 'in';\n    const startAngle = params?.startAngle ?? 0;\n    const orient = params?.orient ?? 'clockwise';\n\n    let arcStartAngle = 0;\n    let arcEndAngle = 0;\n    if (orient === 'anticlockwise') {\n      arcEndAngle = animationType === 'in' ? startAngle + Math.PI * 2 : startAngle;\n      arcEndAngle = startAngle + Math.PI * 2;\n    } else {\n      arcStartAngle = startAngle;\n      arcEndAngle = animationType === 'out' ? startAngle + Math.PI * 2 : startAngle;\n    }\n    const arc = application.graphicService.creator.arc({\n      x: params?.center?.x ?? width / 2,\n      y: params?.center?.y ?? height / 2,\n      outerRadius: params?.radius ?? (width + height) / 2,\n      innerRadius: 0,\n      startAngle: arcStartAngle,\n      endAngle: arcEndAngle,\n      fill: true\n    });\n    let fromAttributes: Partial<IArcGraphicAttribute>;\n    let toAttributes: Partial<IArcGraphicAttribute>;\n    if (orient === 'anticlockwise') {\n      fromAttributes = { startAngle: startAngle + Math.PI * 2 };\n      toAttributes = { startAngle: startAngle };\n    } else {\n      fromAttributes = { endAngle: startAngle };\n      toAttributes = { endAngle: startAngle + Math.PI * 2 };\n    }\n    super(\n      animationType === 'in' ? fromAttributes : toAttributes,\n      animationType === 'in' ? toAttributes : fromAttributes,\n      duration,\n      easing,\n      { group: params?.group, clipGraphic: arc }\n    );\n  }\n}\n\nexport class ClipRadiusAnimate extends ClipGraphicAnimate {\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params: {\n      group: IGroup;\n      center?: { x: number; y: number };\n      startRadius?: number;\n      endRadius?: number;\n      animationType?: 'in' | 'out';\n    }\n  ) {\n    const groupAttribute = params?.group?.attribute ?? {};\n    const width = groupAttribute.width ?? 0;\n    const height = groupAttribute.height ?? 0;\n\n    const animationType = params?.animationType ?? 'in';\n    const startRadius = params?.startRadius ?? 0;\n    const endRadius = params?.endRadius ?? Math.sqrt((width / 2) ** 2 + (height / 2) ** 2);\n\n    const arc = application.graphicService.creator.arc({\n      x: params?.center?.x ?? width / 2,\n      y: params?.center?.y ?? height / 2,\n      outerRadius: animationType === 'out' ? endRadius : startRadius,\n      innerRadius: 0,\n      startAngle: 0,\n      endAngle: Math.PI * 2,\n      fill: true\n    });\n    const fromAttributes: Partial<IArcGraphicAttribute> = { outerRadius: startRadius };\n    const toAttributes: Partial<IArcGraphicAttribute> = { outerRadius: endRadius };\n    super(\n      animationType === 'in' ? fromAttributes : toAttributes,\n      animationType === 'in' ? toAttributes : fromAttributes,\n      duration,\n      easing,\n      { group: params?.group, clipGraphic: arc }\n    );\n  }\n}\n\nexport class ClipDirectionAnimate extends ClipGraphicAnimate {\n  constructor(\n    from: any,\n    to: any,\n    duration: number,\n    easing: EasingType,\n    params: {\n      group: IGroup;\n      direction?: 'x' | 'y';\n      orient?: 'positive' | 'negative';\n      width?: number;\n      height?: number;\n      animationType?: 'in' | 'out';\n    }\n  ) {\n    const groupAttribute = params?.group?.attribute ?? {};\n    const width = params?.width ?? groupAttribute.width ?? 0;\n    const height = params?.height ?? groupAttribute.height ?? 0;\n\n    const animationType = params?.animationType ?? 'in';\n    const direction = params?.direction ?? 'x';\n    const orient = params?.orient ?? 'positive';\n\n    const rect = application.graphicService.creator.rect({\n      x: 0,\n      y: 0,\n      width: animationType === 'in' && direction === 'x' ? 0 : width,\n      height: animationType === 'in' && direction === 'y' ? 0 : height,\n      fill: true\n    });\n    let fromAttributes: Partial<IRectGraphicAttribute> = {};\n    let toAttributes: Partial<IRectGraphicAttribute> = {};\n    if (direction === 'y') {\n      if (orient === 'negative') {\n        fromAttributes = { y: height, height: 0 };\n        toAttributes = { y: 0, height: height };\n      } else {\n        fromAttributes = { height: 0 };\n        toAttributes = { height: height };\n      }\n    } else {\n      if (orient === 'negative') {\n        fromAttributes = { x: width, width: 0 };\n        toAttributes = { x: 0, width: width };\n      } else {\n        fromAttributes = { width: 0 };\n        toAttributes = { width: width };\n      }\n    }\n    super(\n      animationType === 'in' ? fromAttributes : toAttributes,\n      animationType === 'in' ? toAttributes : fromAttributes,\n      duration,\n      easing,\n      { group: params?.group, clipGraphic: rect }\n    );\n  }\n}\n\ntype RotateSphereParams =\n  | {\n      center: { x: number; y: number; z: number };\n      r: number;\n      cb?: (out: any) => void;\n    }\n  | (() => any);\n\nexport class RotateBySphereAnimate extends ACustomAnimate<any> {\n  declare params: RotateSphereParams;\n  declare theta: number;\n  declare phi: number;\n\n  onStart(): void {\n    const { center, r } = typeof this.params === 'function' ? this.params() : this.params;\n    const startX = this.target.getComputedAttribute('x');\n    const startY = this.target.getComputedAttribute('y');\n    const startZ = this.target.getComputedAttribute('z');\n    const phi = Math.acos((startY - center.y) / r);\n    let theta = Math.acos((startX - center.x) / r / Math.sin(phi));\n    if (startZ - center.z < 0) {\n      theta = pi2 - theta;\n    }\n    this.theta = theta;\n    this.phi = phi;\n  }\n\n  onBind() {\n    return;\n  }\n\n  onEnd() {\n    return;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (this.phi == null || this.theta == null) {\n      return;\n    }\n    const { center, r, cb } = typeof this.params === 'function' ? this.params() : this.params;\n    const deltaAngle = Math.PI * 2 * ratio;\n    const theta = this.theta + deltaAngle;\n    const phi = this.phi;\n    const x = r * Math.sin(phi) * Math.cos(theta) + center.x;\n    const y = r * Math.cos(phi) + center.y;\n    const z = r * Math.sin(phi) * Math.sin(theta) + center.z;\n    out.x = x;\n    out.y = y;\n    out.z = z;\n    // out.beta = phi;\n    out.alpha = theta + pi / 2;\n    while (out.alpha > pi2) {\n      out.alpha -= pi2;\n    }\n    out.alpha = pi2 - out.alpha;\n\n    out.zIndex = out.z * -10000;\n\n    cb && cb(out);\n  }\n}\n\nexport class AttributeAnimate extends ACustomAnimate<any> {\n  declare target: IGroup;\n\n  constructor(to: Record<string, any>, duration: number, easing: EasingType) {\n    super({}, to, duration, easing);\n  }\n\n  getEndProps(): Record<string, any> {\n    return this.to;\n  }\n\n  onBind(): void {\n    Object.keys(this.to).forEach(k => {\n      this.from[k] = this.target.getComputedAttribute(k);\n    });\n    return;\n  }\n\n  onEnd(): void {\n    return;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    this.target.stepInterpolate(\n      this.subAnimate,\n      this.subAnimate.animate,\n      out,\n      this.step,\n      ratio,\n      end,\n      this.to,\n      this.from\n    );\n  }\n}\n\nexport class AnimateGroup extends ACustomAnimate<any> {\n  declare customAnimates: ACustomAnimate<any>[];\n  declare updating: boolean;\n\n  constructor(duration: number, customAnimates: ACustomAnimate<any>[]) {\n    super(null, null, duration, 'linear');\n    this.customAnimates = customAnimates;\n  }\n\n  initAnimates() {\n    this.customAnimates.forEach(a => {\n      a.step = this.step;\n      a.subAnimate = this.subAnimate;\n      a.target = this.target;\n    });\n  }\n\n  getEndProps(): Record<string, any> {\n    const props = {};\n    this.customAnimates.forEach(a => {\n      Object.assign(props, a.getEndProps());\n    });\n    return props;\n  }\n\n  onBind(): void {\n    this.initAnimates();\n    this.customAnimates.forEach(a => {\n      a.onBind();\n    });\n    return;\n  }\n\n  onEnd(): void {\n    this.customAnimates.forEach(a => {\n      a.onEnd();\n    });\n    return;\n  }\n\n  onStart(): void {\n    this.customAnimates.forEach(a => {\n      a.onStart();\n    });\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (this.updating) {\n      return;\n    }\n    this.updating = true;\n    this.customAnimates.forEach(a => {\n      const easing = a.easing;\n      const easingFunc = typeof easing === 'string' ? Easing[easing] : easing;\n      ratio = easingFunc(ratio);\n      a.onUpdate(end, ratio, out);\n    });\n    this.updating = false;\n    return;\n  }\n}\n\nexport class AnimateGroup1 extends ACustomAnimate<any> {\n  declare customAnimates: ACustomAnimate<any>[];\n  declare updating: boolean;\n\n  constructor(duration: number, customAnimates: ACustomAnimate<any>[]) {\n    super(null, null, duration, 'linear');\n    this.customAnimates = customAnimates;\n  }\n\n  initAnimates() {\n    this.customAnimates.forEach(a => {\n      a.step = this.step;\n      a.subAnimate = this.subAnimate;\n      a.target = this.target;\n    });\n  }\n\n  getEndProps(): Record<string, any> {\n    const props = {};\n    this.customAnimates.forEach(a => {\n      Object.assign(props, a.getEndProps());\n    });\n    return props;\n  }\n\n  onBind(): void {\n    this.initAnimates();\n    this.customAnimates.forEach(a => {\n      a.onBind();\n    });\n    return;\n  }\n\n  onEnd(): void {\n    this.customAnimates.forEach(a => {\n      a.onEnd();\n    });\n    return;\n  }\n\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (this.updating) {\n      return;\n    }\n    this.updating = true;\n    this.customAnimates.forEach(a => {\n      const easing = a.easing;\n      const easingFunc = typeof easing === 'string' ? Easing[easing] : easing;\n      ratio = easingFunc(ratio);\n      a.onUpdate(end, ratio, out);\n    });\n    this.updating = false;\n    return;\n  }\n}\n"]}