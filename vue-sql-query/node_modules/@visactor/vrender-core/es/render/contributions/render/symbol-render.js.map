{"version":3,"sources":["../src/render/contributions/render/symbol-render.ts"],"names":[],"mappings":"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","file":"symbol-render.js","sourcesContent":["import { inject, injectable, named } from '../../../common/inversify-lite';\n// eslint-disable-next-line\nimport { ContributionProvider } from '../../../common/contribution-provider';\nimport { getTheme } from '../../../graphic/theme';\nimport { SYMBOL_NUMBER_TYPE } from '../../../graphic/constants';\nimport type {\n  IGraphicAttribute,\n  IContext2d,\n  IMarkAttribute,\n  ISymbol,\n  IThemeAttribute,\n  ISymbolRenderContribution,\n  IDrawContext,\n  IRenderService,\n  IGraphicRender,\n  IGraphicRenderDrawParams,\n  IContributionProvider,\n  ICustomPath2D\n} from '../../../interface';\nimport type {} from '../../render-service';\nimport { BaseRender } from './base-render';\nimport { SymbolRenderContribution } from './contributions/constants';\nimport { isArray } from '@visactor/vutils';\nimport {\n  defaultSymbolBackgroundRenderContribution,\n  defaultSymbolClipRangeStrokeRenderContribution,\n  defaultSymbolRenderContribution,\n  defaultSymbolTextureRenderContribution\n} from './contributions';\n\n@injectable()\nexport class DefaultCanvasSymbolRender extends BaseRender<ISymbol> implements IGraphicRender {\n  type: 'symbol';\n  numberType: number = SYMBOL_NUMBER_TYPE;\n\n  constructor(\n    @inject(ContributionProvider)\n    @named(SymbolRenderContribution)\n    protected readonly symbolRenderContribitions: IContributionProvider<ISymbolRenderContribution>\n  ) {\n    super();\n    this.builtinContributions = [\n      defaultSymbolRenderContribution,\n      defaultSymbolBackgroundRenderContribution,\n      defaultSymbolTextureRenderContribution,\n      defaultSymbolClipRangeStrokeRenderContribution\n    ];\n    this.init(symbolRenderContribitions);\n  }\n\n  drawShape(\n    symbol: ISymbol,\n    context: IContext2d,\n    x: number,\n    y: number,\n    drawContext: IDrawContext,\n    params?: IGraphicRenderDrawParams,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean\n  ) {\n    // const symbolAttribute = graphicService.themeService.getCurrentTheme().symbolAttribute;\n    const symbolAttribute = getTheme(symbol, params?.theme).symbol;\n\n    const {\n      size = symbolAttribute.size,\n      x: originX = symbolAttribute.x,\n      y: originY = symbolAttribute.y,\n      scaleX = symbolAttribute.scaleX,\n      scaleY = symbolAttribute.scaleY,\n      fillStrokeOrder = symbolAttribute.fillStrokeOrder,\n      clipRange = symbolAttribute.clipRange\n    } = symbol.attribute;\n\n    const data = this.valid(symbol, symbolAttribute, fillCb, strokeCb);\n    if (!data) {\n      return;\n    }\n    const { fVisible, sVisible, doFill, doStroke } = data;\n\n    const parsedPath = symbol.getParsedPath();\n    // todo: 考虑使用path\n    if (!parsedPath) {\n      return;\n    }\n\n    const { keepDirIn3d = symbolAttribute.keepDirIn3d } = symbol.attribute;\n    const z = this.z ?? 0;\n    context.beginPath();\n\n    const callback = (p: ICustomPath2D, a: any) => {\n      // 如果是svg的话，合并一下fill和stroke\n      if (symbol._parsedPath.svgCache) {\n        const obj = Object.assign({}, a);\n        obj.fill = a.fill ?? symbol.attribute.fill;\n        obj.opacity = a.opacity ?? symbol.attribute.opacity;\n        obj.fillOpacity = symbol.attribute.fillOpacity;\n        obj.stroke = a.stroke ?? symbol.attribute.stroke;\n        obj.lineWidth = a.lineWidth ?? symbol.attribute.lineWidth;\n        a = obj;\n      }\n      const _runFill = () => {\n        if (a.fill) {\n          if (fillCb) {\n            fillCb(context, symbol.attribute, symbolAttribute);\n          } else {\n            context.setCommonStyle(symbol, a, originX - x, originY - y, symbolAttribute);\n            context.fill();\n          }\n        }\n      };\n      const _runStroke = () => {\n        if (a.stroke) {\n          if (strokeCb) {\n            strokeCb(context, symbol.attribute, symbolAttribute);\n          } else if (sVisible && clipRange >= 1) {\n            context.setStrokeStyle(symbol, a, (originX - x) / scaleX, (originY - y) / scaleY, symbolAttribute);\n            context.stroke();\n          }\n        }\n      };\n      if (!fillStrokeOrder) {\n        _runFill();\n        _runStroke();\n      } else {\n        _runStroke();\n        _runFill();\n      }\n    };\n    let _size = size;\n    let _x = x;\n    let _y = y;\n    let _z = z;\n    const camera = context.camera;\n    if (keepDirIn3d && camera && context.project) {\n      const p = context.project(x, y, z);\n      context.camera = null;\n      _size = isArray(size) ? [size[0] * scaleX, size[1] * scaleY] : size * scaleX;\n      _x = p.x;\n      _y = p.y;\n      _z = undefined;\n    }\n    if (parsedPath.draw(context, size, _x, _y, _z, callback) === false) {\n      context.closePath();\n    }\n    context.camera = camera;\n\n    // shadow\n    context.setShadowBlendStyle && context.setShadowBlendStyle(symbol, symbol.attribute, symbolAttribute);\n\n    this.beforeRenderStep(\n      symbol,\n      context,\n      x,\n      y,\n      doFill,\n      doStroke,\n      fVisible,\n      sVisible,\n      symbolAttribute,\n      drawContext,\n      fillCb,\n      strokeCb\n    );\n\n    // if (fill !== false) {\n    //   context.setCommonStyle(symbol.attribute, symbolAttribute);\n    //   context.fill();\n    // }\n    // if (stroke !== false) {\n    //   context.setStrokeStyle(symbol.attribute, symbolAttribute);\n    //   context.stroke();\n    // }\n\n    // svg就不用fill和stroke了\n    const _runFill = () => {\n      if (doFill && !parsedPath.isSvg) {\n        if (fillCb) {\n          fillCb(context, symbol.attribute, symbolAttribute);\n        } else if (fVisible) {\n          context.setCommonStyle(symbol, symbol.attribute, originX - x, originY - y, symbolAttribute);\n          context.fill();\n        }\n      }\n    };\n    const _runStroke = () => {\n      if (doStroke && !parsedPath.isSvg) {\n        if (strokeCb) {\n          strokeCb(context, symbol.attribute, symbolAttribute);\n        } else if (sVisible && clipRange >= 1) {\n          // 如果clipRange < 1，就需要靠afterRender进行绘制了\n          context.setStrokeStyle(\n            symbol,\n            symbol.attribute,\n            (originX - x) / scaleX,\n            (originY - y) / scaleY,\n            symbolAttribute\n          );\n          context.stroke();\n        }\n      }\n    };\n\n    if (!fillStrokeOrder) {\n      _runFill();\n      _runStroke();\n    } else {\n      _runStroke();\n      _runFill();\n    }\n\n    this.afterRenderStep(\n      symbol,\n      context,\n      x,\n      y,\n      doFill,\n      doStroke,\n      fVisible,\n      sVisible,\n      symbolAttribute,\n      drawContext,\n      fillCb,\n      strokeCb\n    );\n  }\n\n  draw(symbol: ISymbol, renderService: IRenderService, drawContext: IDrawContext, params?: IGraphicRenderDrawParams) {\n    const symbolAttribute = getTheme(symbol, params?.theme).symbol;\n    this._draw(symbol, symbolAttribute, false, drawContext, params);\n  }\n}\n"]}