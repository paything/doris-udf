{"version":3,"sources":["../src/hierarchy.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAGzC,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,OAA6B,EAAE,EAAE;IAClE,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;;QAC9B,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACrB,IAAI,MAAA,IAAI,CAAC,QAAQ,0CAAE,MAAM,EAAE;gBACzB,IAAI,CAAC,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChD;iBAAM;gBACL,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aAChB;SACF;QAED,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC;AACb,CAAC,CAAC","file":"hierarchy.js","sourcesContent":["import { isNil } from '@visactor/vutils';\nimport type { HierarchyNodeDatum } from './interface';\n\nexport const calculateNodeValue = (subTree: HierarchyNodeDatum[]) => {\n  let sum = 0;\n  subTree.forEach((node, index) => {\n    if (isNil(node.value)) {\n      if (node.children?.length) {\n        node.value = calculateNodeValue(node.children);\n      } else {\n        node.value = 0;\n      }\n    }\n\n    sum += Math.abs(node.value);\n  });\n\n  return sum;\n};\n"]}