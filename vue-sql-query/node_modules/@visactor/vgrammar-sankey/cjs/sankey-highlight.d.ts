import { BaseInteraction } from '@visactor/vgrammar-core';
import type { IElement, IGlyphElement, IMark, IView, InteractionEvent, SankeyHighlightOptions } from '@visactor/vgrammar-core';
export declare class SankeyHighlight extends BaseInteraction<SankeyHighlightOptions> {
    static type: string;
    type: string;
    static defaultOptions: SankeyHighlightOptions;
    options: SankeyHighlightOptions;
    protected _nodeMark?: IMark;
    protected _linkMark?: IMark;
    protected _activeElement?: IElement | IGlyphElement;
    constructor(view: IView, options?: SankeyHighlightOptions);
    protected getEvents(): {
        type: import("@visactor/vgrammar-core").EventType | "none";
        handler: (e: InteractionEvent) => void;
    }[];
    clearPrevElements(): void;
    parseUpstreamLinks(element: IElement, isNode: boolean): any[];
    highlightAdjacentElement: (element: IElement, isNode: boolean) => (string | number)[];
    highlightRelatedBySourceTarget: (element: IElement, isNode: boolean) => (string | number)[];
    highlightRelatedElement: (element: IElement, isNode: boolean) => (string | number)[];
    highlightElement: (element: IElement, isNode: boolean) => void;
    handleStart: (e: InteractionEvent) => void;
    handleReset: (e: InteractionEvent) => void;
}
