import { Factory } from "@visactor/vgrammar-core";

import { transform as treemapTransform } from "./treemap/transform";

import { transform as sunburtTransform } from "./sunburst/transform";

import { transform as circlePackingTransform } from "./circle-packing/transform";

import { transform as treeTransform } from "./tree/transform";

export { TreemapLayout } from "./treemap/layout";

export { CirclePackingLayout } from "./circle-packing/layout";

export { SunburstLayout } from "./sunburst/layout";

export { TreeLayout } from "./tree/layout";

export * from "./interface";

export * from "./format";

export * from "./utils";

export { treeTransform, sunburtTransform, circlePackingTransform, treemapTransform };

export const registerTreemapTransforms = () => {
    Factory.registerTransform("treemap", {
        transform: treemapTransform,
        markPhase: "beforeJoin"
    }, !0);
};

export const registerSunburstTransforms = () => {
    Factory.registerTransform("sunburst", {
        transform: sunburtTransform,
        markPhase: "beforeJoin"
    }, !0);
};

export const registerCirclePackingTransforms = () => {
    Factory.registerTransform("circlePacking", {
        transform: circlePackingTransform,
        markPhase: "beforeJoin"
    }, !0);
};

export const registerTreeTransforms = () => {
    Factory.registerTransform("tree", {
        transform: treeTransform,
        markPhase: "beforeJoin"
    }, !0);
};

export const registerAllHierarchyTransforms = () => {
    Factory.registerTransform("treemap", {
        transform: treemapTransform,
        markPhase: "beforeJoin"
    }, !0), Factory.registerTransform("sunburst", {
        transform: sunburtTransform,
        markPhase: "beforeJoin"
    }, !0), Factory.registerTransform("circlePacking", {
        transform: circlePackingTransform,
        markPhase: "beforeJoin"
    }, !0), Factory.registerTransform("tree", {
        transform: treeTransform,
        markPhase: "beforeJoin"
    }, !0);
};
//# sourceMappingURL=index.js.map