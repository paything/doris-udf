"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    void 0 === k2 && (k2 = k);
    var desc = Object.getOwnPropertyDescriptor(m, k);
    desc && !("get" in desc ? !m.__esModule : desc.writable || desc.configurable) || (desc = {
        enumerable: !0,
        get: function() {
            return m[k];
        }
    }), Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    void 0 === k2 && (k2 = k), o[k2] = m[k];
}), __exportStar = this && this.__exportStar || function(m, exports) {
    for (var p in m) "default" === p || Object.prototype.hasOwnProperty.call(exports, p) || __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.registerAllHierarchyTransforms = exports.registerTreeTransforms = exports.registerCirclePackingTransforms = exports.registerSunburstTransforms = exports.registerTreemapTransforms = exports.treemapTransform = exports.circlePackingTransform = exports.sunburtTransform = exports.treeTransform = exports.TreeLayout = exports.SunburstLayout = exports.CirclePackingLayout = exports.TreemapLayout = void 0;

const vgrammar_core_1 = require("@visactor/vgrammar-core"), transform_1 = require("./treemap/transform");

Object.defineProperty(exports, "treemapTransform", {
    enumerable: !0,
    get: function() {
        return transform_1.transform;
    }
});

const transform_2 = require("./sunburst/transform");

Object.defineProperty(exports, "sunburtTransform", {
    enumerable: !0,
    get: function() {
        return transform_2.transform;
    }
});

const transform_3 = require("./circle-packing/transform");

Object.defineProperty(exports, "circlePackingTransform", {
    enumerable: !0,
    get: function() {
        return transform_3.transform;
    }
});

const transform_4 = require("./tree/transform");

Object.defineProperty(exports, "treeTransform", {
    enumerable: !0,
    get: function() {
        return transform_4.transform;
    }
});

var layout_1 = require("./treemap/layout");

Object.defineProperty(exports, "TreemapLayout", {
    enumerable: !0,
    get: function() {
        return layout_1.TreemapLayout;
    }
});

var layout_2 = require("./circle-packing/layout");

Object.defineProperty(exports, "CirclePackingLayout", {
    enumerable: !0,
    get: function() {
        return layout_2.CirclePackingLayout;
    }
});

var layout_3 = require("./sunburst/layout");

Object.defineProperty(exports, "SunburstLayout", {
    enumerable: !0,
    get: function() {
        return layout_3.SunburstLayout;
    }
});

var layout_4 = require("./tree/layout");

Object.defineProperty(exports, "TreeLayout", {
    enumerable: !0,
    get: function() {
        return layout_4.TreeLayout;
    }
}), __exportStar(require("./interface"), exports), __exportStar(require("./format"), exports), 
__exportStar(require("./utils"), exports);

const registerTreemapTransforms = () => {
    vgrammar_core_1.Factory.registerTransform("treemap", {
        transform: transform_1.transform,
        markPhase: "beforeJoin"
    }, !0);
};

exports.registerTreemapTransforms = registerTreemapTransforms;

const registerSunburstTransforms = () => {
    vgrammar_core_1.Factory.registerTransform("sunburst", {
        transform: transform_2.transform,
        markPhase: "beforeJoin"
    }, !0);
};

exports.registerSunburstTransforms = registerSunburstTransforms;

const registerCirclePackingTransforms = () => {
    vgrammar_core_1.Factory.registerTransform("circlePacking", {
        transform: transform_3.transform,
        markPhase: "beforeJoin"
    }, !0);
};

exports.registerCirclePackingTransforms = registerCirclePackingTransforms;

const registerTreeTransforms = () => {
    vgrammar_core_1.Factory.registerTransform("tree", {
        transform: transform_4.transform,
        markPhase: "beforeJoin"
    }, !0);
};

exports.registerTreeTransforms = registerTreeTransforms;

const registerAllHierarchyTransforms = () => {
    (0, exports.registerTreemapTransforms)(), (0, exports.registerSunburstTransforms)(), 
    (0, exports.registerCirclePackingTransforms)(), (0, exports.registerTreeTransforms)();
};

exports.registerAllHierarchyTransforms = registerAllHierarchyTransforms;
//# sourceMappingURL=index.js.map