{"version":3,"sources":["../src/list-editor.ts"],"names":[],"mappings":"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","file":"list-editor.js","sourcesContent":["import type { EditContext, IEditor, Placement, RectProps } from './types';\nexport interface ListEditorConfig {\n  values: string[];\n}\n\nexport class ListEditor implements IEditor {\n  editorType: string = 'Input';\n  input?: HTMLInputElement;\n  editorConfig?: ListEditorConfig;\n  container?: HTMLElement;\n  element?: HTMLSelectElement;\n  successCallback?: () => void;\n\n  constructor(editorConfig: ListEditorConfig) {\n    this.editorConfig = editorConfig;\n  }\n\n  createElement(value: string) {\n    // create select tag\n    const select = document.createElement('select');\n    select.setAttribute('type', 'text');\n    select.style.position = 'absolute';\n    select.style.padding = '4px';\n    select.style.width = '100%';\n    select.style.boxSizing = 'border-box';\n    select.style.backgroundColor = '#FFFFFF';\n    select.style.borderRadius = '0px';\n    select.style.border = '2px solid #d9d9d9';\n    // #region 为了保证input在focus时，没有圆角\n    select.addEventListener('focus', () => {\n      select.style.borderColor = '#4A90E2';\n      select.style.outline = 'none';\n    });\n\n    select.addEventListener('blur', () => {\n      select.style.borderColor = '#d9d9d9';\n      // input.style.boxShadow = 'none';\n    });\n\n    this.element = select;\n\n    // create option tags\n    const { values } = this.editorConfig;\n    let opsStr = '';\n    values.forEach(item => {\n      opsStr +=\n        item === value\n          ? `<option value=\"${item}\" selected>${item}</option>`\n          : `<option value=\"${item}\" >${item}</option>`;\n    });\n    select.innerHTML = opsStr;\n\n    this.container.appendChild(select);\n    // this._bindSelectChangeEvent();\n  }\n\n  _bindSelectChangeEvent() {\n    this.element.addEventListener('change', () => {\n      // this.successCallback();\n    });\n  }\n\n  setValue(value: string) {\n    // do nothing\n  }\n\n  getValue() {\n    return this.element.value;\n  }\n\n  onStart({ container, value, referencePosition, endEdit }: EditContext) {\n    this.container = container;\n    this.successCallback = endEdit;\n\n    this.createElement(value);\n\n    if (value !== undefined && value !== null) {\n      this.setValue(value);\n    }\n    if (referencePosition?.rect) {\n      this.adjustPosition(referencePosition.rect);\n    }\n    this.element.focus();\n  }\n\n  adjustPosition(rect: RectProps) {\n    //使border均分input位置rect的上下左右\n    const borderWidth = 2;\n    const top = rect.top - borderWidth / 2;\n    const left = rect.left - borderWidth / 2;\n    const width = rect.width + borderWidth;\n    const height = rect.height + borderWidth;\n\n    this.element.style.top = top + 'px';\n    this.element.style.left = left + 'px';\n    this.element.style.width = width + 'px';\n    this.element.style.height = height + 'px';\n  }\n\n  endEditing() {\n    // do nothing\n  }\n\n  onEnd() {\n    this.container.removeChild(this.element);\n  }\n\n  isEditorElement(target: HTMLElement) {\n    return target === this.element;\n  }\n}\n"]}