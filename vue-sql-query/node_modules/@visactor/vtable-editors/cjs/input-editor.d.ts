import type { CellAddress, EditContext, IEditor, RectProps } from './types';
import type { ValidateEnum } from './types';
export interface InputEditorConfig {
    readonly?: boolean;
}
export declare class InputEditor implements IEditor {
    editorType: string;
    editorConfig: InputEditorConfig;
    container: HTMLElement;
    successCallback?: () => void;
    element?: HTMLInputElement;
    constructor(editorConfig?: InputEditorConfig);
    createElement(): void;
    setValue(value: string): void;
    getValue(): string;
    onStart({ value, referencePosition, container, endEdit }: EditContext<string>): void;
    adjustPosition(rect: RectProps): void;
    endEditing(): void;
    onEnd(): void;
    isEditorElement(target: HTMLElement): boolean;
    validateValue(newValue?: any, oldValue?: any, position?: CellAddress, table?: any): boolean | ValidateEnum;
}
