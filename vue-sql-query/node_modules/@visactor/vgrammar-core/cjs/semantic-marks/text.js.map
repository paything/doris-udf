{"version":3,"sources":["../src/semantic-marks/text.ts"],"names":[],"mappings":";;;AAAA,0CAAiD;AAEjD,uCAAoC;AACpC,mDAA0D;AAE1D,MAAa,IAAK,SAAQ,WAAI;IAK5B,cAAc,CAAC,SAAc,EAAE,QAAiB;QAC9C,MAAM,aAAa,GAAG,SAAS,IAAI,SAAS,CAAC,UAAU,CAAC;QAExD,MAAM,MAAM,GACV,aAAa;YACb,CAAC,aAAa,CAAC,QAAQ,KAAK,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;QAEpG,MAAM,WAAW,GAAG,IAAA,2BAAiB,EACnC,IAAa,EACb,MAAM,CAAC,CAAC,CAAC,uBAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,uBAAe,CAAC,IAAI,EACxD,SAAS,CACV,CAAC;QAEF,OAAO,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;IAChE,CAAC;IAED,OAAO;QACL,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;;AAvBH,oBAwBC;AAvBQ,aAAQ,GAAG,uBAAe,CAAC,IAAI,CAAC","file":"text.js","sourcesContent":["import { GrammarMarkType } from '../graph/enums';\nimport type { IMark, MarkSpec } from '../types';\nimport { Mark } from '../view/mark';\nimport { createGraphicItem } from '../graph/util/graphic';\n\nexport class Text extends Mark {\n  static markType = GrammarMarkType.text;\n  declare markType: GrammarMarkType.text;\n  protected declare spec: MarkSpec;\n\n  addGraphicItem(initAttrs: any, groupKey?: string) {\n    const originalAttrs = initAttrs && initAttrs.limitAttrs;\n\n    const isRich =\n      originalAttrs &&\n      (originalAttrs.textType === 'rich' || (originalAttrs.text && originalAttrs.text.type === 'rich'));\n\n    const graphicItem = createGraphicItem(\n      this as IMark,\n      isRich ? GrammarMarkType.richtext : GrammarMarkType.text,\n      initAttrs\n    );\n\n    return super.addGraphicItem(initAttrs, groupKey, graphicItem);\n  }\n\n  release(): void {\n    super.release();\n  }\n}\n"]}