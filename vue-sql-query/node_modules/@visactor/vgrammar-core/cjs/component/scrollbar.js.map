{"version":3,"sources":["../src/component/scrollbar.ts"],"names":[],"mappings":"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","file":"scrollbar.js","sourcesContent":["import { isString, merge, mixin } from '@visactor/vutils';\nimport type { IGraphic } from '@visactor/vrender-core';\nimport type { Direction, OrientType, ScrollBarAttributes } from '@visactor/vrender-components';\n// eslint-disable-next-line no-duplicate-imports\nimport { ScrollBar as ScrollbarComponent } from '@visactor/vrender-components';\nimport type {\n  BaseSingleEncodeSpec,\n  IElement,\n  IGroupMark,\n  ITheme,\n  IView,\n  MarkFunctionType,\n  Nil,\n  RecursivePartial,\n  StateEncodeSpec\n} from '../types';\nimport { ComponentEnum, GrammarMarkType } from '../graph/enums';\nimport type { IScrollbar, ScrollbarSpec } from '../types/component';\nimport { invokeEncoder } from '../graph/mark/encode';\nimport { invokeFunctionType } from '../parse/util';\nimport { Factory } from '../core/factory';\nimport { ScaleComponent } from './scale';\nimport { ScrollbarFilter } from '../interactions/scrollbar-filter';\nimport { Filter, FilterMixin } from '../interactions/filter';\nimport {\n  isHorizontal,\n  isHorizontalPosition,\n  isValidDirection,\n  isValidPosition,\n  isVertical\n} from '@visactor/vgrammar-util';\n\nexport const generateScrollbarAttributes = (\n  groupSize: { width: number; height: number },\n  direction?: Direction,\n  position?: OrientType,\n  theme?: ITheme,\n  addition?: RecursivePartial<ScrollBarAttributes>\n): ScrollBarAttributes => {\n  const scrollbarTheme = theme?.components?.scrollbar;\n\n  let finalDirection: Direction = 'horizontal';\n  let finalPosition: OrientType = 'bottom';\n  if (!isValidDirection(direction) && !isValidPosition(position)) {\n    finalDirection = 'horizontal';\n    finalPosition = 'bottom';\n  } else if (!isValidDirection(direction) && isValidPosition(position)) {\n    finalDirection = isHorizontalPosition(position) ? 'horizontal' : 'vertical';\n    finalPosition = position;\n  } else if (isValidDirection(direction) && !isValidPosition(position)) {\n    finalDirection = direction;\n    finalPosition = isHorizontal(direction) ? 'bottom' : 'right';\n  } else {\n    finalDirection = direction;\n    finalPosition =\n      isHorizontal(direction) && !isHorizontalPosition(position)\n        ? 'bottom'\n        : isVertical(direction) && isHorizontalPosition(position)\n        ? 'right'\n        : position;\n  }\n\n  const attributes: RecursivePartial<ScrollBarAttributes> = { direction: finalDirection };\n  if (isHorizontal(finalDirection)) {\n    const size = addition.height ?? scrollbarTheme?.height ?? 12;\n\n    // top or bottom\n    if (finalPosition === 'top') {\n      Object.assign(attributes, {\n        width: groupSize.width,\n        height: size,\n        x: 0,\n        y: 0\n      });\n    } else {\n      Object.assign(attributes, {\n        width: groupSize.width,\n        height: size,\n        x: 0,\n        y: groupSize.height - size\n      });\n    }\n  } else {\n    const size = addition.width ?? scrollbarTheme?.width ?? 12;\n\n    // left or right\n    if (finalPosition === 'left') {\n      Object.assign(attributes, {\n        width: size,\n        height: groupSize.height,\n        x: 0,\n        y: 0\n      });\n    } else {\n      Object.assign(attributes, {\n        width: size,\n        height: groupSize.height,\n        x: groupSize.width - size,\n        y: 0\n      });\n    }\n  }\n\n  return merge({}, scrollbarTheme, attributes, addition ?? {});\n};\n\nexport class Scrollbar extends ScaleComponent implements IScrollbar {\n  static readonly componentType: string = ComponentEnum.scrollbar;\n  protected declare spec: ScrollbarSpec;\n\n  constructor(view: IView, group?: IGroupMark) {\n    super(view, ComponentEnum.scrollbar, group);\n    this.spec.componentType = ComponentEnum.scrollbar;\n  }\n\n  protected parseAddition(spec: ScrollbarSpec) {\n    super.parseAddition(spec);\n    this.container(spec.container);\n    this.direction(spec.direction);\n    this.position(spec.position);\n    return this;\n  }\n\n  container(container: IGroupMark | string | Nil): this {\n    if (this.spec.container) {\n      const prevContainer = isString(this.spec.container)\n        ? this.view.getMarkById(this.spec.container)\n        : this.spec.container;\n      this.detach(prevContainer);\n    }\n    this.spec.container = container;\n    if (container) {\n      const nextContainer = isString(container) ? this.view.getMarkById(container) : container;\n      this.attach(nextContainer);\n    }\n    this.commit();\n    return this;\n  }\n\n  direction(direction: MarkFunctionType<Direction> | Nil) {\n    return this.setFunctionSpec(direction, 'direction');\n  }\n\n  position(position: MarkFunctionType<OrientType> | Nil) {\n    return this.setFunctionSpec(position, 'position');\n  }\n\n  setScrollStart(start: number) {\n    const scrollbar = this.getGroupGraphicItem() as unknown as ScrollbarComponent;\n    const range = scrollbar?.attribute?.range;\n    if (scrollbar && range) {\n      const nextRange: [number, number] = [start, range[1] - range[0] + start];\n      scrollbar.setScrollRange(nextRange);\n    }\n    return this;\n  }\n\n  getScrollRange() {\n    const scrollbar = this.getGroupGraphicItem() as unknown as ScrollbarComponent;\n\n    if (scrollbar) {\n      return scrollbar.getScrollRange();\n    }\n  }\n\n  addGraphicItem(attrs: any, groupKey?: string) {\n    const defaultAttributes = { range: [0, 1] };\n    const initialAttributes = merge(defaultAttributes, attrs);\n    const graphicItem = Factory.createGraphicComponent(ComponentEnum.scrollbar, initialAttributes, {\n      skipDefault: this.spec.skipTheme\n    });\n    return super.addGraphicItem(initialAttributes, groupKey, graphicItem);\n  }\n\n  protected _updateComponentEncoders() {\n    const encoders = Object.assign({ update: {} }, this.spec.encode);\n    const componentEncoders: StateEncodeSpec = Object.keys(encoders).reduce((res, state) => {\n      const encoder = encoders[state];\n      if (encoder) {\n        res[state] = {\n          callback: (datum: any, element: IElement, parameters: any) => {\n            const theme = this.spec.skipTheme ? null : this.view.getCurrentTheme();\n            const direction = invokeFunctionType(this.spec.direction, parameters, datum, element);\n            const position = invokeFunctionType(this.spec.position, parameters, datum, element);\n            const addition = invokeEncoder(encoder as BaseSingleEncodeSpec, datum, element, parameters);\n            const targetMark = this.spec.container\n              ? isString(this.spec.container)\n                ? this.view.getMarkById(this.spec.container)\n                : this.spec.container\n              : null;\n            const groupMark = targetMark && targetMark.markType === GrammarMarkType.group ? targetMark : this.group;\n            const groupGraphicItem = groupMark.getGroupGraphicItem();\n            const size = groupGraphicItem\n              ? {\n                  width: groupGraphicItem.attribute.width ?? groupGraphicItem.AABBBounds.width(),\n                  height: groupGraphicItem.attribute.height ?? groupGraphicItem.AABBBounds.height()\n                }\n              : { width: this.view.width(), height: this.view.height() };\n            return generateScrollbarAttributes(size, direction, position, theme, addition);\n          }\n        };\n      }\n      return res;\n    }, {});\n    this._encoders = componentEncoders;\n  }\n}\n\nexport const registerScrollbar = () => {\n  Factory.registerGraphicComponent(\n    ComponentEnum.scrollbar,\n    (attrs: ScrollBarAttributes) => new ScrollbarComponent(attrs) as unknown as IGraphic\n  );\n\n  Factory.registerComponent(ComponentEnum.scrollbar, Scrollbar);\n\n  mixin(Filter, FilterMixin);\n  Factory.registerInteraction(ScrollbarFilter.type, ScrollbarFilter);\n};\n"]}