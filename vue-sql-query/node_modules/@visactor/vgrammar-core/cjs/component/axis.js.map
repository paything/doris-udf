{"version":3,"sources":["../src/component/axis.ts"],"names":[],"mappings":"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","file":"axis.js","sourcesContent":["import { isNil, isString, merge } from '@visactor/vutils';\nimport type { IGraphic } from '@visactor/vrender-core';\nimport type { CircleAxisAttributes, LineAxisAttributes, ComponentOptions } from '@visactor/vrender-components';\n// eslint-disable-next-line no-duplicate-imports\nimport { CircleAxis as CircleAxisComponent, LineAxis as LineAxisComponent } from '@visactor/vrender-components';\nimport type { IBaseScale } from '@visactor/vscale';\nimport type {\n  BaseSingleEncodeSpec,\n  IElement,\n  IGroupMark,\n  IScale,\n  ITheme,\n  IView,\n  MarkFunctionType,\n  MarkRelativeItemSpec,\n  Nil,\n  RecursivePartial,\n  SimpleSignalType,\n  StateEncodeSpec\n} from '../types';\nimport { AxisEnum, ComponentEnum } from '../graph/enums';\nimport type { AxisSpec, AxisType, IAxis } from '../types/component';\nimport { ScaleComponent } from './scale';\nimport { invokeEncoder } from '../graph/mark/encode';\nimport { invokeFunctionType } from '../parse/util';\nimport type { IPolarCoordinate, IBaseCoordinate } from '@visactor/vgrammar-coordinate';\nimport { Factory } from '../core/factory';\n\nexport const generateLineAxisAttributes = (\n  scale: IBaseScale,\n  theme?: ITheme,\n  addition?: RecursivePartial<LineAxisAttributes>,\n  tickCount?: number\n): LineAxisAttributes => {\n  const axisTheme = theme?.components?.axis ?? {};\n  if (!scale) {\n    return merge({}, axisTheme, addition ?? {});\n  }\n  const tickData = scale.tickData?.(tickCount) ?? [];\n\n  const items = [\n    tickData.map(tick => ({\n      id: tick.index,\n      label: tick.tick,\n      value: tick.value,\n      rawValue: tick.tick\n    }))\n  ];\n  return merge({}, axisTheme, { items }, addition ?? {});\n};\n\nexport const generateCircleAxisAttributes = (\n  scale: IBaseScale,\n  theme?: ITheme,\n  addition?: RecursivePartial<CircleAxisAttributes>,\n  tickCount?: number\n): CircleAxisAttributes => {\n  const axisTheme = theme?.components?.circleAxis ?? {};\n  if (!scale) {\n    return merge({}, axisTheme, addition ?? {});\n  }\n  const tickData = scale.tickData?.(tickCount) ?? [];\n  const items = [\n    tickData.map(tick => ({\n      id: tick.index,\n      label: tick.tick,\n      value: tick.value,\n      rawValue: tick.tick\n    }))\n  ];\n  return merge({}, axisTheme, { items }, addition ?? {});\n};\n\nexport const generateCoordinateAxisAttribute = (\n  scale: IScale,\n  coordinate: IBaseCoordinate,\n  inside: boolean,\n  baseValue: number,\n  layout: MarkRelativeItemSpec,\n  isGrid?: boolean\n) => {\n  const axisPosition = scale.getCoordinateAxisPosition();\n  if (layout && layout.position === 'auto') {\n    // FIXME: too hack\n    layout.position = inside ? 'content' : axisPosition;\n  }\n\n  const axisPoints = scale.getCoordinateAxisPoints(baseValue);\n\n  if (axisPoints) {\n    const start = axisPoints[0];\n    const end = axisPoints[1];\n    const res: any = {\n      start,\n      end,\n      verticalFactor:\n        (axisPosition === 'top' || axisPosition === 'left' ? -1 : 1) *\n        (inside ? -1 : 1) *\n        (scale.getSpec().range?.reversed ? -1 : 1)\n    };\n\n    if (isGrid && coordinate.type === 'polar') {\n      const angle = (coordinate as IPolarCoordinate).angle();\n\n      res.center = (coordinate as IPolarCoordinate).origin();\n      res.startAngle = angle[0];\n      res.endAngle = angle[1];\n    }\n\n    return res;\n  }\n\n  const radius = (coordinate as IPolarCoordinate).radius();\n  const angle = (coordinate as IPolarCoordinate).angle();\n  return {\n    center: (coordinate as IPolarCoordinate).origin(),\n    radius: radius[1],\n    innerRadius: radius[0],\n    inside: inside,\n    startAngle: angle[0],\n    endAngle: angle[1]\n  };\n};\n\nexport class Axis extends ScaleComponent implements IAxis {\n  static readonly componentType: string = ComponentEnum.axis;\n\n  protected declare spec: AxisSpec;\n\n  private _axisComponentType: keyof typeof AxisEnum;\n\n  constructor(view: IView, group?: IGroupMark, mode?: '2d' | '3d') {\n    super(view, ComponentEnum.axis, group);\n    this.spec.componentType = ComponentEnum.axis;\n    this.mode = mode;\n  }\n\n  protected parseAddition(spec: AxisSpec) {\n    super.parseAddition(spec);\n\n    this.axisType(spec.axisType);\n    this.tickCount(spec.tickCount);\n    this.inside(spec.inside);\n    this.baseValue(spec.baseValue);\n\n    return this;\n  }\n\n  scale(scale?: IScale | string | Nil) {\n    super.scale(scale);\n    this._axisComponentType = null;\n    return this;\n  }\n\n  axisType(axisType: AxisType | Nil) {\n    this.spec.axisType = axisType;\n    this._axisComponentType = null;\n    this._prepareRejoin();\n    this.commit();\n    return this;\n  }\n\n  addGraphicItem(attrs: any, groupKey?: string) {\n    const defaultAttributes = { x: 0, y: 0, start: { x: 0, y: 0 }, end: { x: 0, y: 0 } };\n    const initialAttributes = merge(defaultAttributes, attrs);\n    const graphicItem = Factory.createGraphicComponent(this._getAxisComponentType(), initialAttributes, {\n      mode: this.mode,\n      skipDefault: this.spec.skipTheme\n    });\n    return super.addGraphicItem(initialAttributes, groupKey, graphicItem);\n  }\n\n  tickCount(tickCount: SimpleSignalType<number> | Nil) {\n    const scaleGrammar = isString(this.spec.scale) ? this.view.getScaleById(this.spec.scale) : this.spec.scale;\n\n    if (scaleGrammar) {\n      scaleGrammar.tickCount(tickCount);\n    }\n\n    return this.setFunctionSpec(tickCount, 'tickCount');\n  }\n\n  inside(inside: MarkFunctionType<boolean> | Nil) {\n    return this.setFunctionSpec(inside, 'inside');\n  }\n\n  baseValue(baseValue: MarkFunctionType<number> | Nil) {\n    return this.setFunctionSpec(baseValue, 'baseValue');\n  }\n\n  getAxisComponentType() {\n    return this._axisComponentType;\n  }\n\n  protected _updateComponentEncoders() {\n    const scaleGrammar = isString(this.spec.scale) ? this.view.getScaleById(this.spec.scale) : this.spec.scale;\n    const encoders = Object.assign({ update: {} }, this.spec.encode);\n    const componentEncoders: StateEncodeSpec = Object.keys(encoders).reduce((res, state) => {\n      const encoder = encoders[state];\n      if (encoder) {\n        res[state] = {\n          callback: (datum: any, element: IElement, parameters: any) => {\n            const theme = this.spec.skipTheme ? null : this.view.getCurrentTheme();\n            let addition = invokeEncoder(encoder as BaseSingleEncodeSpec, datum, element, parameters);\n            const inside = invokeFunctionType(this.spec.inside, parameters, datum, element);\n            const baseValue = invokeFunctionType(this.spec.baseValue, parameters, datum, element);\n\n            const coordinate = scaleGrammar?.getCoordinate?.();\n            if (coordinate) {\n              addition = Object.assign(\n                generateCoordinateAxisAttribute(\n                  scaleGrammar,\n                  coordinate,\n                  inside,\n                  baseValue,\n                  this.spec.layout as MarkRelativeItemSpec\n                ),\n                addition\n              );\n            }\n\n            const scale = scaleGrammar?.getScale?.();\n            const tickCount = invokeFunctionType(this.spec.tickCount, parameters, datum, element);\n\n            switch (this._getAxisComponentType()) {\n              case AxisEnum.lineAxis:\n                return generateLineAxisAttributes(scale, theme, addition, tickCount);\n              case AxisEnum.circleAxis:\n                return generateCircleAxisAttributes(scale, theme, addition, tickCount);\n            }\n            return addition;\n          }\n        };\n      }\n      return res;\n    }, {});\n    this._encoders = componentEncoders;\n  }\n\n  private _getAxisComponentType() {\n    if (this._axisComponentType) {\n      return this._axisComponentType;\n    }\n\n    let type = this.spec.axisType;\n\n    if (isNil(type)) {\n      const scaleGrammar = isString(this.spec.scale) ? this.view.getScaleById(this.spec.scale) : this.spec.scale;\n\n      type = scaleGrammar?.getCoordinate?.() ? (scaleGrammar.getCoordinateAxisPoints() ? 'line' : 'circle') : 'line';\n    }\n\n    this._axisComponentType = type === 'circle' ? AxisEnum.circleAxis : AxisEnum.lineAxis;\n\n    return this._axisComponentType;\n  }\n}\n\nexport const registerAxis = () => {\n  Factory.registerGraphicComponent(\n    AxisEnum.lineAxis,\n    (attrs: LineAxisAttributes, options?: ComponentOptions) =>\n      new LineAxisComponent(attrs, options) as unknown as IGraphic\n  );\n  Factory.registerGraphicComponent(\n    AxisEnum.circleAxis,\n    (attrs: CircleAxisAttributes) => new CircleAxisComponent(attrs) as unknown as IGraphic\n  );\n\n  Factory.registerComponent(ComponentEnum.axis, Axis);\n};\n\nexport const registerLineAxis = () => {\n  Factory.registerGraphicComponent(\n    AxisEnum.lineAxis,\n    (attrs: LineAxisAttributes, options?: ComponentOptions) =>\n      new LineAxisComponent(attrs, options) as unknown as IGraphic\n  );\n\n  Factory.registerComponent(ComponentEnum.axis, Axis);\n};\n\nexport const registerCircleAxis = () => {\n  Factory.registerGraphicComponent(\n    AxisEnum.circleAxis,\n    (attrs: CircleAxisAttributes) => new CircleAxisComponent(attrs) as unknown as IGraphic\n  );\n\n  Factory.registerComponent(ComponentEnum.axis, Axis);\n};\n"]}