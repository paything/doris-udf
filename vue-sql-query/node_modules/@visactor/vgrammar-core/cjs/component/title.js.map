{"version":3,"sources":["../src/component/title.ts"],"names":[],"mappings":"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","file":"title.js","sourcesContent":["import { isValid, merge } from '@visactor/vutils';\nimport type { IGraphic, IRichTextCharacter } from '@visactor/vrender-core';\nimport type { TitleAttrs } from '@visactor/vrender-components';\n// eslint-disable-next-line no-duplicate-imports\nimport { Title as TitleComponent } from '@visactor/vrender-components';\nimport type {\n  BaseSingleEncodeSpec,\n  IElement,\n  IGroupMark,\n  ITheme,\n  IView,\n  MarkFunctionType,\n  Nil,\n  RecursivePartial,\n  StateEncodeSpec\n} from '../types';\nimport { ComponentEnum } from '../graph/enums';\nimport type { ITitle, TitleSpec } from '../types/component';\nimport { Component } from '../view/component';\nimport { invokeEncoder } from '../graph/mark/encode';\nimport { invokeFunctionType } from '../parse/util';\nimport { Factory } from '../core/factory';\n\nexport const generateTitleAttributes = (\n  title?: string | number | number[] | string[] | IRichTextCharacter[],\n  subTitle?: string | number | number[] | string[] | IRichTextCharacter[],\n  theme?: ITheme,\n  addition?: RecursivePartial<TitleAttrs>\n): TitleAttrs => {\n  const titleTheme = theme?.components?.title;\n  const attributes: Partial<TitleAttrs> = {};\n  if (isValid(title)) {\n    attributes.text = title;\n  }\n  if (isValid(subTitle)) {\n    attributes.subtext = subTitle;\n  }\n  return merge({}, titleTheme, attributes, addition ?? {});\n};\n\nexport class Title extends Component implements ITitle {\n  static readonly componentType: string = ComponentEnum.title;\n  protected declare spec: TitleSpec;\n\n  constructor(view: IView, group?: IGroupMark) {\n    super(view, ComponentEnum.title, group);\n    this.spec.componentType = ComponentEnum.title;\n  }\n\n  protected parseAddition(spec: TitleSpec) {\n    super.parseAddition(spec);\n    this.title(spec.title);\n    this.subTitle(spec.subTitle);\n    return this;\n  }\n\n  title(text: MarkFunctionType<string | number | number[] | string[] | IRichTextCharacter[]> | Nil) {\n    return this.setFunctionSpec(text, 'title');\n  }\n\n  subTitle(text: MarkFunctionType<string | number | number[] | string[] | IRichTextCharacter[]> | Nil) {\n    return this.setFunctionSpec(text, 'subTitle');\n  }\n\n  protected _updateComponentEncoders() {\n    const encoders = Object.assign({ update: {} }, this.spec.encode);\n    const componentEncoders: StateEncodeSpec = Object.keys(encoders).reduce((res, state) => {\n      const encoder = encoders[state];\n      if (encoder) {\n        res[state] = {\n          callback: (datum: any, element: IElement, parameters: any) => {\n            const theme = this.spec.skipTheme ? null : this.view.getCurrentTheme();\n            const title = invokeFunctionType(this.spec.title, parameters, datum, element);\n            const subTitle = invokeFunctionType(this.spec.subTitle, parameters, datum, element);\n            const addition = invokeEncoder(encoder as BaseSingleEncodeSpec, datum, element, parameters);\n            return generateTitleAttributes(title, subTitle, theme, addition);\n          }\n        };\n      }\n      return res;\n    }, {});\n    this._encoders = componentEncoders;\n  }\n}\n\nexport const registerTitle = () => {\n  Factory.registerGraphicComponent(\n    ComponentEnum.title,\n    (attrs: TitleAttrs) => new TitleComponent(attrs) as unknown as IGraphic\n  );\n\n  Factory.registerComponent(ComponentEnum.title, Title);\n};\n"]}