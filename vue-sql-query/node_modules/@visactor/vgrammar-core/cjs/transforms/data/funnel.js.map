{"version":3,"sources":["../src/transforms/data/funnel.ts"],"names":[],"mappings":"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","file":"funnel.js","sourcesContent":["import { isValidNumber } from '@visactor/vutils';\nimport type { FunnelTransformOption } from '../../types';\n\nexport const transform = (options: FunnelTransformOption, upstreamData: any[]) => {\n  const {\n    field,\n    asTransformRatio,\n    asReachRatio,\n    asHeightRatio,\n    asValueRatio,\n    asNextValueRatio,\n    asLastValueRatio,\n    asLastValue,\n    asCurrentValue,\n    asNextValue,\n    heightVisual = false,\n    isCone = true,\n    range\n  } = options;\n\n  const max = upstreamData.reduce((m, d) => Math.max(m, Number.parseFloat(d[field]) || -Infinity), -Infinity);\n  const min = upstreamData.reduce((m, d) => Math.min(m, Number.parseFloat(d[field]) || Infinity), Infinity);\n  const rangeArr = [range?.min ?? min, range?.max ?? max];\n\n  const data = upstreamData.map((originDatum, index) => {\n    const datum = Object.assign({}, originDatum);\n    const currentValue: number = Number.parseFloat(datum[field]);\n    const lastValue: number = Number.parseFloat(upstreamData[index - 1]?.[field]);\n    const nextValue: number = Number.parseFloat(upstreamData[index + 1]?.[field]);\n\n    const transformRatio = !isValidNumber(nextValue * currentValue) ? null : nextValue / currentValue;\n\n    const reachRatio = !isValidNumber(currentValue * currentValue) ? null : currentValue / lastValue;\n\n    asLastValue && (datum[asLastValue] = lastValue);\n    asNextValue && (datum[asNextValue] = nextValue);\n    asTransformRatio && (datum[asTransformRatio] = transformRatio);\n    asReachRatio && (datum[asReachRatio] = index === 0 ? 1 : reachRatio);\n    asHeightRatio && (datum[asHeightRatio] = heightVisual === true ? transformRatio : 1 / upstreamData.length);\n    asValueRatio && (datum[asValueRatio] = currentValue / rangeArr[1]);\n    asNextValueRatio &&\n      (datum[asNextValueRatio] =\n        index === upstreamData.length - 1 ? (isCone ? 0 : datum[asValueRatio]) : nextValue / rangeArr[1]);\n    asLastValueRatio && (datum[asLastValueRatio] = index === 0 ? 1 : lastValue / rangeArr[1]);\n    asCurrentValue && (datum[asCurrentValue] = currentValue);\n\n    return datum;\n  });\n\n  return data;\n};\n"]}