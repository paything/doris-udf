{"version":3,"sources":["../src/transforms/mark/jitter.ts"],"names":[],"mappings":"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","file":"jitter.js","sourcesContent":["import type { IElement, JitterTransformOptions, JitterXTransformOptions, JitterYTransformOptions } from '../../types';\nimport { isNil } from '@visactor/vutils';\nimport { extent } from '@visactor/vgrammar-util';\nimport { getBandWidthOfScale } from '../../util/scale';\n\nconst jitterByChannel = (options: JitterTransformOptions, upstreamData: IElement[], channel: 'x' | 'y') => {\n  const mark = upstreamData[0].mark;\n  const scale = mark.getScalesByChannel()?.[channel];\n  const random = options.random ?? Math.random;\n  const ratio = Math.min((channel === 'x' ? options.widthRatio : options.heightRatio) ?? 0.4, 0.5);\n  const bandSize = (channel === 'x' ? options.bandWidth : options.bandHeight) ?? getBandWidthOfScale(scale);\n\n  if (isNil(bandSize)) {\n    let domain = extent(upstreamData, el => el.getItemAttribute(channel));\n\n    if (isNil(domain[0]) || isNil(domain[1]) || domain[0] === domain[1]) {\n      const viewBox = mark.view.getViewBox();\n      domain = channel === 'x' ? [viewBox.x1, viewBox.x2] : [viewBox.y1, viewBox.y2];\n    }\n    const length = upstreamData.length;\n\n    upstreamData.forEach((element, index) => {\n      element.setItemAttributes({ [channel]: domain[0] + (domain[1] - domain[0]) * random(index, length) });\n    });\n  } else {\n    const length = upstreamData.length;\n    upstreamData.forEach((element, index) => {\n      const val = element.getItemAttribute(channel);\n      const domain = [val - ratio * bandSize, val + ratio * bandSize];\n      element.setItemAttributes({ [channel]: domain[0] + (domain[1] - domain[0]) * random(index, length) });\n    });\n  }\n};\n\n/**\n * 针对mark的dodge变换，支持x、y方向\n */\nexport const jitterY = (options: JitterYTransformOptions, upstreamData: IElement[]) => {\n  if (!upstreamData || upstreamData.length === 0 || !upstreamData[0]?.mark) {\n    return upstreamData;\n  }\n\n  return jitterByChannel(options, upstreamData, 'y');\n};\n\n/**\n * 针对mark的dodge变换，支持x、y方向\n */\nexport const jitterX = (options: JitterXTransformOptions, upstreamData: IElement[]) => {\n  if (!upstreamData || upstreamData.length === 0 || !upstreamData[0]?.mark) {\n    return upstreamData;\n  }\n\n  return jitterByChannel(options, upstreamData, 'x');\n};\n\n/**\n * 针对mark的dodge变换，支持x、y方向\n */\nexport const transform = (options: JitterTransformOptions, upstreamData: IElement[]) => {\n  if (!upstreamData || upstreamData.length === 0 || !upstreamData[0]?.mark) {\n    return upstreamData;\n  }\n\n  jitterByChannel(options, upstreamData, 'x');\n  jitterByChannel(options, upstreamData, 'y');\n\n  return upstreamData;\n};\n"]}