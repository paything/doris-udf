{"version":3,"sources":["../src/glyph/boxplot.ts"],"names":[],"mappings":"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","file":"boxplot.js","sourcesContent":["import { isValidNumber } from '@visactor/vutils';\nimport type {\n  BarBoxPlotEncoderSpec,\n  BoxPlotEncoderSpec,\n  IAnimationParameters,\n  IGlyphElement,\n  TypeAnimation\n} from '../types';\nimport { Factory } from '../core/factory';\nimport { registerGlyphGraphic, registerRectGraphic, registerRuleGraphic } from '../graph/mark/graphic';\nimport { isHorizontal } from '@visactor/vgrammar-util';\nimport { registerGlyphMark } from '../view/glyph';\n\nexport interface IBoxplotScaleAnimationOptions {\n  center?: number;\n}\n\nconst scaleIn = (\n  computeCenter: (\n    element: IGlyphElement,\n    direction: 'vertical' | 'horizontal',\n    options: IBoxplotScaleAnimationOptions\n  ) => number\n): TypeAnimation<IGlyphElement> => {\n  return (\n    element: IGlyphElement,\n    options: IBoxplotScaleAnimationOptions,\n    animationParameters: IAnimationParameters\n  ) => {\n    const direction =\n      element.getGraphicAttribute('direction', false) ?? element.mark.getGlyphConfig()?.direction ?? 'vertical';\n    const center = computeCenter(element, direction, options);\n    if (!isValidNumber(center)) {\n      return {};\n    }\n    const x = element.getGraphicAttribute('x', false);\n    const y = element.getGraphicAttribute('y', false);\n    const min = element.getGraphicAttribute('min', false);\n    const max = element.getGraphicAttribute('max', false);\n    const q1 = element.getGraphicAttribute('q1', false);\n    const q3 = element.getGraphicAttribute('q3', false);\n    const median = element.getGraphicAttribute('median', false);\n    const animateAttributes: any = { from: { x, y }, to: { x, y } };\n    if (isValidNumber(min)) {\n      animateAttributes.from.min = center;\n      animateAttributes.to.min = min;\n    }\n    if (isValidNumber(max)) {\n      animateAttributes.from.max = center;\n      animateAttributes.to.max = max;\n    }\n    if (isValidNumber(q1)) {\n      animateAttributes.from.q1 = center;\n      animateAttributes.to.q1 = q1;\n    }\n    if (isValidNumber(q3)) {\n      animateAttributes.from.q3 = center;\n      animateAttributes.to.q3 = q3;\n    }\n    if (isValidNumber(median)) {\n      animateAttributes.from.median = center;\n      animateAttributes.to.median = median;\n    }\n    return animateAttributes;\n  };\n};\n\nconst scaleOut = (\n  computeCenter: (\n    element: IGlyphElement,\n    direction: 'vertical' | 'horizontal',\n    options: IBoxplotScaleAnimationOptions\n  ) => number\n): TypeAnimation<IGlyphElement> => {\n  return (\n    element: IGlyphElement,\n    options: IBoxplotScaleAnimationOptions,\n    animationParameters: IAnimationParameters\n  ) => {\n    const direction =\n      element.getGraphicAttribute('direction', false) ?? element.mark.getGlyphConfig()?.direction ?? 'vertical';\n    const center = computeCenter(element, direction, options);\n    if (!isValidNumber(center)) {\n      return {};\n    }\n    const x = element.getGraphicAttribute('x', true);\n    const y = element.getGraphicAttribute('y', true);\n    const min = element.getGraphicAttribute('min', true);\n    const max = element.getGraphicAttribute('max', true);\n    const q1 = element.getGraphicAttribute('q1', true);\n    const q3 = element.getGraphicAttribute('q3', true);\n    const median = element.getGraphicAttribute('median', true);\n    const animateAttributes: any = { from: { x, y }, to: { x, y } };\n    if (isValidNumber(min)) {\n      animateAttributes.to.min = center;\n      animateAttributes.from.min = min;\n    }\n    if (isValidNumber(max)) {\n      animateAttributes.to.max = center;\n      animateAttributes.from.max = max;\n    }\n    if (isValidNumber(q1)) {\n      animateAttributes.to.q1 = center;\n      animateAttributes.from.q1 = q1;\n    }\n    if (isValidNumber(q3)) {\n      animateAttributes.to.q3 = center;\n      animateAttributes.from.q3 = q3;\n    }\n    if (isValidNumber(median)) {\n      animateAttributes.to.median = center;\n      animateAttributes.from.median = median;\n    }\n    return animateAttributes;\n  };\n};\n\nconst computeBoxplotCenter = (\n  glyphElement: IGlyphElement,\n  direction: 'vertical' | 'horizontal',\n  options: IBoxplotScaleAnimationOptions\n) => {\n  if (options && isValidNumber(options.center)) {\n    return options.center;\n  }\n  let median: number;\n  let max: number;\n  let min: number;\n  let q1: number;\n  let q3: number;\n  if (isHorizontal(direction)) {\n    median = glyphElement.getGraphicAttribute('points', false, 'median')?.[0]?.x;\n    max = glyphElement.getGraphicAttribute('points', false, 'max')?.[0]?.x;\n    min = glyphElement.getGraphicAttribute('points', false, 'min')?.[0]?.x;\n\n    const boxWidth = glyphElement.getGraphicAttribute('width', false, 'box');\n    const boxX = glyphElement.getGraphicAttribute('x', false, 'box');\n    q1 = boxX;\n    q3 = boxX + boxWidth;\n  } else {\n    median = glyphElement.getGraphicAttribute('points', false, 'median')?.[0]?.y;\n    max = glyphElement.getGraphicAttribute('points', false, 'max')?.[0]?.y;\n    min = glyphElement.getGraphicAttribute('points', false, 'min')?.[0]?.y;\n\n    const boxHeight = glyphElement.getGraphicAttribute('height', false, 'box');\n    const boxY = glyphElement.getGraphicAttribute('y', false, 'box');\n    q1 = boxY;\n    q3 = boxY + boxHeight;\n  }\n\n  if (isValidNumber(median)) {\n    return median;\n  }\n  if (isValidNumber(q1) && isValidNumber(q3)) {\n    return (q1 + q3) / 2;\n  }\n  if (isValidNumber(max) && isValidNumber(min)) {\n    return (max + min) / 2;\n  }\n  if (isValidNumber(min)) {\n    return min;\n  }\n  if (isValidNumber(max)) {\n    return max;\n  }\n  return NaN;\n};\n\nconst encodeBoxplotSize = (encodeValues: any, datum: any, element: IGlyphElement, config: any) => {\n  const attributes = {\n    shaft: {},\n    box: {},\n    max: {},\n    min: {},\n    median: {}\n  };\n\n  const x = encodeValues.x ?? element.getGraphicAttribute('x', false);\n  const y = encodeValues.y ?? element.getGraphicAttribute('y', false);\n  const width = encodeValues.width ?? element.getGraphicAttribute('width', false);\n  const height = encodeValues.height ?? element.getGraphicAttribute('height', false);\n  const boxWidth = encodeValues.boxWidth ?? element.getGraphicAttribute('boxWidth', false);\n  const boxHeight = encodeValues.boxHeight ?? element.getGraphicAttribute('boxHeight', false);\n  const ruleWidth = encodeValues.ruleWidth ?? element.getGraphicAttribute('ruleWidth', false);\n  const ruleHeight = encodeValues.ruleHeight ?? element.getGraphicAttribute('ruleHeight', false);\n\n  if (config && isHorizontal(config.direction)) {\n    if (isValidNumber(boxHeight)) {\n      Object.assign(attributes.box, { y: y - boxHeight / 2, y1: y + boxHeight / 2 });\n      Object.assign(attributes.median, { y: y - boxHeight / 2, y1: y + boxHeight / 2 });\n    } else {\n      // median rule always has the same length with box rect\n      Object.assign(attributes.box, { y: y - height / 2, y1: y + height / 2 });\n      Object.assign(attributes.median, { y: y - height / 2, y1: y + height / 2 });\n    }\n    if (isValidNumber(ruleHeight)) {\n      Object.assign(attributes.max, { y: y - ruleHeight / 2, y1: y + ruleHeight / 2 });\n      Object.assign(attributes.min, { y: y - ruleHeight / 2, y1: y + ruleHeight / 2 });\n    } else {\n      Object.assign(attributes.max, { y: y - height / 2, y1: y + height / 2 });\n      Object.assign(attributes.min, { y: y - height / 2, y1: y + height / 2 });\n    }\n  } else {\n    if (isValidNumber(boxWidth)) {\n      Object.assign(attributes.box, { x: x - boxWidth / 2, x1: x + boxWidth / 2 });\n      Object.assign(attributes.median, { x: x - boxWidth / 2, x1: x + boxWidth / 2 });\n    } else {\n      Object.assign(attributes.box, { x: x - width / 2, x1: x + width / 2 });\n      Object.assign(attributes.median, { x: x - width / 2, x1: x + width / 2 });\n    }\n    if (isValidNumber(ruleWidth)) {\n      Object.assign(attributes.max, { x: x - ruleWidth / 2, x1: x + ruleWidth / 2 });\n      Object.assign(attributes.min, { x: x - ruleWidth / 2, x1: x + ruleWidth / 2 });\n    } else {\n      Object.assign(attributes.max, { x: x - width / 2, x1: x + width / 2 });\n      Object.assign(attributes.min, { x: x - width / 2, x1: x + width / 2 });\n    }\n  }\n  return attributes;\n};\n\nexport const boxplotScaleIn = scaleIn(computeBoxplotCenter);\nexport const boxplotScaleOut = scaleOut(computeBoxplotCenter);\n\nexport function registerBoxplotGlyph() {\n  Factory.registerGlyph<BoxPlotEncoderSpec, { direction?: 'horizontal' | 'vertical' }>('boxplot', {\n    shaft: 'rule',\n    box: 'rect',\n    max: 'rule',\n    min: 'rule',\n    median: 'rule'\n  })\n    .registerProgressiveChannels([\n      'x',\n      'y',\n      'q1',\n      'q3',\n      'min',\n      'max',\n      'median',\n      'angle',\n      'width',\n      'height',\n      'boxWidth',\n      'boxHeight',\n      'ruleWidth',\n      'ruleHeight'\n    ])\n    .registerFunctionEncoder(encodeBoxplotSize)\n    .registerChannelEncoder('x', (channel, encodeValue, encodeValues, datum, element, config) => {\n      if (config && isHorizontal(config.direction)) {\n        return null;\n      }\n      return {\n        shaft: { x: encodeValue, x1: encodeValue }\n      };\n    })\n    .registerChannelEncoder('y', (channel, encodeValue, encodeValues, datum, element, config) => {\n      if (!config || !isHorizontal(config.direction)) {\n        return null;\n      }\n      return {\n        shaft: { y: encodeValue, y1: encodeValue }\n      };\n    })\n    .registerChannelEncoder('q1', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction) ? { box: { x: encodeValue } } : { box: { y: encodeValue } };\n    })\n    .registerChannelEncoder('q3', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction) ? { box: { x1: encodeValue } } : { box: { y1: encodeValue } };\n    })\n    .registerChannelEncoder('min', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction)\n        ? {\n            shaft: { x: encodeValue },\n            min: { x: encodeValue, x1: encodeValue, visible: true }\n          }\n        : {\n            shaft: { y: encodeValue },\n            min: { y: encodeValue, y1: encodeValue, visible: true }\n          };\n    })\n    .registerChannelEncoder('max', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction)\n        ? {\n            shaft: { x1: encodeValue },\n            max: { x: encodeValue, x1: encodeValue, visible: true }\n          }\n        : {\n            shaft: { y1: encodeValue },\n            max: { y: encodeValue, y1: encodeValue, visible: true }\n          };\n    })\n    .registerChannelEncoder('median', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction)\n        ? {\n            median: { x: encodeValue, x1: encodeValue, visible: true }\n          }\n        : {\n            median: { y: encodeValue, y1: encodeValue, visible: true }\n          };\n    })\n    .registerChannelEncoder('angle', (channel, encodeValue, encodeValues, datum, element, config) => {\n      const defaultAnchor =\n        config && isHorizontal(config.direction)\n          ? [(encodeValues.min + encodeValues.max) / 2, encodeValues.y]\n          : [encodeValues.x, (encodeValues.min + encodeValues.max) / 2];\n      const anchor = encodeValues.anchor ?? defaultAnchor;\n      return {\n        shaft: { angle: encodeValue, anchor },\n        box: { angle: encodeValue, anchor },\n        max: { angle: encodeValue, anchor },\n        min: { angle: encodeValue, anchor },\n        median: { angle: encodeValue, anchor }\n      };\n    })\n    .registerDefaultEncoder(() => {\n      return {\n        max: { visible: false },\n        min: { visible: false },\n        median: { visible: false }\n      };\n    });\n\n  Factory.registerAnimationType('boxplotScaleIn', boxplotScaleIn);\n  Factory.registerAnimationType('boxplotScaleOut', boxplotScaleOut);\n  registerGlyphMark();\n  registerGlyphGraphic();\n  registerRectGraphic();\n  registerRuleGraphic();\n}\n\nconst computeBarBoxplotCenter = (\n  glyphElement: IGlyphElement,\n  direction: 'vertical' | 'horizontal',\n  options: IBoxplotScaleAnimationOptions\n) => {\n  if (isValidNumber(options?.center)) {\n    return options.center;\n  }\n  let median: number;\n  let max: number;\n  let min: number;\n  let q1: number;\n  let q3: number;\n  if (isHorizontal(direction)) {\n    median = glyphElement.getGraphicAttribute('points', false, 'median')?.[0]?.x;\n\n    const minMaxBoxWidth = glyphElement.getGraphicAttribute('width', false, 'minMaxBox');\n    const minMaxBoxBoxX = glyphElement.getGraphicAttribute('x', false, 'minMaxBox');\n    min = minMaxBoxBoxX;\n    max = minMaxBoxBoxX + minMaxBoxWidth;\n\n    const q1q3BoxWidth = glyphElement.getGraphicAttribute('width', false, 'q1q3Box');\n    const q1q3BoxX = glyphElement.getGraphicAttribute('x', false, 'q1q3Box');\n    q1 = q1q3BoxX;\n    q3 = q1q3BoxX + q1q3BoxWidth;\n  } else {\n    median = glyphElement.getGraphicAttribute('points', false, 'median')?.[0]?.y;\n\n    const minMaxBoxHeight = glyphElement.getGraphicAttribute('height', false, 'minMaxBox');\n    const minMaxBoxBoxY = glyphElement.getGraphicAttribute('y', false, 'minMaxBox');\n    min = minMaxBoxBoxY;\n    max = minMaxBoxBoxY + minMaxBoxHeight;\n\n    const q1q3BoxHeight = glyphElement.getGraphicAttribute('height', false, 'q1q3Box');\n    const q1q3BoxY = glyphElement.getGraphicAttribute('y', false, 'q1q3Box');\n    q1 = q1q3BoxY;\n    q3 = q1q3BoxY + q1q3BoxHeight;\n  }\n\n  if (isValidNumber(median)) {\n    return median;\n  }\n  if (isValidNumber(q1) && isValidNumber(q3)) {\n    return (q1 + q3) / 2;\n  }\n  if (isValidNumber(max) && isValidNumber(min)) {\n    return (max + min) / 2;\n  }\n  if (isValidNumber(min)) {\n    return min;\n  }\n  if (isValidNumber(max)) {\n    return max;\n  }\n  return NaN;\n};\n\nconst encodeBarBoxplotSize = (encodeValues: any, datum: any, element: IGlyphElement, config: any) => {\n  const attributes = {\n    minMaxBox: {},\n    q1q3Box: {},\n    median: {}\n  };\n\n  const x = encodeValues.x ?? element.getGraphicAttribute('x', false);\n  const y = encodeValues.y ?? element.getGraphicAttribute('y', false);\n  const width = encodeValues.width ?? element.getGraphicAttribute('width', false);\n  const minMaxWidth = encodeValues.minMaxWidth ?? element.getGraphicAttribute('minMaxWidth', false);\n  const q1q3Width = encodeValues.q1q3Width ?? element.getGraphicAttribute('q1q3Width', false);\n  const height = encodeValues.height ?? element.getGraphicAttribute('height', false);\n  const minMaxHeight = encodeValues.minMaxHeight ?? element.getGraphicAttribute('minMaxHeight', false);\n  const q1q3Height = encodeValues.q1q3Height ?? element.getGraphicAttribute('q1q3Height', false);\n\n  if (config && isHorizontal(config.direction)) {\n    if (isValidNumber(minMaxHeight)) {\n      Object.assign(attributes.minMaxBox, { y: y - minMaxHeight / 2, y1: y + minMaxHeight / 2 });\n    } else {\n      Object.assign(attributes.minMaxBox, { y: y - height / 2, y1: y + height / 2 });\n    }\n    if (isValidNumber(q1q3Height)) {\n      Object.assign(attributes.q1q3Box, { y: y - q1q3Height / 2, y1: y + q1q3Height / 2 });\n      Object.assign(attributes.median, { y: y - q1q3Height / 2, y1: y + q1q3Height / 2 });\n    } else {\n      // median rule always has the same length with q1q3box rect\n      Object.assign(attributes.q1q3Box, { y: y - height / 2, y1: y + height / 2 });\n      Object.assign(attributes.median, { y: y - height / 2, y1: y + height / 2 });\n    }\n  } else {\n    if (isValidNumber(minMaxWidth)) {\n      Object.assign(attributes.minMaxBox, { x: x - minMaxWidth / 2, x1: x + minMaxWidth / 2 });\n    } else {\n      Object.assign(attributes.minMaxBox, { x: x - width / 2, x1: x + width / 2 });\n    }\n    if (isValidNumber(q1q3Width)) {\n      Object.assign(attributes.q1q3Box, { x: x - q1q3Width / 2, x1: x + q1q3Width / 2 });\n      Object.assign(attributes.median, { x: x - q1q3Width / 2, x1: x + q1q3Width / 2 });\n    } else {\n      // median rule always has the same length with q1q3box rect\n      Object.assign(attributes.q1q3Box, { x: x - width / 2, x1: x + width / 2 });\n      Object.assign(attributes.median, { x: x - width / 2, x1: x + width / 2 });\n    }\n  }\n  return attributes;\n};\n\nexport const barBoxplotScaleIn = scaleIn(computeBarBoxplotCenter);\nexport const barBoxplotScaleOut = scaleOut(computeBarBoxplotCenter);\n\nexport function registerBarBoxplotGlyph() {\n  Factory.registerGlyph<BarBoxPlotEncoderSpec, { direction?: 'horizontal' | 'vertical' }>('barBoxplot', {\n    minMaxBox: 'rect',\n    q1q3Box: 'rect',\n    median: 'rule'\n  })\n    .registerProgressiveChannels([\n      'x',\n      'y',\n      'q1',\n      'q3',\n      'min',\n      'max',\n      'median',\n      'angle',\n      'width',\n      'height',\n      'minMaxWidth',\n      'q1q3Width',\n      'minMaxHeight',\n      'q1q3Height'\n    ])\n    .registerFunctionEncoder(encodeBarBoxplotSize)\n    .registerChannelEncoder('q1', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction)\n        ? { q1q3Box: { x: encodeValue } }\n        : { q1q3Box: { y: encodeValue } };\n    })\n    .registerChannelEncoder('q3', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction)\n        ? { q1q3Box: { x1: encodeValue } }\n        : { q1q3Box: { y1: encodeValue } };\n    })\n    .registerChannelEncoder('min', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction)\n        ? { minMaxBox: { x: encodeValue } }\n        : { minMaxBox: { y: encodeValue } };\n    })\n    .registerChannelEncoder('max', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction)\n        ? { minMaxBox: { x1: encodeValue } }\n        : { minMaxBox: { y1: encodeValue } };\n    })\n    .registerChannelEncoder('median', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction)\n        ? { median: { x: encodeValue, x1: encodeValue, visible: true } }\n        : { median: { y: encodeValue, y1: encodeValue, visible: true } };\n    })\n    .registerChannelEncoder('angle', (channel, encodeValue, encodeValues, datum, element, config) => {\n      const anchor = encodeValues.anchor ?? [encodeValues.x, (encodeValues.min + encodeValues.max) / 2];\n      return {\n        minMaxBox: { angle: encodeValue, anchor },\n        q1q3Box: { angle: encodeValue, anchor },\n        median: { angle: encodeValue, anchor }\n      };\n    })\n    .registerChannelEncoder('lineWidth', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return {\n        minMaxBox: { lineWidth: 0 },\n        q1q3Box: { lineWidth: 0 }\n      };\n    })\n    .registerChannelEncoder('minMaxFillOpacity', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return {\n        minMaxBox: { fillOpacity: encodeValue }\n      };\n    })\n    .registerChannelEncoder('stroke', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return {\n        minMaxBox: { stroke: false },\n        q1q3Box: { stroke: false }\n      };\n    })\n    .registerDefaultEncoder(() => {\n      return {\n        minMaxBox: { lineWidth: 0 },\n        q1q3Box: { lineWidth: 0 },\n        median: { visible: false }\n      };\n    });\n\n  Factory.registerAnimationType('barBoxplotScaleIn', barBoxplotScaleIn);\n  Factory.registerAnimationType('barBoxplotScaleOut', barBoxplotScaleOut);\n  registerGlyphMark();\n  registerGlyphGraphic();\n  registerRectGraphic();\n  registerRuleGraphic();\n}\n"]}