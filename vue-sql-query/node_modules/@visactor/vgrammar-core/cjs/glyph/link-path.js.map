{"version":3,"sources":["../src/glyph/link-path.ts"],"names":[],"mappings":"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","file":"link-path.js","sourcesContent":["import type { IAnimationParameters, LinkPathEncoderSpec, TypeAnimation } from '../types';\nimport type { IElement } from '../types/element';\nimport { Factory } from '../core/factory';\nimport { isNil } from '@visactor/vutils';\nimport { registerGlyphGraphic, registerPathGraphic } from '../graph/mark/graphic';\nimport { registerGlyphMark } from '../view/glyph';\n\nexport interface LinkPathConfig {\n  direction?: 'horizontal' | 'vertical' | 'LR' | 'RL' | 'TB' | 'BL' | 'radial';\n}\n\n// const isValidThickness = (thickness: number) => isValidNumber(thickness) && thickness > 1;\n// const hasValidThickness = (options: LinkPathEncodeValues) => isValidThickness(options.thickness);\n\nexport const getHorizontalPath = (options: LinkPathEncoderSpec, ratio?: number) => {\n  const curvature = options.curvature ?? 0.5;\n  const hasThickness = true;\n  const thickness = typeof ratio === 'number' ? options.thickness * ratio : options.thickness;\n\n  let x0 = options.x0;\n  let x1 = options.x1;\n  let y00 = options.y0;\n  let y10 = options.y1;\n  let cpx0 = x0 + curvature * (x1 - x0);\n  let cpx1 = x1 + curvature * (x0 - x1);\n  let formatter = (v: number) => v;\n\n  if (options.round !== false) {\n    x0 = Math.round(x0);\n    x1 = Math.round(x1);\n    y00 = Math.round(y00);\n    y10 = Math.round(y10);\n    cpx0 = Math.round(cpx0);\n    cpx1 = Math.round(cpx1);\n    formatter = Math.round;\n  }\n  const topPath =\n    options.pathType === 'line'\n      ? `M${x0},${y00}L${x1},${y10}`\n      : options.pathType === 'polyline'\n      ? `M${x0},${y00}L${cpx0},${y00}L${cpx0},${y10}L${x1},${y10}`\n      : `M${x0},${y00}C${cpx0},${y00},${cpx1},${y10},${x1},${y10}`;\n\n  if (!hasThickness) {\n    // simplified to a single path\n    return topPath;\n  }\n\n  if (options.align === 'center') {\n    y00 = formatter(options.y0 - thickness / 2);\n    y10 = formatter(options.y1 - thickness / 2);\n  } else if (options.align === 'end') {\n    y00 = formatter(options.y0 + options.thickness / 2 - thickness);\n    y10 = formatter(options.y1 + options.thickness / 2 - thickness);\n  } else {\n    y00 = formatter(options.y0 - options.thickness / 2);\n    y10 = formatter(options.y1 - options.thickness / 2);\n  }\n\n  const y01 = formatter(y00 + thickness);\n  const y11 = formatter(y10 + thickness);\n\n  const hasLength = Math.abs(x1 - x0) > 1e-6;\n  const endArrowPath =\n    options.endArrow && hasLength\n      ? `L${x1},${formatter(y10 - thickness / 2)}L${formatter(x1 + thickness)},${formatter(\n          (y10 + y11) / 2\n        )}L${x1},${formatter(y11 + thickness / 2)}`\n      : '';\n  const startArrowPath =\n    options.startArrow && hasLength\n      ? `L${x0},${formatter(y01 + thickness / 2)}L${formatter(x0 - thickness)},${formatter(\n          (y00 + y01) / 2\n        )}L${x0},${formatter(y00 - thickness / 2)}`\n      : '';\n\n  if (options.pathType === 'line') {\n    return `M${x0},${y00}L${x1},${y10}${endArrowPath}L${x1},${y11}L${x0},${y01}${startArrowPath}Z`;\n  } else if (options.pathType === 'polyline') {\n    return `M${x0},${y00}L${cpx0},${y00}L${cpx0},${y10}L${x1},${y10}\n    ${endArrowPath}L${x1},${y11}L${cpx0},${y11}L${cpx0},${y01}L${x0},${y01}${startArrowPath}Z`;\n  }\n\n  return `M${x0},${y00}C${cpx0},${y00},${cpx1},${y10},${x1},${y10}\n  ${endArrowPath}L${x1},${y11}C${cpx1},${y11},${cpx0},${y01},${x0},${y01}${startArrowPath}Z`;\n};\n\nexport const getVerticalPath = (options: LinkPathEncoderSpec, ratio?: number) => {\n  const curvature = options.curvature ?? 0.5;\n  const hasThickness = true;\n  const thickness = typeof ratio === 'number' ? options.thickness * ratio : options.thickness;\n  let y0 = options.y0;\n  let y1 = options.y1;\n  let x00 = options.x0;\n  let x10 = options.x1;\n  let cpy0 = y0 + curvature * (y1 - y0);\n  let cpy1 = y1 + curvature * (y0 - y1);\n  let formatter = (v: number) => v;\n\n  if (options.round !== false) {\n    formatter = Math.round;\n    y0 = Math.round(y0);\n    y1 = Math.round(y1);\n    x00 = Math.round(x00);\n    x10 = Math.round(x10);\n    cpy0 = Math.round(cpy0);\n    cpy1 = Math.round(cpy1);\n  }\n  const leftpath =\n    options.pathType === 'line'\n      ? `M${x00},${y0}L${x10},${y1}`\n      : options.pathType === 'polyline'\n      ? `M${x00},${y0}L${x00},${cpy0}L${x10},${cpy0}L${x10},${y1}`\n      : `M${x00},${y0}C${x00},${cpy0},${x10},${cpy1},${x10},${y1}`;\n  if (!hasThickness) {\n    // simplified to a single path\n    return leftpath;\n  }\n\n  if (options.align === 'center') {\n    x00 = formatter(options.x0 - thickness / 2);\n    x10 = formatter(options.x1 - thickness / 2);\n  } else if (options.align === 'end') {\n    x00 = formatter(options.x0 + options.thickness / 2 - thickness);\n    x10 = formatter(options.x1 + options.thickness / 2 - thickness);\n  } else {\n    x00 = formatter(options.x0 - options.thickness / 2);\n    x10 = formatter(options.x1 - options.thickness / 2);\n  }\n\n  const x01 = formatter(x00 + thickness);\n  const x11 = formatter(x10 + thickness);\n\n  const hasLength = Math.abs(y1 - y0) > 1e-6;\n  const endArrowPath =\n    options.endArrow && hasLength\n      ? `L${formatter(x10 - thickness / 2)},${y1}L${formatter((x10 + x11) / 2)},${formatter(\n          y1 + thickness\n        )}L${formatter(x11 + thickness / 2)},${y1}`\n      : '';\n  const startArrowPath =\n    options.startArrow && hasLength\n      ? `L${formatter(x01 + thickness / 2)},${y0}L${formatter((x01 + x00) / 2)},${formatter(\n          y0 - thickness\n        )}L${formatter(x00 - thickness / 2)},${y0}`\n      : '';\n\n  if (options.pathType === 'line') {\n    return `M${x00},${y0}L${x10},${y1}${endArrowPath}L${x11},${y1}L${x01},${y0}${startArrowPath}Z`;\n  } else if (options.pathType === 'polyline') {\n    return `M${x00},${y0}L${x00},${cpy0}L${x10},${cpy0}L${x10},${y1}\n    ${endArrowPath}L${x11},${y1}L${x11},${cpy0}L${x01},${cpy0}L${x01},${y0}${startArrowPath}Z`;\n  }\n\n  return `M${x00},${y0}C${x00},${cpy0},${x10},${cpy1},${x10},${y1}\n  ${endArrowPath}L${x11},${y1}C${x11},${cpy1},${x01},${cpy0},${x01},${y0}${startArrowPath}Z`;\n};\n\nconst encoder = (encodeValues: LinkPathEncoderSpec, datum: any, element: IElement, config: LinkPathConfig) => {\n  const direction = encodeValues.direction ?? config?.direction;\n  const parsePath = ['vertical', 'TB', 'BT'].includes(direction) ? getVerticalPath : getHorizontalPath;\n  const isRatioShow = typeof encodeValues.ratio === 'number' && encodeValues.ratio >= 0 && encodeValues.ratio <= 1;\n\n  const encodeChannels = Object.keys(encodeValues);\n  // parse path when all required channels are included\n  if (['x0', 'y0', 'x1', 'y1'].every(channel => encodeChannels.includes(channel))) {\n    return {\n      back: {\n        path: isRatioShow ? parsePath(encodeValues, 1) : ''\n      },\n      front: {\n        path: parsePath(encodeValues, isRatioShow ? encodeValues.ratio : 1)\n      }\n    };\n  }\n\n  return {};\n};\n\nconst linkPathGrowIn: TypeAnimation<IElement> = (\n  element: IElement,\n  options: any,\n  animationParameters: IAnimationParameters\n) => {\n  const linkValues: LinkPathEncoderSpec = {\n    x0: element.getGraphicAttribute('x0', false),\n    x1: element.getGraphicAttribute('x1', false),\n    y0: element.getGraphicAttribute('y0', false),\n    y1: element.getGraphicAttribute('y1', false),\n    thickness: element.getGraphicAttribute('thickness', false),\n    round: element.getGraphicAttribute('round', false),\n    align: element.getGraphicAttribute('align', false),\n    pathType: element.getGraphicAttribute('pathType', false),\n    endArrow: element.getGraphicAttribute('endArrow', false),\n    startArrow: element.getGraphicAttribute('startArrow', false)\n  };\n  // FIXME: undefined channel animation will cause vRender warning\n  Object.keys(linkValues).forEach(key => {\n    if (isNil(linkValues[key])) {\n      delete linkValues[key];\n    }\n  });\n  return {\n    from: Object.assign({}, linkValues, { x1: linkValues.x0, y1: linkValues.y0 }),\n    to: linkValues\n  };\n};\n\nconst linkPathGrowOut: TypeAnimation<IElement> = (\n  element: IElement,\n  options: any,\n  animationParameters: IAnimationParameters\n) => {\n  const linkValues: LinkPathEncoderSpec = {\n    x0: element.getGraphicAttribute('x0', true),\n    x1: element.getGraphicAttribute('x1', true),\n    y0: element.getGraphicAttribute('y0', true),\n    y1: element.getGraphicAttribute('y1', true),\n    thickness: element.getGraphicAttribute('thickness', true),\n    round: element.getGraphicAttribute('round', true),\n    align: element.getGraphicAttribute('align', true),\n    pathType: element.getGraphicAttribute('pathType', true),\n    endArrow: element.getGraphicAttribute('endArrow', true),\n    startArrow: element.getGraphicAttribute('startArrow', true)\n  };\n  // FIXME: undefined channel animation will cause vRender warning\n  Object.keys(linkValues).forEach(key => {\n    if (isNil(linkValues[key])) {\n      delete linkValues[key];\n    }\n  });\n  return {\n    from: linkValues,\n    to: Object.assign({}, linkValues, { x1: linkValues.x0, y1: linkValues.y0 })\n  };\n};\n\nconst linkPathUpdate: TypeAnimation<IElement> = (\n  element: IElement,\n  options: any,\n  animationParameters: IAnimationParameters\n) => {\n  const bassLinkValues = {\n    thickness: element.getGraphicAttribute('thickness', false),\n    round: element.getGraphicAttribute('round', false),\n    align: element.getGraphicAttribute('align', false),\n    pathType: element.getGraphicAttribute('pathType', false),\n    endArrow: element.getGraphicAttribute('endArrow', false),\n    startArrow: element.getGraphicAttribute('startArrow', false)\n  };\n  // FIXME: undefined channel animation will cause vRender warning\n  Object.keys(bassLinkValues).forEach(key => {\n    if (isNil(bassLinkValues[key])) {\n      delete bassLinkValues[key];\n    }\n  });\n  const prevLinkValues: LinkPathEncoderSpec = Object.assign(\n    {\n      x0: element.getGraphicAttribute('x0', true),\n      x1: element.getGraphicAttribute('x1', true),\n      y0: element.getGraphicAttribute('y0', true),\n      y1: element.getGraphicAttribute('y1', true),\n      ...bassLinkValues\n    },\n    bassLinkValues\n  );\n  const nextLinkValues: LinkPathEncoderSpec = Object.assign(\n    {\n      x0: element.getGraphicAttribute('x0', false),\n      x1: element.getGraphicAttribute('x1', false),\n      y0: element.getGraphicAttribute('y0', false),\n      y1: element.getGraphicAttribute('y1', false)\n    },\n    bassLinkValues\n  );\n\n  return {\n    from: prevLinkValues,\n    to: nextLinkValues\n  };\n};\n\nexport const registerLinkPathGlyph = () => {\n  Factory.registerGlyph<LinkPathEncoderSpec, LinkPathConfig>('linkPath', {\n    back: 'path',\n    front: 'path'\n  })\n    .registerFunctionEncoder(encoder)\n    .registerChannelEncoder('backgroundStyle', (channel, encodeValue) => {\n      return {\n        back: encodeValue\n      };\n    })\n    .registerDefaultEncoder(() => {\n      return {\n        back: { zIndex: 0 },\n        front: { zIndex: 1 }\n      };\n    });\n\n  Factory.registerAnimationType('linkPathGrowIn', linkPathGrowIn);\n  Factory.registerAnimationType('linkPathGrowOut', linkPathGrowOut);\n  Factory.registerAnimationType('linkPathUpdate', linkPathUpdate);\n  registerGlyphMark();\n  registerGlyphGraphic();\n  registerPathGraphic();\n};\n"]}