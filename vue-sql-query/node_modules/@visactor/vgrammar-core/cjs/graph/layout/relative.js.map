{"version":3,"sources":["../src/graph/layout/relative.ts"],"names":[],"mappings":"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","file":"relative.js","sourcesContent":["import { ComponentEnum } from './../enums';\nimport type { IBounds } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { Bounds } from '@visactor/vutils';\nimport { toPercent } from '@visactor/vgrammar-util';\nimport type {\n  IGroupMark,\n  ILayoutOptions,\n  IMark,\n  MarkRelativeItemSpec,\n  MarkRelativeContainerSpec,\n  IComponent\n} from '../../types';\nimport { normalizePadding } from '../../parse/view';\n\nconst defaultLayoutOrder = {\n  [ComponentEnum.axis]: 0,\n  [ComponentEnum.legend]: 1,\n  [ComponentEnum.slider]: 2,\n  [ComponentEnum.player]: 3,\n  [ComponentEnum.datazoom]: 4\n};\n\nconst getLayoutOrderOfMark = (mark: IMark) => {\n  return (\n    (mark.getSpec().layout as MarkRelativeItemSpec)?.order ??\n    (mark.markType === 'component' ? defaultLayoutOrder[(mark as IComponent).componentType] ?? Infinity : Infinity)\n  );\n};\n\nexport const doRelativeLayout = (\n  group: IGroupMark,\n  children: IMark[],\n  parentLayoutBounds: IBounds,\n  options?: ILayoutOptions\n) => {\n  const viewBounds = parentLayoutBounds.clone();\n  const groupLayoutSpec = group.getSpec().layout as MarkRelativeContainerSpec;\n  const maxChildWidth = toPercent(groupLayoutSpec.maxChildWidth, viewBounds.width());\n  const maxChildHeight = toPercent(groupLayoutSpec.maxChildHeight, viewBounds.width());\n  let minDeltaX1 = 0;\n  let minDeltaX2 = 0;\n  let minDeltaY1 = 0;\n  let minDeltaY2 = 0;\n\n  children.forEach((child: IMark) => {\n    const layoutSpec = child.getSpec().layout as MarkRelativeItemSpec;\n    const padding = normalizePadding(layoutSpec.padding);\n    const bounds = options.parseMarkBounds ? options.parseMarkBounds(child.getBounds(), child) : child.getBounds();\n\n    if (layoutSpec.position === 'top' || layoutSpec.position === 'bottom') {\n      const childHeight = Math.min(bounds.height() + padding.top + padding.bottom, maxChildHeight);\n\n      if (layoutSpec.position === 'top') {\n        viewBounds.y1 += childHeight;\n      } else {\n        viewBounds.y2 -= childHeight;\n      }\n\n      if (bounds.x1 < parentLayoutBounds.x1) {\n        minDeltaX1 = Math.max(minDeltaX1, parentLayoutBounds.x1 - bounds.x1);\n      }\n\n      if (bounds.x2 > parentLayoutBounds.x2) {\n        minDeltaX2 = Math.max(minDeltaX2, bounds.x2 - parentLayoutBounds.x2);\n      }\n    }\n\n    if (layoutSpec.position === 'left' || layoutSpec.position === 'right') {\n      const childWidth = Math.min(bounds.width() + padding.left + padding.right, maxChildWidth);\n\n      if (layoutSpec.position === 'left') {\n        viewBounds.x1 += childWidth;\n      } else {\n        viewBounds.x2 -= childWidth;\n      }\n\n      if (bounds.y1 < parentLayoutBounds.y1) {\n        minDeltaY1 = Math.max(minDeltaY1, parentLayoutBounds.y1 - bounds.y1);\n      }\n\n      if (bounds.y2 > parentLayoutBounds.y2) {\n        minDeltaY2 = Math.max(minDeltaY2, bounds.y2 - parentLayoutBounds.y2);\n      }\n    }\n\n    if (layoutSpec.position === 'outside') {\n      viewBounds.x1 += Math.max(parentLayoutBounds.x1 - bounds.x1, 0) + padding.left;\n      viewBounds.x2 -= Math.max(bounds.x2 - parentLayoutBounds.x2, 0) + padding.right;\n      viewBounds.y1 += Math.max(parentLayoutBounds.y1 - bounds.y1, 0) + padding.top;\n      viewBounds.y2 -= Math.max(bounds.y2 - parentLayoutBounds.y2) + padding.bottom;\n    }\n  });\n\n  if (minDeltaX1 > viewBounds.x1 - parentLayoutBounds.x1 && minDeltaX1 < parentLayoutBounds.width()) {\n    viewBounds.x1 = parentLayoutBounds.x1 + minDeltaX1;\n  }\n\n  if (minDeltaX2 > parentLayoutBounds.x2 - viewBounds.x2 && minDeltaX2 < parentLayoutBounds.width()) {\n    viewBounds.x2 = parentLayoutBounds.x2 - minDeltaX2;\n  }\n\n  if (minDeltaY1 > viewBounds.y1 - parentLayoutBounds.y1 && minDeltaY1 < parentLayoutBounds.height()) {\n    viewBounds.y1 = parentLayoutBounds.y1 + minDeltaY1;\n  }\n\n  if (minDeltaY2 > parentLayoutBounds.y2 - viewBounds.y2 && minDeltaY2 < parentLayoutBounds.height()) {\n    viewBounds.y2 = parentLayoutBounds.y2 - minDeltaY2;\n  }\n\n  let curTopY = viewBounds.y1;\n  let curBottomY = viewBounds.y2;\n  let curLeftX = viewBounds.x1;\n  let curRightX = viewBounds.x2;\n\n  const sortedChildren = children.slice().sort((markA, markB) => {\n    return getLayoutOrderOfMark(markA) - getLayoutOrderOfMark(markB);\n  });\n\n  for (let i = 0, len = sortedChildren.length; i < len; i++) {\n    const child = sortedChildren[i];\n    const layoutSpec = child.getSpec().layout as MarkRelativeItemSpec;\n    const padding = normalizePadding(layoutSpec.padding);\n    const bounds = options.parseMarkBounds ? options.parseMarkBounds(child.getBounds(), child) : child.getBounds();\n\n    if (layoutSpec.position === 'top' || layoutSpec.position === 'bottom') {\n      const childHeight = Math.min(bounds.height() + padding.top + padding.bottom, maxChildHeight);\n\n      if (layoutSpec.position === 'top') {\n        child.layoutBounds = new Bounds().set(viewBounds.x1, curTopY - childHeight, viewBounds.x2, curTopY);\n        curTopY -= childHeight;\n      } else {\n        child.layoutBounds = new Bounds().set(viewBounds.x1, curBottomY, viewBounds.x2, curBottomY + childHeight);\n        curBottomY += childHeight;\n      }\n      child.relativePosition = {\n        top: child.layoutBounds.y1 - viewBounds.y1,\n        bottom: child.layoutBounds.y1 - viewBounds.y2\n      };\n\n      if (layoutSpec.align) {\n        const childWidth = bounds.width() + padding.left + padding.right;\n\n        if (childWidth < viewBounds.width()) {\n          if (layoutSpec.align === 'center') {\n            child.layoutBounds.x1 = (viewBounds.x1 + viewBounds.x2) / 2 - childWidth / 2;\n            child.layoutBounds.x2 = child.layoutBounds.x1 + childWidth;\n            child.relativePosition.left = child.relativePosition.right = (viewBounds.width() - childWidth) / 2;\n          } else if (layoutSpec.align === 'right') {\n            child.layoutBounds.x1 = viewBounds.x2 - childWidth;\n            child.layoutBounds.x2 = viewBounds.x2;\n            child.relativePosition.right = 0;\n            child.relativePosition.left = viewBounds.width() - childWidth;\n          } else if (layoutSpec.align === 'left') {\n            child.layoutBounds.x1 = viewBounds.x1;\n            child.layoutBounds.x2 = viewBounds.x1 + childWidth;\n            child.relativePosition.left = 0;\n            child.relativePosition.right = viewBounds.width() - childWidth;\n          }\n        }\n      }\n    } else if (layoutSpec.position === 'left' || layoutSpec.position === 'right') {\n      const childWidth = Math.min(bounds.width() + padding.left + padding.right, maxChildWidth);\n\n      if (layoutSpec.position === 'left') {\n        child.layoutBounds = new Bounds().set(curLeftX - childWidth, viewBounds.y1, curLeftX, viewBounds.y2);\n        curLeftX -= childWidth;\n      } else {\n        child.layoutBounds = new Bounds().set(curRightX, viewBounds.y1, curRightX + childWidth, viewBounds.y2);\n        curRightX += childWidth;\n      }\n\n      child.relativePosition = {\n        left: child.layoutBounds.x1 - viewBounds.x1,\n        right: child.layoutBounds.x1 - viewBounds.x2\n      };\n\n      if (layoutSpec.align) {\n        const childHeight = bounds.height() + padding.top + padding.bottom;\n\n        if (childWidth < viewBounds.width()) {\n          if (layoutSpec.align === 'middle') {\n            child.layoutBounds.y1 = (viewBounds.y1 + viewBounds.y2) / 2 - childHeight / 2;\n            child.layoutBounds.y2 = child.layoutBounds.y1 + childHeight;\n            child.relativePosition.top = child.relativePosition.bottom = (viewBounds.height() - childHeight) / 2;\n          } else if (layoutSpec.align === 'bottom') {\n            child.layoutBounds.y1 = viewBounds.y2 - childHeight;\n            child.layoutBounds.y2 = viewBounds.y2;\n            child.relativePosition.top = viewBounds.height() - childHeight;\n            child.relativePosition.bottom = 0;\n          } else if (layoutSpec.align === 'top') {\n            child.layoutBounds.y1 = viewBounds.y1;\n            child.layoutBounds.y2 = viewBounds.y1 + childHeight;\n            child.relativePosition.bottom = viewBounds.height() - childHeight;\n            child.relativePosition.top = 0;\n          }\n        }\n      }\n    } else if (layoutSpec.position === 'outside') {\n      curLeftX -= Math.max(parentLayoutBounds.x1 - bounds.x1, 0) + padding.left;\n      curRightX -= Math.max(bounds.x2 - parentLayoutBounds.x2, 0) + padding.right;\n      curTopY -= Math.max(parentLayoutBounds.y1 - bounds.y1, 0) + padding.top;\n      curBottomY += Math.max(bounds.y2 - parentLayoutBounds.y2) + padding.bottom;\n    } else {\n      child.layoutBounds = viewBounds;\n    }\n  }\n\n  return viewBounds;\n};\n"]}