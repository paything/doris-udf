{"version":3,"sources":["../src/graph/animation/animation/grow-polar.ts"],"names":[],"mappings":";;;AAAA,6CAA4C;AAW5C,MAAM,qBAAqB,GAAG,CAC5B,OAAiB,EACjB,OAAmC,EACnC,mBAAyC,EACzC,EAAE;IACF,MAAM,KAAK,GAAG,OAAO,CAAC,2BAA2B,EAAE,CAAC;IACpD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,eAAe,EAAE;QACjD,OAAO;YACL,IAAI,EAAE,EAAE,UAAU,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,EAAE;YACrC,EAAE,EAAE,EAAE,UAAU,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,EAAE;SACtC,CAAC;KACH;IACD,OAAO;QACL,IAAI,EAAE,EAAE,QAAQ,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,EAAE;QACrC,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,EAAE;KAClC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,CACzB,OAAiB,EACjB,OAAmC,EACnC,mBAAyC,EACzC,EAAE;IACF,MAAM,KAAK,GAAG,OAAO,CAAC,2BAA2B,EAAE,CAAC;IAEpD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,eAAe,EAAE;QACjD,MAAM,YAAY,GAAG,IAAA,iBAAQ,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/E,OAAO;YACL,IAAI,EAAE;gBACJ,UAAU,EAAE,YAAY;gBACxB,QAAQ,EAAE,YAAY;aACvB;YACD,EAAE,EAAE;gBACF,UAAU,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU;gBAC7B,QAAQ,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ;aAC1B;SACF,CAAC;KACH;IACD,MAAM,YAAY,GAAG,IAAA,iBAAQ,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,OAAO;QACL,IAAI,EAAE;YACJ,UAAU,EAAE,YAAY;YACxB,QAAQ,EAAE,YAAY;SACvB;QACD,EAAE,EAAE;YACF,UAAU,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU;YAC7B,QAAQ,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ;SAC1B;KACF,CAAC;AACJ,CAAC,CAAC;AAEK,MAAM,WAAW,GAA4B,CAClD,OAAiB,EACjB,OAAmC,EACnC,mBAAyC,EACzC,EAAE;;IACF,OAAO,CAAC,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,mCAAI,KAAK,CAAC,KAAK,KAAK;QAC1C,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,EAAE,mBAAmB,CAAC;QAC3D,CAAC,CAAC,qBAAqB,CAAC,OAAO,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;AACnE,CAAC,CAAC;AARW,QAAA,WAAW,eAQtB;AAEF,MAAM,sBAAsB,GAAG,CAC7B,OAAiB,EACjB,OAAmC,EACnC,mBAAyC,EACzC,EAAE;IACF,MAAM,KAAK,GAAG,OAAO,CAAC,2BAA2B,EAAE,CAAC;IAEpD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,eAAe,EAAE;QACjD,OAAO;YACL,IAAI,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;YACrE,EAAE,EAAE,EAAE,UAAU,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,EAAE;SACpC,CAAC;KACH;IACD,OAAO;QACL,IAAI,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE;QACjE,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,EAAE;KACpC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,mBAAmB,GAAG,CAC1B,OAAiB,EACjB,OAAmC,EACnC,mBAAyC,EACzC,EAAE;IACF,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,eAAe,EAAE;QACjD,MAAM,YAAY,GAAG,IAAA,iBAAQ,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/E,OAAO;YACL,IAAI,EAAE;gBACJ,UAAU,EAAE,OAAO,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC;gBAC3D,QAAQ,EAAE,OAAO,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC;aACxD;YACD,EAAE,EAAE;gBACF,UAAU,EAAE,YAAY;gBACxB,QAAQ,EAAE,YAAY;aACvB;SACF,CAAC;KACH;IACD,MAAM,YAAY,GAAG,IAAA,iBAAQ,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,OAAO;QACL,IAAI,EAAE;YACJ,UAAU,EAAE,OAAO,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC;YAC3D,QAAQ,EAAE,OAAO,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC;SACxD;QACD,EAAE,EAAE;YACF,UAAU,EAAE,YAAY;YACxB,QAAQ,EAAE,YAAY;SACvB;KACF,CAAC;AACJ,CAAC,CAAC;AAEK,MAAM,YAAY,GAA4B,CACnD,OAAiB,EACjB,OAAmC,EACnC,mBAAyC,EACzC,EAAE;;IACF,OAAO,CAAC,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,mCAAI,KAAK,CAAC,KAAK,KAAK;QAC1C,CAAC,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,EAAE,mBAAmB,CAAC;QAC5D,CAAC,CAAC,sBAAsB,CAAC,OAAO,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;AACpE,CAAC,CAAC;AARW,QAAA,YAAY,gBAQvB;AAIF,MAAM,sBAAsB,GAAG,CAC7B,OAAiB,EACjB,OAAoC,EACpC,mBAAyC,EACzC,EAAE;IACF,MAAM,KAAK,GAAG,OAAO,CAAC,2BAA2B,EAAE,CAAC;IAEpD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;QAC1C,OAAO;YACL,IAAI,EAAE,EAAE,WAAW,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,EAAE;YACzC,EAAE,EAAE,EAAE,WAAW,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,EAAE;SACxC,CAAC;KACH;IACD,OAAO;QACL,IAAI,EAAE,EAAE,WAAW,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,EAAE;QACzC,EAAE,EAAE,EAAE,WAAW,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,EAAE;KACxC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,mBAAmB,GAAG,CAC1B,OAAiB,EACjB,OAAoC,EACpC,mBAAyC,EACzC,EAAE;IACF,MAAM,KAAK,GAAG,OAAO,CAAC,2BAA2B,EAAE,CAAC;IACpD,MAAM,YAAY,GAAG,IAAA,iBAAQ,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,OAAO;QACL,IAAI,EAAE;YACJ,WAAW,EAAE,YAAY;YACzB,WAAW,EAAE,YAAY;SAC1B;QACD,EAAE,EAAE;YACF,WAAW,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW;YAC/B,WAAW,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW;SAChC;KACF,CAAC;AACJ,CAAC,CAAC;AAEK,MAAM,YAAY,GAA4B,CACnD,OAAiB,EACjB,OAAoC,EACpC,mBAAyC,EACzC,EAAE;;IACF,OAAO,CAAC,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,mCAAI,KAAK,CAAC,KAAK,KAAK;QAC1C,CAAC,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,EAAE,mBAAmB,CAAC;QAC5D,CAAC,CAAC,sBAAsB,CAAC,OAAO,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;AACpE,CAAC,CAAC;AARW,QAAA,YAAY,gBAQvB;AAEF,MAAM,uBAAuB,GAAG,CAC9B,OAAiB,EACjB,OAAoC,EACpC,mBAAyC,EACzC,EAAE;IACF,MAAM,KAAK,GAAG,OAAO,CAAC,2BAA2B,EAAE,CAAC;IACpD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;QAC1C,OAAO;YACL,IAAI,EAAE,EAAE,WAAW,EAAE,OAAO,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;YACvE,EAAE,EAAE,EAAE,WAAW,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,EAAE;SACxC,CAAC;KACH;IACD,OAAO;QACL,IAAI,EAAE,EAAE,WAAW,EAAE,OAAO,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE;QACvE,EAAE,EAAE,EAAE,WAAW,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,EAAE;KACxC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,oBAAoB,GAAG,CAC3B,OAAiB,EACjB,OAAoC,EACpC,mBAAyC,EACzC,EAAE;IACF,MAAM,YAAY,GAAG,IAAA,iBAAQ,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,OAAO;QACL,IAAI,EAAE;YACJ,WAAW,EAAE,OAAO,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC;YAC7D,WAAW,EAAE,OAAO,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC;SAC9D;QACD,EAAE,EAAE;YACF,WAAW,EAAE,YAAY;YACzB,WAAW,EAAE,YAAY;SAC1B;KACF,CAAC;AACJ,CAAC,CAAC;AAEK,MAAM,aAAa,GAA4B,CACpD,OAAiB,EACjB,OAAoC,EACpC,mBAAyC,EACzC,EAAE;;IACF,OAAO,CAAC,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,mCAAI,KAAK,CAAC,KAAK,KAAK;QAC1C,CAAC,CAAC,oBAAoB,CAAC,OAAO,EAAE,OAAO,EAAE,mBAAmB,CAAC;QAC7D,CAAC,CAAC,uBAAuB,CAAC,OAAO,EAAE,OAAO,EAAE,mBAAmB,CAAC,CAAC;AACrE,CAAC,CAAC;AARW,QAAA,aAAa,iBAQxB","file":"grow-polar.js","sourcesContent":["import { isNumber } from '@visactor/vutils';\nimport type {\n  IElement,\n  IGrowAngleAnimationOptions,\n  IAnimationParameters,\n  IGrowRadiusAnimationOptions,\n  TypeAnimation\n} from '../../../types';\n\n// grow angle\n\nconst growAngleInIndividual = (\n  element: IElement,\n  options: IGrowAngleAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = element.getFinalAnimationAttributes();\n  if (options && options.orient === 'anticlockwise') {\n    return {\n      from: { startAngle: attrs?.endAngle },\n      to: { startAngle: attrs?.startAngle }\n    };\n  }\n  return {\n    from: { endAngle: attrs?.startAngle },\n    to: { endAngle: attrs?.endAngle }\n  };\n};\n\nconst growAngleInOverall = (\n  element: IElement,\n  options: IGrowAngleAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = element.getFinalAnimationAttributes();\n\n  if (options && options.orient === 'anticlockwise') {\n    const overallValue = isNumber(options.overall) ? options.overall : Math.PI * 2;\n    return {\n      from: {\n        startAngle: overallValue,\n        endAngle: overallValue\n      },\n      to: {\n        startAngle: attrs?.startAngle,\n        endAngle: attrs?.endAngle\n      }\n    };\n  }\n  const overallValue = isNumber(options?.overall) ? options.overall : 0;\n  return {\n    from: {\n      startAngle: overallValue,\n      endAngle: overallValue\n    },\n    to: {\n      startAngle: attrs?.startAngle,\n      endAngle: attrs?.endAngle\n    }\n  };\n};\n\nexport const growAngleIn: TypeAnimation<IElement> = (\n  element: IElement,\n  options: IGrowAngleAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  return (options?.overall ?? false) !== false\n    ? growAngleInOverall(element, options, animationParameters)\n    : growAngleInIndividual(element, options, animationParameters);\n};\n\nconst growAngleOutIndividual = (\n  element: IElement,\n  options: IGrowAngleAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = element.getFinalAnimationAttributes();\n\n  if (options && options.orient === 'anticlockwise') {\n    return {\n      from: { startAngle: element.getGraphicAttribute('startAngle', true) },\n      to: { startAngle: attrs?.endAngle }\n    };\n  }\n  return {\n    from: { endAngle: element.getGraphicAttribute('endAngle', true) },\n    to: { endAngle: attrs?.startAngle }\n  };\n};\n\nconst growAngleOutOverall = (\n  element: IElement,\n  options: IGrowAngleAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  if (options && options.orient === 'anticlockwise') {\n    const overallValue = isNumber(options.overall) ? options.overall : Math.PI * 2;\n    return {\n      from: {\n        startAngle: element.getGraphicAttribute('startAngle', true),\n        endAngle: element.getGraphicAttribute('endAngle', true)\n      },\n      to: {\n        startAngle: overallValue,\n        endAngle: overallValue\n      }\n    };\n  }\n  const overallValue = isNumber(options?.overall) ? options.overall : 0;\n  return {\n    from: {\n      startAngle: element.getGraphicAttribute('startAngle', true),\n      endAngle: element.getGraphicAttribute('endAngle', true)\n    },\n    to: {\n      startAngle: overallValue,\n      endAngle: overallValue\n    }\n  };\n};\n\nexport const growAngleOut: TypeAnimation<IElement> = (\n  element: IElement,\n  options: IGrowAngleAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  return (options?.overall ?? false) !== false\n    ? growAngleOutOverall(element, options, animationParameters)\n    : growAngleOutIndividual(element, options, animationParameters);\n};\n\n// grow radius\n\nconst growRadiusInIndividual = (\n  element: IElement,\n  options: IGrowRadiusAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = element.getFinalAnimationAttributes();\n\n  if (options && options.orient === 'inside') {\n    return {\n      from: { innerRadius: attrs?.outerRadius },\n      to: { innerRadius: attrs?.innerRadius }\n    };\n  }\n  return {\n    from: { outerRadius: attrs?.innerRadius },\n    to: { outerRadius: attrs?.outerRadius }\n  };\n};\n\nconst growRadiusInOverall = (\n  element: IElement,\n  options: IGrowRadiusAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = element.getFinalAnimationAttributes();\n  const overallValue = isNumber(options?.overall) ? options.overall : 0;\n  return {\n    from: {\n      innerRadius: overallValue,\n      outerRadius: overallValue\n    },\n    to: {\n      innerRadius: attrs?.innerRadius,\n      outerRadius: attrs?.outerRadius\n    }\n  };\n};\n\nexport const growRadiusIn: TypeAnimation<IElement> = (\n  element: IElement,\n  options: IGrowRadiusAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  return (options?.overall ?? false) !== false\n    ? growRadiusInOverall(element, options, animationParameters)\n    : growRadiusInIndividual(element, options, animationParameters);\n};\n\nconst growRadiusOutIndividual = (\n  element: IElement,\n  options: IGrowRadiusAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const attrs = element.getFinalAnimationAttributes();\n  if (options && options.orient === 'inside') {\n    return {\n      from: { innerRadius: element.getGraphicAttribute('innerRadius', true) },\n      to: { innerRadius: attrs?.outerRadius }\n    };\n  }\n  return {\n    from: { outerRadius: element.getGraphicAttribute('outerRadius', true) },\n    to: { outerRadius: attrs?.innerRadius }\n  };\n};\n\nconst growRadiusOutOverall = (\n  element: IElement,\n  options: IGrowRadiusAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  const overallValue = isNumber(options?.overall) ? options.overall : 0;\n  return {\n    from: {\n      innerRadius: element.getGraphicAttribute('innerRadius', true),\n      outerRadius: element.getGraphicAttribute('outerRadius', true)\n    },\n    to: {\n      innerRadius: overallValue,\n      outerRadius: overallValue\n    }\n  };\n};\n\nexport const growRadiusOut: TypeAnimation<IElement> = (\n  element: IElement,\n  options: IGrowRadiusAnimationOptions,\n  animationParameters: IAnimationParameters\n) => {\n  return (options?.overall ?? false) !== false\n    ? growRadiusOutOverall(element, options, animationParameters)\n    : growRadiusOutIndividual(element, options, animationParameters);\n};\n"]}