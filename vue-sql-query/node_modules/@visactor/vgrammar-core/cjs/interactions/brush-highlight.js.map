{"version":3,"sources":["../src/interactions/brush-highlight.ts"],"names":[],"mappings":";;;AACA,0CAAsD;AAEtD,6CAAyC;AAEzC,qEAA4D;AAE5D,MAAa,cAAe,SAAQ,sBAAgC;IASlE,YAAY,IAAW,EAAE,MAA8B;QACrD,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;QARxE,SAAI,GAAW,cAAc,CAAC,IAAI,CAAC;QAenC,sBAAiB,GAAG,CAAC,KAMpB,EAAE,EAAE;YACH,MAAM,QAAQ,GAAiC,EAAE,CAAC;YAElD,IAAI,KAAK,CAAC,IAAI,KAAK,iCAAY,CAAC,UAAU,EAAE;gBAC1C,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAErE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;wBACzB,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;wBACzB,MAAM,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC;wBAElG,IAAI,WAAW,EAAE;4BACf,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BAClB,EAAE,CAAC,YAAY,CAAC;gCACd,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,KAAK;gCAC/B,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI;6BACpC,CAAC,CAAC;yBACJ;6BAAM;4BACL,EAAE,CAAC,YAAY,CAAC;gCACd,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,IAAI;gCAC9B,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,KAAK;6BACrC,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACvC,CAAC,CAAC;IA7CF,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;IACrC,CAAC;;AAfH,wCAyDC;AAxDQ,mBAAI,GAAW,iBAAiB,CAAC;AAGjC,6BAAc,GAA0B;IAC7C,cAAc,EAAE,4BAAoB,CAAC,SAAS;IAC9C,SAAS,EAAE,4BAAoB,CAAC,IAAI;CACrC,CAAC","file":"brush-highlight.js","sourcesContent":["import type { IPolygon } from '@visactor/vrender-core';\nimport { InteractionStateEnum } from '../graph/enums';\nimport type { BrushHighlightOptions, IElement, IGlyphElement, IView } from '../types';\nimport { BrushBase } from './brush-base';\nimport { type IBounds } from '@visactor/vutils';\nimport { IOperateType } from '@visactor/vrender-components';\n\nexport class BrushHighlight extends BrushBase<BrushHighlightOptions> {\n  static type: string = 'brush-highlight';\n  type: string = BrushHighlight.type;\n\n  static defaultOptions: BrushHighlightOptions = {\n    highlightState: InteractionStateEnum.highlight,\n    blurState: InteractionStateEnum.blur\n  };\n\n  constructor(view: IView, option?: BrushHighlightOptions) {\n    super(view, Object.assign({}, BrushHighlight.defaultOptions, option));\n  }\n\n  getStartState(): string {\n    return this.options.highlightState;\n  }\n\n  handleBrushUpdate = (event: {\n    type: string;\n    detail: {\n      operateMask: IPolygon;\n      operatedMaskAABBBounds: { [name: string]: IBounds };\n    };\n  }) => {\n    const elements: (IElement | IGlyphElement)[] = [];\n\n    if (event.type === IOperateType.brushClear) {\n      const states = [this.options.blurState, this.options.highlightState];\n\n      this._marks.forEach(mark => {\n        mark.elements.forEach(el => {\n          el.removeState(states);\n        });\n      });\n    } else {\n      this._marks.forEach(mark => {\n        mark.elements.forEach(el => {\n          const isHighlight = this.isBrushContainGraphicItem(event.detail.operateMask, el.getGraphicItem());\n\n          if (isHighlight) {\n            elements.push(el);\n            el.updateStates({\n              [this.options.blurState]: false,\n              [this.options.highlightState]: true\n            });\n          } else {\n            el.updateStates({\n              [this.options.blurState]: true,\n              [this.options.highlightState]: false\n            });\n          }\n        });\n      });\n    }\n\n    this._dispatchEvent(event, elements);\n  };\n}\n"]}