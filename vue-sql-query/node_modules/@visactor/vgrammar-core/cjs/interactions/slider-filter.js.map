{"version":3,"sources":["../src/interactions/slider-filter.ts"],"names":[],"mappings":";;;AACA,0CAAiE;AACjE,6CAA4C;AAC5C,qCAAkC;AAElC,MAAa,YAAa,SAAQ,eAAM;IAOtC,YAAY,IAAW,EAAE,OAA2B;QAClD,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QANvB,SAAI,GAAW,YAAY,CAAC,IAAI,CAAC;QAO/B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QAEvE,IAAI,CAAC,MAAM,GAAG,IAAI;aACf,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;aACvC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,uBAAe,CAAC,SAAS,IAAK,IAAmB,CAAC,aAAa,KAAK,QAAQ,CAAC,CAAC;QAClH,IAAI,CAAC,KAAK,GAAG,IAAA,iBAAQ,EAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;YAC7C,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;YAC5C,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;IAC/B,CAAC;IAES,SAAS;QACjB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,OAAO,EAAE,CAAC;SACX;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAY,CAAC;QAEzC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE;YAC1B,OAAO,EAAE,CAAC;SACX;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;QAEhD,MAAM,cAAc,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACtG,MAAM,UAAU,GAAG,IAAA,iBAAQ,EAAC,MAAM,CAAC;YACjC,CAAC,CAAC,CAAC,KAAU,EAAE,WAA8B,EAAE,EAAE,CAC7C,KAAK,CAAC,MAAM,CAAC,IAAI,WAAW,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,WAAW,CAAC,GAAG;YAC1E,CAAC,CAAC,MAAM,CAAC;QAEX,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,sBAAc,CAAC,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;QAEnG,OAAO;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,IAAI,CAAC,YAAY;aAC3B;SACF,CAAC;IACJ,CAAC;;AA/CH,oCAgDC;AA/CQ,iBAAI,GAAW,eAAe,CAAC;AAG/B,2BAAc,GAAsC,EAAE,CAAC","file":"slider-filter.js","sourcesContent":["import type { DataFilterOptions, IComponent, ISlider, IView, SliderFilterValue } from '../types';\nimport { DataFilterRank, GrammarMarkType } from '../graph/enums';\nimport { isString } from '@visactor/vutils';\nimport { Filter } from './filter';\n\nexport class SliderFilter extends Filter {\n  static type: string = 'slider-filter';\n  type: string = SliderFilter.type;\n\n  static defaultOptions: Omit<DataFilterOptions, 'target'> = {};\n  options: DataFilterOptions;\n\n  constructor(view: IView, options?: DataFilterOptions) {\n    super(view, options);\n    this.options = Object.assign({}, SliderFilter.defaultOptions, options);\n\n    this._marks = view\n      .getMarksBySelector(this.options.source)\n      .filter(mark => mark.markType === GrammarMarkType.component && (mark as IComponent).componentType === 'slider');\n    this._data = isString(this.options.target.data)\n      ? view.getDataById(this.options.target.data)\n      : this.options.target.data;\n  }\n\n  protected getEvents() {\n    if (!this._marks || this._marks.length === 0) {\n      return [];\n    }\n\n    const slider = this._marks[0] as ISlider;\n\n    if (!this._data || !slider) {\n      return [];\n    }\n\n    const filter = this.options.target.filter;\n    const transform = this.options.target.transform;\n\n    const getFilterValue = (event: any) => ({ start: event.detail.value[0], end: event.detail.value[1] });\n    const dataFilter = isString(filter)\n      ? (datum: any, filterValue: SliderFilterValue) =>\n          datum[filter] >= filterValue.start && datum[filter] <= filterValue.end\n      : filter;\n\n    this._filterData(this._data, slider, DataFilterRank.slider, getFilterValue, dataFilter, transform);\n\n    return [\n      {\n        type: 'change',\n        handler: this.handleFilter\n      }\n    ];\n  }\n}\n"]}