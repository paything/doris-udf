{"version":3,"sources":["../src/interactions/tooltip.ts"],"names":[],"mappings":"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","file":"tooltip.js","sourcesContent":["import { AABBBounds, throttle } from '@visactor/vutils';\nimport type { IElement, IView, InteractionEvent, InteractionEventHandler, TooltipOptions } from '../types';\nimport { BaseTooltip, generateTooltipAttributes } from './base-tooltip';\nimport { invokeFunctionType } from '../parse/util';\n\nexport class Tooltip extends BaseTooltip<TooltipOptions> {\n  static type: string = 'tooltip';\n  type: string = Tooltip.type;\n\n  static defaultOptions: Omit<TooltipOptions, 'target'> = {\n    trigger: 'pointermove',\n    triggerOff: 'pointerleave'\n  };\n  protected _lastElement: IElement;\n\n  constructor(view: IView, options?: TooltipOptions) {\n    super(view, options);\n    this.options = Object.assign({}, Tooltip.defaultOptions, options);\n  }\n\n  protected getEvents() {\n    return [\n      { type: this.options.trigger, handler: this.handleTooltipShow },\n      { type: this.options.triggerOff, handler: this.handleTooltipHide }\n    ];\n  }\n\n  protected handleTooltipShow = throttle((event: InteractionEvent) => {\n    if (!this._tooltipComponent) {\n      return;\n    }\n\n    const element = event.element;\n    if (!this._marks.includes(element?.mark)) {\n      this._tooltipComponent.hideAll();\n      return;\n    }\n\n    this._tooltipComponent.showAll();\n\n    const groupGraphicItem = this.view.rootMark.getGroupGraphicItem();\n    // FIXME: waiting for vRender to add transformed position to event\n    const point = { x: 0, y: 0 };\n    groupGraphicItem.globalTransMatrix.transformPoint(event.canvas, point);\n\n    if (element === this._lastElement) {\n      // only update pointer when element is not changed\n      this._tooltipComponent.setAttributes({ pointerX: point.x, pointerY: point.y } as any);\n      return;\n    }\n\n    const boundsStart = { x: 0, y: 0 };\n    groupGraphicItem.globalTransMatrix.transformPoint({ x: 0, y: 0 }, boundsStart);\n    const boundsEnd = { x: 0, y: 0 };\n    groupGraphicItem.globalTransMatrix.transformPoint(\n      {\n        x: this.view.getSignalById('width').getValue() as number,\n        y: this.view.getSignalById('height').getValue() as number\n      },\n      boundsEnd\n    );\n    const bounds = new AABBBounds().set(boundsStart.x, boundsStart.y, boundsEnd.x, boundsEnd.y);\n    const { title, content } = this._computeTitleContent(element.getDatum());\n    const theme = this.view.getCurrentTheme();\n    const addition = invokeFunctionType(this.options.attributes, this.parameters(), element.getDatum()) as any;\n    const attributes = generateTooltipAttributes(point, title, content, bounds, theme, addition);\n    this._tooltipComponent.setAttributes(attributes);\n  }, 10) as unknown as InteractionEventHandler;\n\n  protected handleTooltipHide = (event: any) => {\n    if (this._tooltipComponent) {\n      this._tooltipComponent.hideAll();\n    }\n  };\n}\n"]}