import type { ViewScrollOptions, IView, InteractionEvent, IViewScrollMixin } from '../types';
import { ViewNavigationBase } from './view-navigation-base';
export interface ViewScroll extends Pick<IViewScrollMixin, 'formatScrollEvent' | 'handleScrollStart' | 'handleScrollEnd'>, ViewNavigationBase<ViewScrollOptions> {
}
export declare class ViewScroll extends ViewNavigationBase<ViewScrollOptions> {
    static type: string;
    type: string;
    static defaultOptions: ViewScrollOptions;
    protected _isStarted?: boolean;
    protected handleStart: (e: InteractionEvent) => void;
    constructor(view: IView, option?: ViewScrollOptions);
    protected getEvents(): {
        type: import("../types").EventType;
        handler: (e: InteractionEvent) => void;
    }[];
    handleStartInner: (e: InteractionEvent) => void;
    handleEnd: (e: InteractionEvent) => void;
}
