{"version":3,"sources":["../src/interactions/base-tooltip.ts"],"names":[],"mappings":"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","file":"base-tooltip.js","sourcesContent":["import type { TooltipAttributes, TooltipRowAttrs } from '@visactor/vrender-components';\n// eslint-disable-next-line no-duplicate-imports\nimport { Tooltip as TooltipComponent } from '@visactor/vrender-components';\nimport type { IBounds, IPointLike } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { array, isArray, isFunction, isNil, isObjectLike, isString, isValid, merge } from '@visactor/vutils';\nimport { field as getFieldAccessor } from '@visactor/vgrammar-util';\nimport { BaseInteraction } from './base';\nimport type { IMark, ITheme, ITooltipRow, IView, RecursivePartial, TooltipOptions } from '../types';\nimport { isFieldEncode } from '../parse/mark';\nimport { invokeFunctionType } from '../parse/util';\n\nexport const generateTooltipAttributes = (\n  point: IPointLike,\n  title: TooltipRowAttrs,\n  content: TooltipRowAttrs[],\n  bounds: IBounds,\n  theme?: ITheme,\n  addition?: RecursivePartial<TooltipAttributes>\n): TooltipAttributes => {\n  const tooltipTheme = theme?.components?.tooltip;\n\n  return merge(\n    {},\n    tooltipTheme,\n    {\n      visible: true,\n      pointerX: point.x,\n      pointerY: point.y,\n      title,\n      content,\n      parentBounds: bounds\n    },\n    addition ?? {}\n  );\n};\n\nexport abstract class BaseTooltip<T extends TooltipOptions> extends BaseInteraction<T> {\n  options: T;\n  protected _tooltipComponent?: TooltipComponent;\n  protected _marks?: IMark[];\n\n  constructor(view: IView, options?: T) {\n    super(view, options);\n    this._marks = view.getMarksBySelector(options.selector);\n  }\n\n  bind(): void {\n    super.bind();\n\n    const stage = this.view.renderer.stage();\n    if (this._tooltipComponent || !stage) {\n      return;\n    }\n    this._tooltipComponent = new TooltipComponent({});\n\n    stage.defaultLayer.appendChild(this._tooltipComponent as any);\n  }\n\n  unbind(): void {\n    super.unbind();\n\n    const stage = this.view.renderer.stage();\n    if (this._tooltipComponent && stage) {\n      stage.defaultLayer.removeChild(this._tooltipComponent as any);\n      this._tooltipComponent.release();\n      this._tooltipComponent = null;\n    }\n  }\n\n  protected _computeTooltipRow(row: ITooltipRow, datum: any) {\n    // compute visible\n    let visible = invokeFunctionType(row.visible, this.parameters(), datum);\n    visible = isNil(visible) ? true : !!visible;\n\n    // compute key\n    let key;\n    if (isFieldEncode(row.key)) {\n      const fieldAccessor = getFieldAccessor(row.key.field);\n      key = fieldAccessor(datum);\n    } else {\n      key = invokeFunctionType(row.key, this.parameters(), datum);\n    }\n    key = isNil(key) ? undefined : isObjectLike(key) ? key : { text: key };\n\n    // compute value\n    let value;\n    if (isFieldEncode(row.value)) {\n      const fieldAccessor = getFieldAccessor(row.value.field);\n      value = fieldAccessor(datum);\n    } else {\n      value = invokeFunctionType(row.value, this.parameters(), datum);\n    }\n    value = isNil(value) ? undefined : isObjectLike(value) ? value : { text: value };\n\n    // compute symbol\n    let symbol;\n    if (isFieldEncode(row.symbol)) {\n      const fieldAccessor = getFieldAccessor(row.symbol.field);\n      symbol = fieldAccessor(datum);\n    } else {\n      symbol = invokeFunctionType(row.symbol, this.parameters(), datum);\n    }\n    symbol = isNil(symbol) ? undefined : isObjectLike(symbol) ? symbol : { symbolType: symbol };\n\n    return { visible, key, value, shape: symbol };\n  }\n\n  protected _computeTitleContent(datum: any) {\n    const title = isValid(this.options.title)\n      ? isFunction(this.options.title)\n        ? this.options.title.call(null, datum, null, {})\n        : this._computeTooltipRow(\n            isString(this.options.title) ? { value: this.options.title } : this.options.title,\n            datum\n          )\n      : undefined;\n    const content = isValid(this.options.content)\n      ? isFunction(this.options.content)\n        ? array(this.options.content.call(null, datum, null, {}))\n        : array(datum).reduce((content, datumRow) => {\n            return content.concat(\n              array(this.options.content).map(row => this._computeTooltipRow(row as ITooltipRow, datumRow))\n            );\n          }, [])\n      : undefined;\n\n    // only display one single row in title\n    return { title: isArray(title) ? title[0] : title, content };\n  }\n}\n"]}