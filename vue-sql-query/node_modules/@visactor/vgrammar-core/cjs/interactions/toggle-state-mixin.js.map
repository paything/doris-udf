{"version":3,"sources":["../src/interactions/toggle-state-mixin.ts"],"names":[],"mappings":"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","file":"toggle-state-mixin.js","sourcesContent":["import type { IElement, IGlyphElement, IMark, IToggleStateMixin } from '../types';\n\nexport class ToggleStateMixin implements IToggleStateMixin {\n  protected _statedElements?: (IElement | IGlyphElement)[];\n  protected _marks?: IMark[];\n  protected _stateMarks: Record<string, IMark[]>;\n\n  updateStates(\n    newStatedElements: (IElement | IGlyphElement)[],\n    prevStatedElements?: (IElement | IGlyphElement)[],\n    state?: string,\n    reverseState?: string\n  ) {\n    if (!newStatedElements || !newStatedElements.length) {\n      return null;\n    }\n    if (state && reverseState) {\n      if (prevStatedElements && prevStatedElements.length) {\n        // toggle\n        this.toggleReverseStateOfElements(newStatedElements, prevStatedElements, reverseState);\n        this.toggleStateOfElements(newStatedElements, prevStatedElements, state);\n      } else {\n        // update all the elements\n        this.addBothStateOfElements(newStatedElements, state, reverseState);\n      }\n    } else if (state) {\n      if (prevStatedElements && prevStatedElements.length) {\n        this.toggleStateOfElements(newStatedElements, prevStatedElements, state);\n      } else {\n        this.addStateOfElements(newStatedElements, state);\n      }\n    }\n\n    return newStatedElements;\n  }\n\n  protected toggleReverseStateOfElements(\n    newStatedElements: (IElement | IGlyphElement)[],\n    prevStatedElements: (IElement | IGlyphElement)[],\n    reverseState: string\n  ) {\n    prevStatedElements.forEach(element => {\n      const hasReverse =\n        reverseState && this._stateMarks[reverseState] && this._stateMarks[reverseState].includes(element.mark);\n\n      if (hasReverse) {\n        element.addState(reverseState);\n      }\n    });\n\n    newStatedElements.forEach(element => {\n      const hasReverse =\n        reverseState && this._stateMarks[reverseState] && this._stateMarks[reverseState].includes(element.mark);\n\n      if (hasReverse) {\n        element.removeState(reverseState);\n      }\n    });\n  }\n\n  protected toggleStateOfElements(\n    newStatedElements: (IElement | IGlyphElement)[],\n    prevStatedElements: (IElement | IGlyphElement)[],\n    state: string\n  ) {\n    prevStatedElements.forEach(element => {\n      const hasState = state && this._stateMarks[state] && this._stateMarks[state].includes(element.mark);\n\n      if (hasState) {\n        element.removeState(state);\n      }\n    });\n\n    newStatedElements.forEach(element => {\n      const hasState = state && this._stateMarks[state] && this._stateMarks[state].includes(element.mark);\n\n      if (hasState) {\n        element.addState(state);\n      }\n    });\n  }\n\n  protected addBothStateOfElements(statedElements: (IElement | IGlyphElement)[], state: string, reverseState: string) {\n    this._marks.forEach(mark => {\n      const hasReverse =\n        reverseState && this._stateMarks[reverseState] && this._stateMarks[reverseState].includes(mark);\n      const hasState = state && this._stateMarks[state] && this._stateMarks[state].includes(mark);\n\n      if (!hasReverse && !hasState) {\n        return;\n      }\n\n      mark.elements?.forEach(el => {\n        const isStated = statedElements && statedElements.includes(el);\n\n        if (isStated) {\n          if (hasState) {\n            el.addState(state);\n          }\n        } else {\n          if (hasReverse) {\n            el.addState(reverseState);\n          }\n        }\n      });\n    });\n  }\n\n  protected addStateOfElements(statedElements: (IElement | IGlyphElement)[], state: string) {\n    this._marks.forEach(mark => {\n      const hasState = state && this._stateMarks[state] && this._stateMarks[state].includes(mark);\n\n      if (!hasState) {\n        return;\n      }\n\n      mark.elements?.forEach(el => {\n        const isStated = statedElements && statedElements.includes(el);\n\n        if (isStated) {\n          if (hasState) {\n            el.addState(state);\n          }\n        }\n      });\n    });\n  }\n\n  clearAllStates(state?: string, reverseState?: string) {\n    if (!this._statedElements || !this._statedElements.length) {\n      return;\n    }\n\n    this._marks.forEach(mark => {\n      if (mark && mark.elements) {\n        if (reverseState && this._stateMarks[reverseState] && this._stateMarks[reverseState].includes(mark)) {\n          mark.elements.forEach(el => {\n            el.removeState(reverseState);\n          });\n        }\n\n        if (state && this._stateMarks[state] && this._stateMarks[state].includes(mark)) {\n          mark.elements.forEach(el => {\n            if (this._statedElements.includes(el)) {\n              el.removeState(state);\n            }\n          });\n        }\n      }\n    });\n  }\n}\n"]}