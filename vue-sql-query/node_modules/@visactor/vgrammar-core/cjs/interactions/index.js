"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.registerViewRoam = exports.registerViewDrag = exports.registerViewScroll = exports.registerViewZoom = exports.registerCrosshair = exports.registerDimensionTooltip = exports.registerTooltip = exports.registerRollUp = exports.registerDrillDown = exports.registerBrushFilter = exports.registerBrushActive = exports.registerBrushHighlight = exports.registerElementSelectByGraphicName = exports.registerElementHighlightByGraphicName = exports.registerElementHighlightByName = exports.registerElementHighlightByLegend = exports.registerElementActiveByLegend = exports.registerElementHighlightByGroup = exports.registerElementHighlightByKey = exports.registerElementHighlight = exports.registerElementSelect = exports.registerElementActive = exports.FishEye = exports.ViewDragMixin = exports.ViewZoomMixin = exports.ViewScrollMixin = exports.ViewRoam = exports.ViewDrag = exports.ViewScroll = exports.ViewZoom = exports.FilterMixin = exports.Crosshair = exports.DimensionTooltip = exports.Tooltip = exports.RollUp = exports.DrillDown = exports.BrushActive = exports.BrushHighlight = exports.ElementHighlightByName = exports.ElementHighlightByLegend = exports.ElementActiveByLegend = exports.ElementHighlightByGroup = exports.ElementHighlightByKey = exports.ElementHighlight = exports.ElementSelect = exports.ElementActive = exports.ViewNavigationBase = exports.BrushBase = exports.BaseInteraction = exports.BaseTooltip = void 0, 
exports.registerFishEye = void 0;

const factory_1 = require("../core/factory"), element_active_1 = require("./element-active");

Object.defineProperty(exports, "ElementActive", {
    enumerable: !0,
    get: function() {
        return element_active_1.ElementActive;
    }
});

const element_select_1 = require("./element-select");

Object.defineProperty(exports, "ElementSelect", {
    enumerable: !0,
    get: function() {
        return element_select_1.ElementSelect;
    }
});

const element_highlight_1 = require("./element-highlight");

Object.defineProperty(exports, "ElementHighlight", {
    enumerable: !0,
    get: function() {
        return element_highlight_1.ElementHighlight;
    }
});

const element_highlight_by_key_1 = require("./element-highlight-by-key");

Object.defineProperty(exports, "ElementHighlightByKey", {
    enumerable: !0,
    get: function() {
        return element_highlight_by_key_1.ElementHighlightByKey;
    }
});

const element_highlight_by_group_1 = require("./element-highlight-by-group");

Object.defineProperty(exports, "ElementHighlightByGroup", {
    enumerable: !0,
    get: function() {
        return element_highlight_by_group_1.ElementHighlightByGroup;
    }
});

const element_active_by_legend_1 = require("./element-active-by-legend");

Object.defineProperty(exports, "ElementActiveByLegend", {
    enumerable: !0,
    get: function() {
        return element_active_by_legend_1.ElementActiveByLegend;
    }
});

const element_highlight_by_legend_1 = require("./element-highlight-by-legend");

Object.defineProperty(exports, "ElementHighlightByLegend", {
    enumerable: !0,
    get: function() {
        return element_highlight_by_legend_1.ElementHighlightByLegend;
    }
});

const element_highlight_by_name_1 = require("./element-highlight-by-name");

Object.defineProperty(exports, "ElementHighlightByName", {
    enumerable: !0,
    get: function() {
        return element_highlight_by_name_1.ElementHighlightByName;
    }
});

const element_highlight_by_graphic_name_1 = require("./element-highlight-by-graphic-name"), element_select_by_graphic_name_1 = require("./element-select-by-graphic-name"), brush_highlight_1 = require("./brush-highlight");

Object.defineProperty(exports, "BrushHighlight", {
    enumerable: !0,
    get: function() {
        return brush_highlight_1.BrushHighlight;
    }
});

const brush_active_1 = require("./brush-active");

Object.defineProperty(exports, "BrushActive", {
    enumerable: !0,
    get: function() {
        return brush_active_1.BrushActive;
    }
});

const brush_filter_1 = require("./brush-filter"), drill_down_1 = require("./drill-down");

Object.defineProperty(exports, "DrillDown", {
    enumerable: !0,
    get: function() {
        return drill_down_1.DrillDown;
    }
});

const roll_up_1 = require("./roll-up");

Object.defineProperty(exports, "RollUp", {
    enumerable: !0,
    get: function() {
        return roll_up_1.RollUp;
    }
});

const tooltip_1 = require("./tooltip");

Object.defineProperty(exports, "Tooltip", {
    enumerable: !0,
    get: function() {
        return tooltip_1.Tooltip;
    }
});

const dimension_tooltip_1 = require("./dimension-tooltip");

Object.defineProperty(exports, "DimensionTooltip", {
    enumerable: !0,
    get: function() {
        return dimension_tooltip_1.DimensionTooltip;
    }
});

const crosshair_1 = require("./crosshair");

Object.defineProperty(exports, "Crosshair", {
    enumerable: !0,
    get: function() {
        return crosshair_1.Crosshair;
    }
});

const filter_1 = require("./filter");

Object.defineProperty(exports, "FilterMixin", {
    enumerable: !0,
    get: function() {
        return filter_1.FilterMixin;
    }
});

const view_zoom_1 = require("./view-zoom");

Object.defineProperty(exports, "ViewZoom", {
    enumerable: !0,
    get: function() {
        return view_zoom_1.ViewZoom;
    }
});

const view_scroll_1 = require("./view-scroll");

Object.defineProperty(exports, "ViewScroll", {
    enumerable: !0,
    get: function() {
        return view_scroll_1.ViewScroll;
    }
});

const view_drag_1 = require("./view-drag");

Object.defineProperty(exports, "ViewDrag", {
    enumerable: !0,
    get: function() {
        return view_drag_1.ViewDrag;
    }
});

const vutils_1 = require("@visactor/vutils"), view_zoom_mixin_1 = require("./view-zoom-mixin");

Object.defineProperty(exports, "ViewZoomMixin", {
    enumerable: !0,
    get: function() {
        return view_zoom_mixin_1.ViewZoomMixin;
    }
});

const view_scroll_mixin_1 = require("./view-scroll-mixin");

Object.defineProperty(exports, "ViewScrollMixin", {
    enumerable: !0,
    get: function() {
        return view_scroll_mixin_1.ViewScrollMixin;
    }
});

const view_drag_mixin_1 = require("./view-drag-mixin");

Object.defineProperty(exports, "ViewDragMixin", {
    enumerable: !0,
    get: function() {
        return view_drag_mixin_1.ViewDragMixin;
    }
});

const view_roam_1 = require("./view-roam");

Object.defineProperty(exports, "ViewRoam", {
    enumerable: !0,
    get: function() {
        return view_roam_1.ViewRoam;
    }
});

const fish_eye_1 = require("./fish-eye");

Object.defineProperty(exports, "FishEye", {
    enumerable: !0,
    get: function() {
        return fish_eye_1.FishEye;
    }
});

const toggle_state_mixin_1 = require("./toggle-state-mixin");

var base_tooltip_1 = require("./base-tooltip");

Object.defineProperty(exports, "BaseTooltip", {
    enumerable: !0,
    get: function() {
        return base_tooltip_1.BaseTooltip;
    }
});

var base_1 = require("./base");

Object.defineProperty(exports, "BaseInteraction", {
    enumerable: !0,
    get: function() {
        return base_1.BaseInteraction;
    }
});

var brush_base_1 = require("./brush-base");

Object.defineProperty(exports, "BrushBase", {
    enumerable: !0,
    get: function() {
        return brush_base_1.BrushBase;
    }
});

var view_navigation_base_1 = require("./view-navigation-base");

Object.defineProperty(exports, "ViewNavigationBase", {
    enumerable: !0,
    get: function() {
        return view_navigation_base_1.ViewNavigationBase;
    }
});

const registerElementActive = () => {
    factory_1.Factory.registerInteraction(element_active_1.ElementActive.type, element_active_1.ElementActive);
};

exports.registerElementActive = registerElementActive;

const registerElementSelect = () => {
    (0, vutils_1.mixin)(element_select_1.ElementSelect, toggle_state_mixin_1.ToggleStateMixin), 
    factory_1.Factory.registerInteraction(element_select_1.ElementSelect.type, element_select_1.ElementSelect);
};

exports.registerElementSelect = registerElementSelect;

const registerElementHighlight = () => {
    (0, vutils_1.mixin)(element_highlight_1.ElementHighlight, toggle_state_mixin_1.ToggleStateMixin), 
    factory_1.Factory.registerInteraction(element_highlight_1.ElementHighlight.type, element_highlight_1.ElementHighlight);
};

exports.registerElementHighlight = registerElementHighlight;

const registerElementHighlightByKey = () => {
    factory_1.Factory.registerInteraction(element_highlight_by_key_1.ElementHighlightByKey.type, element_highlight_by_key_1.ElementHighlightByKey);
};

exports.registerElementHighlightByKey = registerElementHighlightByKey;

const registerElementHighlightByGroup = () => {
    factory_1.Factory.registerInteraction(element_highlight_by_group_1.ElementHighlightByGroup.type, element_highlight_by_group_1.ElementHighlightByGroup);
};

exports.registerElementHighlightByGroup = registerElementHighlightByGroup;

const registerElementActiveByLegend = () => {
    factory_1.Factory.registerInteraction(element_active_by_legend_1.ElementActiveByLegend.type, element_active_by_legend_1.ElementActiveByLegend);
};

exports.registerElementActiveByLegend = registerElementActiveByLegend;

const registerElementHighlightByLegend = () => {
    factory_1.Factory.registerInteraction(element_highlight_by_legend_1.ElementHighlightByLegend.type, element_highlight_by_legend_1.ElementHighlightByLegend);
};

exports.registerElementHighlightByLegend = registerElementHighlightByLegend;

const registerElementHighlightByName = () => {
    factory_1.Factory.registerInteraction(element_highlight_by_name_1.ElementHighlightByName.type, element_highlight_by_name_1.ElementHighlightByName);
};

exports.registerElementHighlightByName = registerElementHighlightByName;

const registerElementHighlightByGraphicName = () => {
    factory_1.Factory.registerInteraction(element_highlight_by_graphic_name_1.ElementHighlightByGraphicName.type, element_highlight_by_graphic_name_1.ElementHighlightByGraphicName);
};

exports.registerElementHighlightByGraphicName = registerElementHighlightByGraphicName;

const registerElementSelectByGraphicName = () => {
    factory_1.Factory.registerInteraction(element_select_by_graphic_name_1.ElementSelectByGraphicName.type, element_select_by_graphic_name_1.ElementSelectByGraphicName);
};

exports.registerElementSelectByGraphicName = registerElementSelectByGraphicName;

const registerBrushHighlight = () => {
    factory_1.Factory.registerInteraction(brush_highlight_1.BrushHighlight.type, brush_highlight_1.BrushHighlight);
};

exports.registerBrushHighlight = registerBrushHighlight;

const registerBrushActive = () => {
    factory_1.Factory.registerInteraction(brush_active_1.BrushActive.type, brush_active_1.BrushActive);
};

exports.registerBrushActive = registerBrushActive;

const registerBrushFilter = () => {
    (0, vutils_1.mixin)(brush_filter_1.BrushFilter, filter_1.FilterMixin), factory_1.Factory.registerInteraction(brush_filter_1.BrushFilter.type, brush_filter_1.BrushFilter);
};

exports.registerBrushFilter = registerBrushFilter;

const registerDrillDown = () => {
    (0, vutils_1.mixin)(drill_down_1.DrillDown, filter_1.FilterMixin), factory_1.Factory.registerInteraction(drill_down_1.DrillDown.type, drill_down_1.DrillDown);
};

exports.registerDrillDown = registerDrillDown;

const registerRollUp = () => {
    factory_1.Factory.registerInteraction(roll_up_1.RollUp.type, roll_up_1.RollUp);
};

exports.registerRollUp = registerRollUp;

const registerTooltip = () => {
    factory_1.Factory.registerInteraction(tooltip_1.Tooltip.type, tooltip_1.Tooltip);
};

exports.registerTooltip = registerTooltip;

const registerDimensionTooltip = () => {
    factory_1.Factory.registerInteraction(dimension_tooltip_1.DimensionTooltip.type, dimension_tooltip_1.DimensionTooltip);
};

exports.registerDimensionTooltip = registerDimensionTooltip;

const registerCrosshair = () => {
    factory_1.Factory.registerInteraction(crosshair_1.Crosshair.type, crosshair_1.Crosshair);
};

exports.registerCrosshair = registerCrosshair;

const registerViewZoom = () => {
    (0, vutils_1.mixin)(view_zoom_1.ViewZoom, view_zoom_mixin_1.ViewZoomMixin), factory_1.Factory.registerInteraction(view_zoom_1.ViewZoom.type, view_zoom_1.ViewZoom);
};

exports.registerViewZoom = registerViewZoom;

const registerViewScroll = () => {
    (0, vutils_1.mixin)(view_scroll_1.ViewScroll, view_scroll_mixin_1.ViewScrollMixin), 
    factory_1.Factory.registerInteraction(view_scroll_1.ViewScroll.type, view_scroll_1.ViewScroll);
};

exports.registerViewScroll = registerViewScroll;

const registerViewDrag = () => {
    (0, vutils_1.mixin)(view_drag_1.ViewDrag, view_drag_mixin_1.ViewDragMixin), factory_1.Factory.registerInteraction(view_drag_1.ViewDrag.type, view_drag_1.ViewDrag);
};

exports.registerViewDrag = registerViewDrag;

const registerViewRoam = () => {
    (0, vutils_1.mixin)(view_roam_1.ViewRoam, view_zoom_mixin_1.ViewZoomMixin), (0, 
    vutils_1.mixin)(view_roam_1.ViewRoam, view_drag_mixin_1.ViewDragMixin), (0, vutils_1.mixin)(view_roam_1.ViewRoam, view_scroll_mixin_1.ViewScrollMixin), 
    factory_1.Factory.registerInteraction(view_roam_1.ViewRoam.type, view_roam_1.ViewRoam);
};

exports.registerViewRoam = registerViewRoam;

const registerFishEye = () => {
    factory_1.Factory.registerInteraction(fish_eye_1.FishEye.type, fish_eye_1.FishEye);
};

exports.registerFishEye = registerFishEye;
//# sourceMappingURL=index.js.map