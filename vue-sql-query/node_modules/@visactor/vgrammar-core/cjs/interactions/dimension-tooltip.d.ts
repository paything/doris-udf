import type { DimensionTooltipOptions, IGroupMark, IMark, IView } from '../types';
import { BaseTooltip } from './base-tooltip';
export declare class DimensionTooltip extends BaseTooltip<DimensionTooltipOptions> {
    static type: string;
    type: string;
    static defaultOptions: Omit<DimensionTooltipOptions, 'target'>;
    protected _avoidMarks: IMark[];
    protected _lastDatum: any;
    protected _tooltipDataFilter: ((datum: any, filterValue: any[]) => boolean) | null;
    protected _container: IGroupMark;
    constructor(view: IView, options?: DimensionTooltipOptions);
    protected getEvents(): ({
        type: import("../types").EventType;
        handler: (...args: any[]) => void;
    } | {
        type: "none" | import("../types").EventType;
        handler: (event: any) => void;
    })[];
    protected handleTooltipShow: (...args: any[]) => void;
    protected handleTooltipHide: (event: any) => void;
}
