{"version":3,"sources":["../src/interactions/brush-base.ts"],"names":[],"mappings":"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","file":"brush-base.js","sourcesContent":["import { Brush, IOperateType } from '@visactor/vrender-components';\nimport type { BrushOptions, IElement, IGlyphElement, IMark, IView, InteractionEventHandler } from '../types';\nimport { BaseInteraction } from './base';\nimport type { IGraphic, IPolygon, IRectGraphicAttribute } from '@visactor/vrender-core';\nimport {\n  polygonContainPoint,\n  type IBounds,\n  type IPointLike,\n  polygonIntersectPolygon,\n  isRectIntersect\n} from '@visactor/vutils';\nimport { HOOK_EVENT } from '../graph/enums';\n\nexport abstract class BrushBase<T extends BrushOptions> extends BaseInteraction<T> {\n  options: T;\n  protected _brushComp?: Brush;\n  protected _marks?: IMark[];\n\n  constructor(view: IView, options?: T) {\n    super(view, options);\n    this.options = options;\n    this._marks = view.getMarksBySelector(this.options.selector);\n  }\n\n  protected getEvents(): Array<{ type: string; handler: InteractionEventHandler }> {\n    return [\n      {\n        type: HOOK_EVENT.BEFORE_DO_RENDER,\n        handler: this.handleAfterDraw\n      }\n    ];\n  }\n\n  protected isPolygonBrushContainGraphicItem(\n    brushMask: IPolygon,\n    graphicItem: IGraphic,\n    offset?: { x: number; y: number }\n  ) {\n    // 根据变换矩阵得到brushMask的实际坐标\n    const points = brushMask.attribute.points;\n    const { a, b, c, d, e, f } = brushMask.globalTransMatrix;\n    const { x: dx = 0, y: dy = 0 } = offset ?? {};\n\n    const pointsCoord = points.map((p: IPointLike) => {\n      return {\n        x: a * p.x + c * p.y + e + dx,\n        y: b * p.x + d * p.y + f + dy\n      };\n    });\n\n    const globalAABBBoundsOffset = brushMask.globalAABBBounds\n      .clone()\n      .set(\n        brushMask.globalAABBBounds.x1 + dx,\n        brushMask.globalAABBBounds.y1 + dy,\n        brushMask.globalAABBBounds.x2 + dx,\n        brushMask.globalAABBBounds.y2 + dy\n      );\n\n    // 根据变换矩阵得到item的实际坐标\n    const x = graphicItem.globalTransMatrix.e;\n    const y = graphicItem.globalTransMatrix.f;\n\n    // brush与图表图元进行相交 或 包含判断\n    if (graphicItem.type === 'symbol' || graphicItem.type === 'circle') {\n      return globalAABBBoundsOffset.contains(x, y) && polygonContainPoint(pointsCoord, x, y);\n    } else if (graphicItem.type === 'rect') {\n      const { width = 0, height = 0 } = graphicItem?.attribute as IRectGraphicAttribute;\n      const pointsRect = [\n        {\n          x: x,\n          y: y\n        },\n        {\n          x: x + width,\n          y: y\n        },\n        {\n          x: x + width,\n          y: y + height\n        },\n        {\n          x: x,\n          y: y + height\n        }\n      ];\n      return polygonIntersectPolygon(pointsCoord, pointsRect);\n    }\n    return brushMask.globalAABBBounds.intersects(graphicItem.globalAABBBounds);\n  }\n\n  protected isRectBrushContainGraphicItem(\n    brushMask: IPolygon,\n    graphicItem: IGraphic,\n    offset?: { x: number; y: number }\n  ) {\n    const { x: dx = 0, y: dy = 0 } = offset ?? {};\n\n    const globalAABBBoundsOffset = brushMask.globalAABBBounds\n      .clone()\n      .set(\n        brushMask.globalAABBBounds.x1 + dx,\n        brushMask.globalAABBBounds.y1 + dy,\n        brushMask.globalAABBBounds.x2 + dx,\n        brushMask.globalAABBBounds.y2 + dy\n      );\n\n    // 根据变换矩阵得到item的实际坐标\n    const x = graphicItem.globalTransMatrix.e;\n    const y = graphicItem.globalTransMatrix.f;\n\n    // brush与图表图元进行相交 或 包含判断\n    if (graphicItem.type === 'symbol' || graphicItem.type === 'circle') {\n      return globalAABBBoundsOffset.contains(x, y);\n    } else if (graphicItem.type === 'rect') {\n      const { width = 0, height = 0 } = graphicItem.attribute as IRectGraphicAttribute;\n      return isRectIntersect(globalAABBBoundsOffset, { x1: x, y1: y, x2: x + width, y2: y + height }, false);\n    }\n    return brushMask.globalAABBBounds.intersects(graphicItem.globalAABBBounds);\n  }\n\n  protected isBrushContainGraphicItem(brushMask: IPolygon, graphicItem: IGraphic, offset?: { x: number; y: number }) {\n    if (\n      !brushMask?.globalTransMatrix ||\n      !brushMask.globalAABBBounds ||\n      brushMask.globalAABBBounds.empty() ||\n      !graphicItem ||\n      !brushMask?.attribute?.points ||\n      brushMask.attribute.points.length <= 1\n    ) {\n      return false;\n    }\n\n    return this.options.brushType === 'polygon'\n      ? this.isPolygonBrushContainGraphicItem(brushMask, graphicItem, offset)\n      : this.isRectBrushContainGraphicItem(brushMask, graphicItem, offset);\n  }\n\n  handleAfterDraw = () => {\n    const stage = this.view.renderer.stage();\n    if (this._brushComp || !stage) {\n      return;\n    }\n\n    const viewBox = this.view.getViewBox();\n\n    this._brushComp = new Brush({\n      interactiveRange: this.options.interactiveRange ?? {\n        minX: viewBox.x1,\n        maxX: viewBox.x2,\n        minY: viewBox.y1,\n        maxY: viewBox.y2\n      },\n      xRange: this.options.xRange ?? [viewBox.x1, viewBox.x2],\n      yRange: this.options.yRange ?? [viewBox.y1, viewBox.y2],\n      brushMode: this.options.brushMode ?? 'single',\n      brushType: this.options.brushType,\n      brushStyle: this.options.brushStyle,\n      brushMoved: this.options.brushMoved,\n      removeOnClick: this.options.removeOnClick,\n      sizeThreshold: this.options.sizeThreshold,\n      delayType: this.options.delayType,\n      delayTime: this.options.delayTime\n    });\n\n    this._brushComp.addEventListener(IOperateType.brushClear, this.handleBrushUpdate);\n    this._brushComp.addEventListener(IOperateType.moveEnd, this.handleBrushUpdate);\n    this._brushComp.addEventListener(IOperateType.drawEnd, this.handleBrushUpdate);\n    this._brushComp.addEventListener(IOperateType.drawStart, this.handleBrushUpdate);\n    this._brushComp.addEventListener(IOperateType.moveStart, this.handleBrushUpdate);\n    this._brushComp.addEventListener(IOperateType.drawing, this.handleBrushUpdate);\n    this._brushComp.addEventListener(IOperateType.moving, this.handleBrushUpdate);\n    stage.defaultLayer.appendChild(this._brushComp as any);\n  };\n\n  abstract handleBrushUpdate: (event: {\n    type: string;\n    detail: {\n      operateMask: IPolygon;\n      operatedMaskAABBBounds: { [name: string]: IBounds };\n    };\n  }) => void;\n\n  unbind(): void {\n    super.unbind();\n    const stage = this.view.renderer.stage();\n\n    if (this._brushComp && stage) {\n      stage.defaultLayer.removeChild(this._brushComp as any);\n      this._brushComp.releaseBrushEvents();\n      this._brushComp.release();\n      this._brushComp = null;\n    }\n  }\n\n  protected _dispatchEvent(\n    event: {\n      type: string;\n      detail: {\n        operateMask: IPolygon;\n        operatedMaskAABBBounds: { [name: string]: IBounds };\n      };\n    },\n    activeElements: (IElement | IGlyphElement)[]\n  ) {\n    const params = { operateType: event.type, operateMask: event.detail.operateMask, activeElements };\n    if (event.type === IOperateType.drawStart || event.type === IOperateType.moveStart) {\n      this.dispatchEvent('start', params);\n    } else if (event.type === IOperateType.drawing || event.type === IOperateType.moving) {\n      this.dispatchEvent('update', params);\n    } else if (event.type === IOperateType.drawEnd || event.type === IOperateType.moveEnd) {\n      this.dispatchEvent('end', params);\n    } else {\n      this.dispatchEvent('reset', params);\n    }\n  }\n}\n"]}