{"version":3,"sources":["../src/interactions/view-utils.ts"],"names":[],"mappings":"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","file":"view-utils.js","sourcesContent":["import { isContinuous, type IBaseScale } from '@visactor/vscale';\nimport { ComponentEnum } from '../graph/enums';\nimport type { IDatazoom, IScrollbar, ViewNavigationRange, ViewStateByDim } from '../types';\n\nexport const getRangeOfLinkedComponent = (comp: IDatazoom | IScrollbar): [number, number] => {\n  if (comp.componentType === ComponentEnum.datazoom) {\n    const res = (comp as IDatazoom).getStartEndValue();\n    return res ? [res.start, res.end] : null;\n  }\n\n  return (comp as IScrollbar).getScrollRange();\n};\n\nexport const getBoundsRangeOfLinkedComponent = (comp: IDatazoom | IScrollbar, dim: 'x' | 'y'): [number, number] => {\n  const bounds = comp.getBounds();\n\n  if (bounds && !bounds.empty()) {\n    return dim === 'y' ? [bounds.y1, bounds.y2] : [bounds.x1, bounds.x2];\n  }\n};\n\nexport const getFilteredValuesFromScale = (scale: IBaseScale, range: [number, number]) => {\n  const scaleRange = scale.range();\n  const startPos = scaleRange[0] + (scaleRange[1] - scaleRange[0]) * range[0];\n  const endPos = scaleRange[0] + (scaleRange[1] - scaleRange[0]) * range[1];\n\n  if (isContinuous(scale.type)) {\n    const startValue = scale.invert(startPos);\n    const endValue = scale.invert(endPos);\n\n    return [Math.min(startValue, endValue), Math.max(startValue, endValue)];\n  }\n  const domain = scale.domain();\n\n  return domain.filter((entry: any) => {\n    const val = scale.scale(entry);\n    return val >= startPos && val <= endPos;\n  });\n};\n\nexport const updateScrollRange = (\n  rangeFactor: [number, number] = [0, 1],\n  range: [number, number],\n  scrollValue: number = 0,\n  scrollOptions?: { reversed?: boolean }\n) => {\n  if (Math.abs(scrollValue) < 1e-3) {\n    return;\n  }\n  const rangeDelta = Math.abs(rangeFactor[1] - rangeFactor[0]);\n\n  if (rangeDelta >= 1) {\n    return;\n  }\n  const size = Math.abs(range[range.length - 1] - range[0]);\n\n  if (size <= 0 || Number.isNaN(size)) {\n    return;\n  }\n\n  const value = (scrollOptions.reversed ? -1 : 1) * scrollValue;\n\n  if (value > 0 && rangeFactor[1] < 1) {\n    const delta = Math.min(1 - rangeFactor[1], value / size);\n\n    return [rangeFactor[0] + delta, rangeFactor[1] + delta] as [number, number];\n  } else if (value < 0 && rangeFactor[0] > 0) {\n    const delta = Math.max(-rangeFactor[0], value / size);\n\n    return [rangeFactor[0] + delta, rangeFactor[1] + delta] as [number, number];\n  }\n};\n\nexport const handleScrolling = (\n  scrollPos: { x?: number; y?: number },\n  navState: Partial<Record<'x' | 'y', ViewStateByDim>>,\n  scrollOptions?: { reversed?: boolean }\n): ViewNavigationRange => {\n  const res: ViewNavigationRange = { needUpdate: false };\n  if (!navState) {\n    return res;\n  }\n\n  Object.keys(navState).forEach(dim => {\n    const { scale, data, linkedComponent, rangeFactor, getCurrentRange } = navState[dim];\n\n    if (linkedComponent) {\n      res[dim] = updateScrollRange(\n        getRangeOfLinkedComponent(linkedComponent),\n        getBoundsRangeOfLinkedComponent(linkedComponent, dim as 'x' | 'y'),\n        scrollPos[dim],\n        scrollOptions\n      );\n    } else if (scale) {\n      const innerScale = scale.getScale();\n      const oldRange = scale.getRangeFactor() || rangeFactor;\n      const newRange = updateScrollRange(oldRange, innerScale.range(), scrollPos[dim], scrollOptions);\n\n      if (newRange) {\n        navState[dim].rangeFactor = newRange;\n\n        if (data) {\n          navState[dim].filterValue = newRange;\n\n          data.commit();\n        } else {\n          scale.setRangeFactor(newRange);\n          scale.commit();\n        }\n        res.needUpdate = true;\n        res[dim] = newRange;\n      }\n    } else {\n      const oldRange = (getCurrentRange ? getCurrentRange() : rangeFactor) || [0, 1];\n      const newRange = updateScrollRange(oldRange, [0, 1], scrollPos[dim], scrollOptions);\n\n      res[dim] = newRange || oldRange;\n    }\n  });\n  return res;\n};\n"]}