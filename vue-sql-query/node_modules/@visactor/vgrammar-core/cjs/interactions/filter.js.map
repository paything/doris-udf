{"version":3,"sources":["../src/interactions/filter.ts"],"names":[],"mappings":";;;AACA,iCAAyC;AACzC,6CAA4C;AAW5C,MAAa,WAAW;IACtB,WAAW,CACT,IAAW,EACX,MAAoB,EACpB,UAAkB,EAClB,cAAmC,EACnC,MAAkD,EAClD,SAAmD;QAEnD,MAAM,WAAW,GAAG,IAAA,iBAAQ,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxE,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,YAAY,GAAG,CAAC,KAAuB,EAAE,EAAE;gBAC9C,MAAM,OAAO,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC;gBAC/B,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,EAAE;oBACrE,OAAO;iBACR;gBACD,IAAI,cAAc,EAAE;oBAClB,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC3C;gBACD,WAAW,CAAC,MAAM,EAAE,CAAC;gBACrB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAClB,CAAC,CAAC;YAEF,IAAI,CAAC,WAAW,GAAG;gBACjB,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI;gBACvC,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,CAAC,IAAW,EAAE,EAAE;oBACtB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;wBACtB,OAAO,IAAI,CAAC;qBACb;oBACD,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC5F,OAAO,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;gBAC/E,CAAC;aACF,CAAC;YACF,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC7C;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAtCD,kCAsCC;AAMD,MAAsB,MAAO,SAAQ,sBAAkC;IAIrE,YAAY,IAAW,EAAE,OAA2B;QAClD,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACrB,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,KAAK,GAAG,IAAA,iBAAQ,EAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;SAC1G;IACH,CAAC;;AATH,wBAUC;AATQ,qBAAc,GAAsC,EAAE,CAAC","file":"filter.js","sourcesContent":["import type { DataFilterOptions, IData, IDataFilter, IMark, IView, InteractionEvent } from '../types';\nimport { BaseInteraction } from './base';\nimport { isString } from '@visactor/vutils';\n\nexport interface FilterMixin {\n  view: IView;\n  _data?: IData;\n  _marks?: IMark[];\n  _filterValue: any;\n  _dataFilter: IDataFilter;\n  handleFilter: (event?: InteractionEvent) => void;\n}\n\nexport class FilterMixin {\n  _filterData(\n    data: IData,\n    source: IMark | null,\n    filterRank: number,\n    getFilterValue: (event: any) => any,\n    filter?: (data: any[], parameters: any) => boolean,\n    transform?: (data: any[], parameters: any) => any[]\n  ) {\n    const dataGrammar = isString(data) ? this.view.getDataById(data) : data;\n    if (dataGrammar) {\n      this.handleFilter = (event: InteractionEvent) => {\n        const element = event?.element;\n        if (!dataGrammar || (source && (!element || element.mark !== source))) {\n          return;\n        }\n        if (getFilterValue) {\n          this._filterValue = getFilterValue(event);\n        }\n        dataGrammar.commit();\n        this.view.run();\n      };\n\n      this._dataFilter = {\n        source: source ? `${source.uid}` : null,\n        rank: filterRank,\n        filter: (data: any[]) => {\n          if (!this._filterValue) {\n            return data;\n          }\n          const filteredData = filter ? data.filter(datum => filter(datum, this._filterValue)) : data;\n          return transform ? transform(filteredData, this._filterValue) : filteredData;\n        }\n      };\n      dataGrammar.addDataFilter(this._dataFilter);\n    }\n    return this;\n  }\n}\n\nexport interface Filter\n  extends Pick<FilterMixin, '_data' | '_marks' | '_filterValue' | '_dataFilter' | 'handleFilter' | '_filterData'>,\n    BaseInteraction<DataFilterOptions> {}\n\nexport abstract class Filter extends BaseInteraction<DataFilterOptions> {\n  static defaultOptions: Omit<DataFilterOptions, 'target'> = {};\n  options: DataFilterOptions;\n\n  constructor(view: IView, options?: DataFilterOptions) {\n    super(view, options);\n    if (options.target) {\n      this._data = isString(options.target.data) ? view.getDataById(options.target.data) : options.target.data;\n    }\n  }\n}\n"]}