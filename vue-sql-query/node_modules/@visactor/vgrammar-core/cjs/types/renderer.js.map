{"version":3,"sources":["../src/types/renderer.ts"],"names":[],"mappings":"","file":"renderer.js","sourcesContent":["import type { IBoundsLike } from '@visactor/vutils';\nimport type { IColor, IEventTarget, Stage } from '@visactor/vrender-core';\nimport type { IViewEventConfig, IViewOptions } from './view';\n\nexport interface IRenderer {\n  initialize: (width: number, height: number, options: IViewOptions, eventConfig: IViewEventConfig) => this;\n\n  render: (immediately?: boolean) => this;\n  renderNextFrame: () => this;\n  resize: (width: number, height: number) => this;\n  shouldResize: (width: number, height: number) => boolean;\n  combineIncrementalLayers: () => this;\n  preventRender: (tag: boolean) => void;\n\n  setDpr: (resolution: number, redraw: boolean) => this;\n  background: (color: IColor) => this;\n  setViewBox: (viewBox: IBoundsLike, rerender: boolean) => this;\n\n  stage: () => Stage;\n  canvas: () => HTMLCanvasElement;\n  context: () => CanvasRenderingContext2D;\n\n  toCanvas: () => HTMLCanvasElement;\n  // toImageData: () => Promise<ImageData | undefined>;\n\n  release: () => void;\n}\n\nexport interface IStageEventPlugin<T> {\n  new (taget: IEventTarget, cfg?: T): {\n    release: () => void;\n  };\n}\n"]}