{"version":3,"sources":["../src/types/coordinate.ts"],"names":[],"mappings":"","file":"coordinate.js","sourcesContent":["import type { IBaseCoordinate, CoordinateType } from '@visactor/vgrammar-coordinate';\nimport type { GrammarSpec } from './grammar';\nimport type { GenericFunctionType } from './signal';\n\nexport type CoordinateFunctionCallback<T> = (scale: IBaseCoordinate, parameters: any) => T;\n\nexport type CoordinateFunctionType<T> = GenericFunctionType<CoordinateFunctionCallback<T>, T>;\n\nexport interface CoordinateSpec extends GrammarSpec {\n  type: CoordinateType;\n  start?: CoordinateFunctionType<[number, number]>;\n  end?: CoordinateFunctionType<[number, number]>;\n  origin?: CoordinateFunctionType<[number, number]>;\n\n  translate?: CoordinateFunctionType<[number, number]>;\n  rotate?: CoordinateFunctionType<number>;\n  scale?: CoordinateFunctionType<[number, number]>;\n  transpose?: CoordinateFunctionType<boolean>;\n}\n"]}