{"version":3,"sources":["../src/types/theme.ts"],"names":[],"mappings":"","file":"theme.js","sourcesContent":["import type { IColor } from '@visactor/vrender-core';\nimport type {\n  ArcLabelAttrs,\n  BaseLabelAttrs,\n  CircleAxisAttributes,\n  CircleAxisGridAttributes,\n  CircleCrosshairAttrs,\n  ColorLegendAttributes,\n  ContinuousPlayerAttributes,\n  DataLabelAttrs,\n  DataZoomAttributes,\n  DiscreteLegendAttrs,\n  DiscretePlayerAttributes,\n  LineAxisAttributes,\n  LineAxisGridAttributes,\n  LineCrosshairAttrs,\n  LineDataLabelAttrs,\n  LineLabelAttrs,\n  PolygonCrosshairAttrs,\n  RectCrosshairAttrs,\n  RectLabelAttrs,\n  ScrollBarAttributes,\n  SectorCrosshairAttrs,\n  SizeLegendAttributes,\n  SliderAttributes,\n  SymbolLabelAttrs,\n  TitleAttrs,\n  TooltipAttributes,\n  AreaLabelAttrs\n} from '@visactor/vrender-components';\nimport type { IPadding } from '@visactor/vutils';\nimport type { RecursivePartial } from './base';\nimport type { BasicEncoderSpecMap } from './mark';\n\n// glyph mark includes multiple types, not support theme for glyph for now\nexport type IMarkTheme = Partial<Omit<BasicEncoderSpecMap, 'glyph'>>;\n\nexport interface IComponentTheme {\n  axis?: RecursivePartial<LineAxisAttributes>;\n  circleAxis?: RecursivePartial<CircleAxisAttributes>;\n\n  grid?: RecursivePartial<LineAxisGridAttributes>;\n  circleGrid?: RecursivePartial<CircleAxisGridAttributes>;\n\n  discreteLegend?: RecursivePartial<DiscreteLegendAttrs>;\n  colorLegend?: RecursivePartial<ColorLegendAttributes>;\n  sizeLegend?: RecursivePartial<SizeLegendAttributes>;\n\n  lineCrosshair?: RecursivePartial<LineCrosshairAttrs>;\n  rectCrosshair?: RecursivePartial<RectCrosshairAttrs>;\n  sectorCrosshair?: RecursivePartial<SectorCrosshairAttrs>;\n  circleCrosshair?: RecursivePartial<CircleCrosshairAttrs>;\n  polygonCrosshair?: RecursivePartial<PolygonCrosshairAttrs>;\n\n  slider?: RecursivePartial<SliderAttributes>;\n\n  dataLabel?: RecursivePartial<DataLabelAttrs>;\n  lineLabel?: RecursivePartial<LineLabelAttrs>;\n  areaLabel?: RecursivePartial<AreaLabelAttrs>;\n  rectLabel?: RecursivePartial<RectLabelAttrs>;\n  arcLabel?: RecursivePartial<ArcLabelAttrs>;\n  symbolLabel?: RecursivePartial<SymbolLabelAttrs>;\n  pointLabel?: RecursivePartial<BaseLabelAttrs>;\n  lineDataLabel?: RecursivePartial<LineDataLabelAttrs>;\n\n  datazoom?: RecursivePartial<DataZoomAttributes>;\n\n  continuousPlayer?: RecursivePartial<ContinuousPlayerAttributes>;\n  discretePlayer?: RecursivePartial<DiscretePlayerAttributes>;\n\n  tooltip?: RecursivePartial<TooltipAttributes>;\n\n  title?: RecursivePartial<TitleAttrs>;\n\n  scrollbar?: RecursivePartial<ScrollBarAttributes>;\n}\n\nexport interface ITheme {\n  name?: string;\n  background?: IColor;\n  padding?: IPadding | number;\n  palette?: Record<string, IColor[]>;\n  marks?: IMarkTheme;\n  components?: IComponentTheme;\n}\n"]}