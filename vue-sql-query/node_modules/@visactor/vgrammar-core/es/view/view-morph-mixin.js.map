{"version":3,"sources":["../src/view/view-morph-mixin.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,IAAI,MAAM,QAAQ,CAAC;AAE1B,OAAO,EAAE,KAAK,EAAE,MAAM,0BAA0B,CAAC;AAGjD,MAAM,cAAc;IAGR,KAAK,CAAC,uBAAwC;;QACtD,MAAA,IAAI,CAAC,eAAe,0CAAE,OAAO,CAAC,UAAU,CAAC,EAAE;YACzC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAES,aAAa,CAAC,IAAsC;QAC5D,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;SAC3B;QAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;CACF;AAED,MAAM,CAAC,MAAM,oBAAoB,GAAG,GAAG,EAAE;IACvC,KAAK,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC9B,CAAC,CAAC","file":"view-morph-mixin.js","sourcesContent":["import { mixin } from '@visactor/vutils';\nimport View from './View';\nimport type { IMark } from '../types/grammar';\nimport { morph } from '../graph/animation/morph';\nimport type { IRunningConfig } from '../types/view';\n\nclass ViewMorphMixin {\n  private _willMorphMarks: { prev: IMark[]; next: IMark[] }[];\n\n  protected morph(normalizedRunningConfig?: IRunningConfig) {\n    this._willMorphMarks?.forEach(morphMarks => {\n      morph(morphMarks.prev, morphMarks.next, normalizedRunningConfig);\n    });\n    this._willMorphMarks = null;\n  }\n\n  protected addMorphMarks(mark: { prev: IMark[]; next: IMark[] }) {\n    if (!this._willMorphMarks) {\n      this._willMorphMarks = [];\n    }\n\n    this._willMorphMarks.push(mark);\n  }\n}\n\nexport const registerViewMorphAPI = () => {\n  mixin(View, ViewMorphMixin);\n};\n"]}