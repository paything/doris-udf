{"version":3,"sources":["../src/view/component.ts"],"names":[],"mappings":"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","file":"component.js","sourcesContent":["import { DefaultKey } from '../graph/constants';\nimport { GrammarMarkType, HOOK_EVENT } from '../graph/enums';\nimport type {\n  IGroupMark,\n  IView,\n  IComponent,\n  ComponentSpec,\n  IData,\n  Nil,\n  MarkFunctionType,\n  StateEncodeSpec,\n  BaseSingleEncodeSpec\n} from '../types';\nimport { Factory } from '../core/factory';\nimport { Mark } from './mark';\n\nexport class Component extends Mark implements IComponent {\n  declare markType: GrammarMarkType.component;\n  readonly componentType: string;\n  protected declare spec: ComponentSpec;\n\n  protected mode?: '2d' | '3d';\n\n  protected _componentDatum: any = { [DefaultKey]: 0 };\n  protected _encoders: StateEncodeSpec;\n\n  constructor(view: IView, componentType: string, group?: IGroupMark, mode?: '2d' | '3d') {\n    super(view, GrammarMarkType.component, group);\n    this.componentType = componentType;\n    this.spec.type = 'component';\n    this.spec.componentType = componentType;\n    this.mode = mode;\n    this._updateComponentEncoders();\n  }\n\n  configureComponent(config: any) {\n    this.spec.componentConfig = config;\n    this.commit();\n    return this;\n  }\n\n  addGraphicItem(attrs: any, groupKey?: string, newGraphicItem?: any) {\n    const graphicItem =\n      newGraphicItem ??\n      Factory.createGraphicComponent(this.componentType, attrs, { mode: this.mode, skipDefault: this.spec.skipTheme });\n\n    if (graphicItem) {\n      this.emit(HOOK_EVENT.BEFORE_ADD_VRENDER_MARK, { graphicItem });\n      (this.graphicParent as any).appendChild(graphicItem);\n\n      this.emit(HOOK_EVENT.AFTER_ADD_VRENDER_MARK, { graphicItem });\n    }\n\n    return graphicItem;\n  }\n\n  join(data: IData | string | Nil) {\n    return super.join(data, DefaultKey);\n  }\n\n  encodeState(state: string, channel: string | BaseSingleEncodeSpec, value?: MarkFunctionType<any>) {\n    super.encodeState(state, channel, value);\n    this._updateComponentEncoders();\n    return this;\n  }\n\n  parseRenderContext() {\n    return { large: false };\n  }\n\n  protected _prepareRejoin() {\n    this._componentDatum[DefaultKey] += 1;\n  }\n\n  protected evaluateJoin(data: any[]) {\n    this.spec.key = DefaultKey;\n\n    if (data) {\n      (data as any)[DefaultKey] = this._componentDatum[DefaultKey];\n\n      this._componentDatum = data;\n    } else {\n      this._componentDatum = { [DefaultKey]: this._componentDatum[DefaultKey] };\n    }\n\n    // component mark do not support data join\n    return super.evaluateJoin([this._componentDatum]);\n  }\n\n  protected _updateComponentEncoders() {\n    this._encoders = this.spec.encode;\n  }\n\n  protected _getEncoders() {\n    return this._encoders ?? {};\n  }\n}\n"]}