{"version":3,"sources":["../src/transforms/data/fold.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,OAA6B,EAAE,YAAmB,EAAE,EAAE;IAC9E,IAAI,CAAC,YAAY,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;QACzC,OAAO,EAAE,CAAC;KACX;IAED,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,OAAO,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;IACtE,MAAM,OAAO,GAAU,EAAE,CAAC;IAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QACvD,MAAM,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,OAAO,CAAC,CAAC,KAAa,EAAE,EAAE;YAC/B,MAAM,IAAI,GAAG,EAAE,CAAC;YAEhB,IAAI,OAAO,EAAE;gBACX,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBACvB,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;oBACxB,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC/B,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;qBAC1B;iBACF;aACF;YAED,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YAE7B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC","file":"fold.js","sourcesContent":["import type { FoldTransformOptions } from '../../types';\n\nexport const transform = (options: FoldTransformOptions, upstreamData: any[]) => {\n  if (!upstreamData || !upstreamData.length) {\n    return [];\n  }\n\n  const { fields, asKey = 'key', asValue = 'value', retains } = options;\n  const results: any[] = [];\n\n  for (let i = 0, len = upstreamData.length; i < len; i++) {\n    const entry = upstreamData[i];\n    fields.forEach((field: string) => {\n      const item = {};\n\n      if (retains) {\n        retains.forEach(retain => {\n          item[retain] = entry[retain];\n        });\n      } else {\n        for (const prop in entry) {\n          if (fields.indexOf(prop) === -1) {\n            item[prop] = entry[prop];\n          }\n        }\n      }\n\n      item[asKey] = field;\n      item[asValue] = entry[field];\n\n      results.push(item);\n    });\n  }\n  return results;\n};\n"]}