{"version":3,"sources":["../src/transforms/data/pick.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,IAAI,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAC5C,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAG1C,SAAS,OAAO,CAAC,MAAW,EAAE,MAA6B,EAAE,EAAY;IACvE,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,GAAQ,EAAE,KAA0B,EAAE,KAAa,EAAE,EAAE;QAC3E,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QAE/B,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC;AAED,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,OAA4B,EAAE,YAAmB,EAAE,EAAE;IAC7E,MAAM,EAAE,MAAM,GAAG,EAAE,EAAE,GAAG,OAAO,CAAC;IAChC,MAAM,EAAE,GAAG,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IAChD,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CACzC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CACzB,CAAC;IAE3B,OAAO,eAAe,CAAC,MAAM;QAC3B,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YAChC,OAAO,OAAO,CAAC,KAAK,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC;QAC7C,CAAC,CAAC;QACJ,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YAChC,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;AACT,CAAC,CAAC","file":"pick.js","sourcesContent":["import type { FieldGetterFunction } from '@visactor/vgrammar-util';\nimport { field as getFieldAccessor } from '@visactor/vgrammar-util';\nimport { isString } from '@visactor/vutils';\nimport { fieldNames } from '../util/util';\nimport type { PickTransformOption } from '../../types';\n\nfunction project(source: any, fields: FieldGetterFunction[], as: string[]) {\n  return fields.reduce((res: any, field: FieldGetterFunction, index: number) => {\n    res[as[index]] = field(source);\n\n    return res;\n  }, {});\n}\n\nexport const transform = (options: PickTransformOption, upstreamData: any[]) => {\n  const { fields = [] } = options;\n  const as = fieldNames(fields, options.as || []);\n  const fieldsAccessors = fields.map(field =>\n    isString(field) ? getFieldAccessor(field) : field\n  ) as FieldGetterFunction[];\n\n  return fieldsAccessors.length\n    ? upstreamData.map((entry, index) => {\n        return project(entry, fieldsAccessors, as);\n      })\n    : upstreamData.map((entry, index) => {\n        return {};\n      });\n};\n"]}