{"version":3,"sources":["../src/glyph/violin.ts"],"names":[],"mappings":"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","file":"violin.js","sourcesContent":["import { isValidNumber } from '@visactor/vutils';\nimport type { IGlyphElement, ViolinEncoderSpec } from '../types';\nimport { Factory } from '../core/factory';\nimport type { IBaseScale } from '@visactor/vscale';\nimport {\n  registerGlyphGraphic,\n  registerPolygonGraphic,\n  registerRectGraphic,\n  registerRuleGraphic,\n  registerSymbolGraphic\n} from '../graph/mark/graphic';\nimport { isHorizontal } from '@visactor/vgrammar-util';\nimport { registerGlyphMark } from '../view/glyph';\n\nconst defaultDensitySize = 30;\n\nconst computeViolinPoints = (density: [number, number][], densitySize: number, scale: IBaseScale, config: any) => {\n  if (!density || density.length === 0) {\n    return [];\n  }\n  const maxDensity = density.reduce((max, d) => Math.max(max, d[1]), 0);\n\n  if (config && isHorizontal(config.direction)) {\n    const topPoints = density.map(d => {\n      return {\n        y: -densitySize * (1 / maxDensity) * d[1],\n        x: scale.scale(d[0])\n      };\n    });\n    const bottomPoints = density.map(d => {\n      return {\n        y: densitySize * (1 / maxDensity) * d[1],\n        x: scale.scale(d[0])\n      };\n    });\n    return [...topPoints, ...bottomPoints.reverse()];\n  }\n\n  const leftPoints = density.map(d => {\n    return {\n      x: -densitySize * (1 / maxDensity) * d[1],\n      y: scale.scale(d[0])\n    };\n  });\n  const rightPoints = density.map(d => {\n    return {\n      x: densitySize * (1 / maxDensity) * d[1],\n      y: scale.scale(d[0])\n    };\n  });\n  return [...leftPoints, ...rightPoints.reverse()];\n};\n\nconst encodeViolin = (encodeValues: any, datum: any, element: IGlyphElement, config: any) => {\n  const attributes = {\n    violin: {},\n    shaft: {},\n    box: {},\n    median: {}\n  };\n\n  const x = encodeValues.x ?? element.getGraphicAttribute('x', false);\n  const y = encodeValues.y ?? element.getGraphicAttribute('y', false);\n  const width = encodeValues.width ?? element.getGraphicAttribute('width', false);\n  const height = encodeValues.height ?? element.getGraphicAttribute('height', false);\n  const boxWidth = encodeValues.boxWidth ?? element.getGraphicAttribute('boxWidth', false);\n  const boxHeight = encodeValues.boxHeight ?? element.getGraphicAttribute('boxHeight', false);\n  const densitySize =\n    encodeValues.densitySize ?? element.getGraphicAttribute('densitySize', false) ?? defaultDensitySize;\n\n  const densityScale = element.mark.getScalesByChannel().density;\n  const densityField = element.mark.getFieldsByChannel().density;\n  if (densityField && densityScale) {\n    const points = computeViolinPoints(datum[densityField], densitySize, densityScale, config);\n    Object.assign(attributes.violin, { points });\n  }\n\n  if (config && isHorizontal(config.direction)) {\n    if (isValidNumber(boxHeight)) {\n      Object.assign(attributes.box, { y: y - boxHeight / 2, y1: y + boxHeight / 2 });\n    } else {\n      Object.assign(attributes.box, { y: y - height / 2, y1: y + height / 2 });\n    }\n  } else {\n    if (isValidNumber(boxWidth)) {\n      Object.assign(attributes.box, { x: x - boxWidth / 2, x1: x + boxWidth / 2 });\n    } else {\n      Object.assign(attributes.box, { x: x - width / 2, x1: x + width / 2 });\n    }\n  }\n  return attributes;\n};\n\nexport const registerViolinGlyph = () => {\n  Factory.registerGlyph<ViolinEncoderSpec>('violin', {\n    violin: 'polygon',\n    shaft: 'rule',\n    box: 'rect',\n    median: 'symbol'\n  })\n    .registerFunctionEncoder(encodeViolin)\n    .registerChannelEncoder('x', (channel, encodeValue, encodeValues, datum, element, config) => {\n      if (config && isHorizontal(config.direction)) {\n        return null;\n      }\n      return {\n        shaft: { x: encodeValue, x1: encodeValue }\n      };\n    })\n    .registerChannelEncoder('y', (channel, encodeValue, encodeValues, datum, element, config) => {\n      if (!config || !isHorizontal(config.direction)) {\n        return null;\n      }\n      return {\n        shaft: { y: encodeValue, y1: encodeValue }\n      };\n    })\n    .registerChannelEncoder('q1', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction) ? { box: { x: encodeValue } } : { box: { y: encodeValue } };\n    })\n    .registerChannelEncoder('q3', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction) ? { box: { x1: encodeValue } } : { box: { y1: encodeValue } };\n    })\n    .registerChannelEncoder('min', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction) ? { shaft: { x: encodeValue } } : { shaft: { y: encodeValue } };\n    })\n    .registerChannelEncoder('max', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction) ? { shaft: { x1: encodeValue } } : { shaft: { y1: encodeValue } };\n    })\n    .registerChannelEncoder('median', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return config && isHorizontal(config.direction)\n        ? { median: { x: encodeValue, x1: encodeValue, visible: true } }\n        : { median: { y: encodeValue, y1: encodeValue, visible: true } };\n    })\n    .registerChannelEncoder('angle', (channel, encodeValue, encodeValues, datum, element, config) => {\n      const defaultAnchor =\n        config && isHorizontal(config.direction)\n          ? [(encodeValues.min + encodeValues.max) / 2, encodeValues.y]\n          : [encodeValues.x, (encodeValues.min + encodeValues.max) / 2];\n      const anchor = encodeValues.anchor ?? defaultAnchor;\n      return {\n        shaft: { angle: encodeValue, anchor },\n        box: { angle: encodeValue, anchor },\n        median: { angle: encodeValue, anchor }\n      };\n    })\n    .registerChannelEncoder('medianFill', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return { median: { fill: encodeValue } };\n    })\n    .registerChannelEncoder('violinFill', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return { violin: { fill: encodeValue } };\n    })\n    .registerChannelEncoder('violinStroke', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return { violin: { stroke: encodeValue } };\n    })\n    .registerChannelEncoder('density', (channel, encodeValue, encodeValues, datum, element, config) => {\n      return { violin: { points: encodeValue } };\n    })\n    .registerDefaultEncoder(() => {\n      return {\n        violin: { fill: '#ff807f', stroke: '#ff0000' },\n        shaft: { stroke: '#000000' },\n        box: { fill: '#000000' },\n        median: { fill: '#FFFFFF', visible: false }\n      };\n    });\n  registerGlyphMark();\n  registerGlyphGraphic();\n  registerPolygonGraphic();\n  registerRuleGraphic();\n  registerRectGraphic();\n  registerSymbolGraphic();\n};\n"]}