{"version":3,"sources":["../src/interactions/datazoom-filter.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;AACjE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AAEnD,MAAM,OAAO,cAAe,SAAQ,MAAM;IAOxC,YAAY,IAAW,EAAE,OAA2B;QAClD,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QANvB,SAAI,GAAW,cAAc,CAAC,IAAI,CAAC;QAOjC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QAEzE,IAAI,CAAC,MAAM,GAAG,IAAI;aACf,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;aACvC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,eAAe,CAAC,SAAS,IAAK,IAAmB,CAAC,aAAa,KAAK,UAAU,CAAC,CAAC;QACpH,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;YAC7C,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;YAC5C,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;IAC/B,CAAC;IAES,SAAS;QACjB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,OAAO,EAAE,CAAC;SACX;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAc,CAAC;QAE7C,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,EAAE;YAC5B,OAAO,EAAE,CAAC;SACX;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;QAEhD,MAAM,cAAc,GAAG,CAAC,KAAU,EAAuB,EAAE;YACzD,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YACtC,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;YAClC,OAAO;gBACL,UAAU;gBACV,QAAQ;gBACR,KAAK,EAAE,QAAQ,CAAC,mBAAmB,CAAC,UAAU,CAAC;gBAC/C,GAAG,EAAE,QAAQ,CAAC,mBAAmB,CAAC,QAAQ,CAAC;aAC5C,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;YACjC,CAAC,CAAC,CAAC,KAAU,EAAE,WAAgC,EAAE,EAAE;gBAC/C,IAAI,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;oBACtD,OAAO,IAAI,CAAC;iBACb;gBACD,MAAM,KAAK,GAAG,QAAQ,CAAC,oBAAoB,EAAE,CAAC;gBAC9C,MAAM,UAAU,GAAG,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBAE5D,OAAO,WAAW,CAAC,UAAU,IAAI,UAAU,IAAI,WAAW,CAAC,QAAQ,IAAI,UAAU,CAAC;YACpF,CAAC;YACH,CAAC,CAAC,MAAM,CAAC;QAEX,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,cAAc,CAAC,QAAQ,EAAE,cAAc,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;QAEvG,OAAO;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,IAAI,CAAC,YAAY;aAC3B;SACF,CAAC;IACJ,CAAC;;AA9DM,mBAAI,GAAW,iBAAiB,CAAC;AAGjC,6BAAc,GAAsC,EAAE,CAAC","file":"datazoom-filter.js","sourcesContent":["import type { DataFilterOptions, DatazoomFilterValue, IComponent, IDatazoom, IView } from '../types';\nimport { DataFilterRank, GrammarMarkType } from '../graph/enums';\nimport { isNil, isString } from '@visactor/vutils';\nimport { Filter } from './filter';\nimport { getScaleRangeRatio } from '../util/scale';\n\nexport class DatazoomFilter extends Filter {\n  static type: string = 'datazoom-filter';\n  type: string = DatazoomFilter.type;\n\n  static defaultOptions: Omit<DataFilterOptions, 'target'> = {};\n  options: DataFilterOptions;\n\n  constructor(view: IView, options?: DataFilterOptions) {\n    super(view, options);\n    this.options = Object.assign({}, DatazoomFilter.defaultOptions, options);\n\n    this._marks = view\n      .getMarksBySelector(this.options.source)\n      .filter(mark => mark.markType === GrammarMarkType.component && (mark as IComponent).componentType === 'datazoom');\n    this._data = isString(this.options.target.data)\n      ? view.getDataById(this.options.target.data)\n      : this.options.target.data;\n  }\n\n  protected getEvents() {\n    if (!this._marks || this._marks.length === 0) {\n      return [];\n    }\n\n    const datazoom = this._marks[0] as IDatazoom;\n\n    if (!this._data || !datazoom) {\n      return [];\n    }\n\n    const filter = this.options.target.filter;\n    const transform = this.options.target.transform;\n\n    const getFilterValue = (event: any): DatazoomFilterValue => {\n      const startRatio = event.detail.start;\n      const endRatio = event.detail.end;\n      return {\n        startRatio,\n        endRatio,\n        start: datazoom.invertDatazoomRatio(startRatio),\n        end: datazoom.invertDatazoomRatio(endRatio)\n      };\n    };\n    const dataFilter = isString(filter)\n      ? (datum: any, filterValue: DatazoomFilterValue) => {\n          if (isNil(filterValue.start) || isNil(filterValue.end)) {\n            return true;\n          }\n          const scale = datazoom.getDatazoomMainScale();\n          const datumRatio = getScaleRangeRatio(scale, datum[filter]);\n\n          return filterValue.startRatio <= datumRatio && filterValue.endRatio >= datumRatio;\n        }\n      : filter;\n\n    this._filterData(this._data, datazoom, DataFilterRank.datazoom, getFilterValue, dataFilter, transform);\n\n    return [\n      {\n        type: 'change',\n        handler: this.handleFilter\n      }\n    ];\n  }\n}\n"]}