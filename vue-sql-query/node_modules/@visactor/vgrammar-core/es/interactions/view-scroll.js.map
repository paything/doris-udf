{"version":3,"sources":["../src/interactions/view-scroll.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAE5C,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAM5D,MAAM,OAAO,UAAW,SAAQ,kBAAqC;IAenE,YAAY,IAAW,EAAE,MAA0B;QACjD,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;QAdpE,SAAI,GAAW,UAAU,CAAC,IAAI,CAAC;QA0B/B,qBAAgB,GAAG,CAAC,CAAmB,EAAE,EAAE;YACxC,IAAoC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;gBACpE,OAAO;aACR;YAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;YAED,IAAI,CAAC,UAAU,CACb,OAAO,EACN,IAAoC,CAAC,iBAAiB,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EACrF,QAAQ,EACR,CAAC,CACF,CAAC;QACJ,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,CAAmB,EAAE,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,OAAO;aACR;YAEA,IAAoC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gBAChE,OAAO;aACR;YAED,IAAI,CAAC,UAAU,CACb,KAAK,EACJ,IAAoC,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EACnF,QAAQ,EACR,CAAC,CACF,CAAC;YACF,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,CAAC;QA/CA,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC5E,CAAC;IAES,SAAS;QACjB,OAAO;YACL,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE;YACzD,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE;SAC3D,CAAC;IACJ,CAAC;;AAzBM,eAAI,GAAW,aAAa,CAAC;AAG7B,yBAAc,GAAsB;IACzC,QAAQ,EAAE,IAAI;IACd,QAAQ,EAAE,KAAK;IACf,OAAO,EAAE,OAAO;IAChB,UAAU,EAAE,WAAW;IACvB,QAAQ,EAAE,GAAG;CACd,CAAC","file":"view-scroll.js","sourcesContent":["import { throttle } from '@visactor/vutils';\nimport type { ViewScrollOptions, IView, InteractionEvent, IViewScrollMixin } from '../types';\nimport { ViewNavigationBase } from './view-navigation-base';\n\nexport interface ViewScroll\n  extends Pick<IViewScrollMixin, 'formatScrollEvent' | 'handleScrollStart' | 'handleScrollEnd'>,\n    ViewNavigationBase<ViewScrollOptions> {}\n\nexport class ViewScroll extends ViewNavigationBase<ViewScrollOptions> {\n  static type: string = 'view-scroll';\n  type: string = ViewScroll.type;\n\n  static defaultOptions: ViewScrollOptions = {\n    realtime: true,\n    reversed: false,\n    trigger: 'wheel',\n    endTrigger: 'pointerup',\n    throttle: 100\n  };\n\n  protected _isStarted?: boolean;\n  protected handleStart: (e: InteractionEvent) => void;\n\n  constructor(view: IView, option?: ViewScrollOptions) {\n    super(view, Object.assign({}, ViewScroll.defaultOptions, option));\n\n    this.handleStart = throttle(this.handleStartInner, this.options.throttle);\n  }\n\n  protected getEvents() {\n    return [\n      { type: this.options.trigger, handler: this.handleStart },\n      { type: this.options.endTrigger, handler: this.handleEnd }\n    ];\n  }\n\n  handleStartInner = (e: InteractionEvent) => {\n    (this as unknown as IViewScrollMixin).formatScrollEvent(e);\n    if (!e || (this.options.shouldStart && !this.options.shouldStart(e))) {\n      return;\n    }\n\n    this._isStarted = true;\n\n    if (!this._inited) {\n      this._initGrammars();\n    }\n\n    this.updateView(\n      'start',\n      (this as unknown as IViewScrollMixin).handleScrollStart(e, this._state, this.options),\n      'scroll',\n      e\n    );\n  };\n\n  handleEnd = (e: InteractionEvent) => {\n    if (!this._isStarted) {\n      return;\n    }\n\n    (this as unknown as IViewScrollMixin).formatScrollEvent(e);\n    if (!e || (this.options.shouldEnd && !this.options.shouldEnd(e))) {\n      return;\n    }\n\n    this.updateView(\n      'end',\n      (this as unknown as IViewScrollMixin).handleScrollEnd(e, this._state, this.options),\n      'scroll',\n      e\n    );\n    this._isStarted = false;\n  };\n}\n"]}