{"version":3,"sources":["../src/graph/mark/differ.ts"],"names":[],"mappings":"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","file":"differ.js","sourcesContent":["import { isNil } from '@visactor/vutils';\nimport type { DiffResult } from '../../types/base';\nimport { parseField } from '../../parse/util';\nimport { DefaultKey, DefaultGroupKeys } from '../constants';\n\nexport type GroupedData<T> = {\n  // iterating over array is faster than set\n  keys: (symbol | string)[];\n  // operation on map is faster than object\n  data: Map<symbol | string, T[]>;\n};\n\nexport function groupData<T>(\n  data: T[],\n  key: ((datum: T) => symbol | string) | string,\n  sort?: (a: T, b: T) => number\n): GroupedData<T> {\n  const groupedData = new Map();\n  if (!data || data.length === 0) {\n    return { keys: [], data: groupedData };\n  }\n  if (!key) {\n    groupedData.set(DefaultKey, sort ? data.slice().sort(sort) : data.slice());\n    return { keys: DefaultGroupKeys, data: groupedData };\n  }\n  const keyGetter = parseField(key);\n\n  if (data.length === 1) {\n    const key = keyGetter(data[0]);\n    groupedData.set(key, [data[0]]);\n\n    return {\n      keys: [key],\n      data: groupedData\n    };\n  }\n\n  const keys = new Set<string>();\n  data.forEach(entry => {\n    const key = keyGetter(entry);\n    const lastData = groupedData.get(key) ?? [];\n    lastData.push(entry);\n    groupedData.set(key, lastData);\n    keys.add(key);\n  });\n  if (sort) {\n    keys.forEach(key => {\n      groupedData.get(key).sort(sort);\n    });\n  }\n  return { keys: Array.from(keys), data: groupedData };\n}\n\nexport class Differ<T> {\n  private prevData: GroupedData<T>;\n  private currentData: GroupedData<T>;\n\n  private callback: (key: symbol | string, data: T[] | null, prevData: T[] | null) => void;\n\n  constructor(data?: T[], key?: ((datum: T) => symbol | string) | string, sort?: (a: T, b: T) => number) {\n    this.prevData = data?.length ? groupData(data, key ?? null, sort) : null;\n  }\n\n  setCurrentData(currentData: GroupedData<T>) {\n    this.currentData = currentData;\n  }\n\n  getCurrentData(): GroupedData<T> {\n    return this.currentData;\n  }\n\n  doDiff() {\n    if (!this.callback) {\n      return;\n    }\n    if (this.currentData && this.prevData) {\n      const prevMap = new Map(this.prevData.data);\n      const currentKeys = this.currentData.keys;\n      currentKeys.forEach(key => {\n        this.callback(key, this.currentData.data.get(key), prevMap.get(key));\n        prevMap.delete(key);\n      });\n\n      this.prevData.keys.forEach(key => {\n        if (prevMap.has(key)) {\n          this.callback(key, null, prevMap.get(key));\n        }\n      });\n    } else if (this.currentData) {\n      const currentKeys = this.currentData.keys;\n      currentKeys.forEach(key => {\n        this.callback(key, this.currentData.data.get(key), null);\n      });\n    } else if (this.prevData) {\n      this.prevData.keys.forEach(key => {\n        this.callback(key, null, this.prevData.data.get(key));\n      });\n    }\n  }\n\n  setCallback(callback: (key: symbol | string, data: T[], prevData: T[]) => void) {\n    this.callback = callback;\n  }\n\n  updateToCurrent() {\n    this.prevData = this.currentData;\n    this.currentData = null;\n  }\n\n  reset() {\n    this.prevData = null;\n  }\n}\n\nexport function diffSingle<U, V>(prev: U[], next: V[], key: (datum: U | V) => symbol | string): DiffResult<U, V> {\n  const result: DiffResult<U, V> = {\n    enter: [],\n    exit: [],\n    update: []\n  };\n\n  const differ = new Differ<U | V>(prev, key);\n  differ.setCallback((key, data, prevData) => {\n    if (isNil(data)) {\n      // exit\n      result.exit.push({ prev: prevData[0] as U });\n    } else if (isNil(prevData)) {\n      // enter\n      result.enter.push({ next: data[0] as V });\n    } else {\n      // update\n      result.update.push({ next: data[0] as V, prev: prevData[0] as U });\n    }\n  });\n  differ.setCurrentData(groupData(next, key));\n  differ.doDiff();\n\n  return result;\n}\n\nexport function diffMultiple<U, V>(prev: U[], next: V[], key: (datum: U | V) => symbol | string): DiffResult<U[], V[]> {\n  const result: DiffResult<U[], V[]> = {\n    enter: [],\n    exit: [],\n    update: []\n  };\n\n  const differ = new Differ<U | V>(prev, key);\n  differ.setCallback((key, data, prevData) => {\n    if (isNil(data)) {\n      // exit\n      result.exit.push({ prev: prevData as U[] });\n    } else if (isNil(prevData)) {\n      // enter\n      result.enter.push({ next: data as V[] });\n    } else {\n      // update\n      result.update.push({ next: data as V[], prev: prevData as U[] });\n    }\n  });\n  differ.setCurrentData(groupData(next, key));\n  differ.doDiff();\n\n  return result;\n}\n"]}