{"version":3,"sources":["../src/graph/mark/large-rects.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AAM7D,MAAM,OAAO,UAAW,SAAQ,KAAK;IACnC,YAAY,UAA+B;QACzC,KAAK,CAAC,UAAU,CAAC,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAE5B,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE;YACnB,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;;QACJ,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,EAAE,EAAE,MAAM,CAAU,CAAC;QAC7E,MAAM,MAAM,GAAI,IAAI,CAAC,SAAiC,CAAC,MAAM,CAAC;QAC9D,MAAM,MAAM,GAAG,MAAC,QAAQ,CAAC,SAAS,CAAC,IAAsB,mCAAI,IAAI,YAAY,EAAE,CAAC;QAChF,IAAI,CAAC,CAAC;QACN,IAAI,CAAC,CAAC;QACN,IAAI,KAAK,CAAC;QACV,IAAI,MAAM,CAAC;QAEX,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;YACpD,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClB,KAAK,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACtB,MAAM,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;SAClC;QAED,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QACpF,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACnB,QAAkB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;CACF","file":"large-rects.js","sourcesContent":["/**\n * use when mark render in large mode or progressive mode\n */\nimport type { IGroupGraphicAttribute, IPath, ICustomPath2D } from '@visactor/vrender-core';\nimport { Group, CustomPath2D } from '@visactor/vrender-core';\n\ninterface LargeRectsAttribute extends IGroupGraphicAttribute {\n  points: Float32Array | number[];\n}\n\nexport class LargeRects extends Group {\n  constructor(attributes: LargeRectsAttribute) {\n    super(attributes);\n    this.attribute = attributes;\n    // 这里调用渲染和事件绑定逻辑\n    this.onSetStage(() => {\n      this.render();\n    });\n  }\n\n  render() {\n    const pathNode = this.createOrUpdateChild('large-path', {}, 'path') as IPath;\n    const points = (this.attribute as LargeRectsAttribute).points;\n    const path2d = (pathNode.attribute.path as ICustomPath2D) ?? new CustomPath2D();\n    let x;\n    let y;\n    let width;\n    let height;\n\n    path2d.clear();\n    for (let i = 0, len = points.length; i < len; i += 4) {\n      x = points[i];\n      y = points[i + 1];\n      width = points[i + 2];\n      height = points[i + 3];\n      path2d.rect(x, y, width, height);\n    }\n\n    const pathAttrs = Object.assign({}, this.attribute, { path: path2d, points: null });\n    this.attribute = {};\n    (pathNode as IPath).setAttributes(pathAttrs);\n  }\n}\n"]}