{"version":3,"sources":["../src/graph/mark/graphic.ts"],"names":[],"mappings":"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","file":"graphic.js","sourcesContent":["import { Factory } from '../../core/factory';\nimport { GrammarMarkType } from '../enums';\nimport { LargeRects } from './large-rects';\nimport { LargeSymbols } from './large-symbols';\nimport type { IGraphic } from '@visactor/vrender-core';\nimport {\n  registerCircle,\n  registerArc,\n  registerArc3d,\n  registerPyramid3d,\n  registerArea,\n  registerGroup,\n  registerImage,\n  registerRect3d,\n  registerLine,\n  registerPath,\n  registerRect,\n  registerSymbol,\n  registerText,\n  registerPolygon,\n  registerRichtext,\n  registerGlyph,\n  registerShadowRoot\n} from '@visactor/vrender-kits';\nimport {\n  createArc,\n  createCircle,\n  createArc3d,\n  createPyramid3d,\n  createArea,\n  createGroup,\n  createImage,\n  createRect3d,\n  createLine,\n  createPath,\n  createRect,\n  createSymbol,\n  createText,\n  createPolygon,\n  createRichText,\n  createGlyph\n} from '@visactor/vrender-core';\nimport {\n  registerRectDataLabel,\n  registerLineDataLabel,\n  registerArcDataLabel,\n  registerSymbolDataLabel\n} from '@visactor/vrender-components';\n\nexport const registerCircleGraphic = () => {\n  registerShadowRoot();\n  registerCircle();\n  Factory.registerGraphic(GrammarMarkType.circle, createCircle);\n};\n\nexport const registerArcGraphic = () => {\n  registerShadowRoot();\n  registerArc();\n  Factory.registerGraphic(GrammarMarkType.arc, createArc);\n  registerArcDataLabel();\n};\n\nexport const registerArc3dGraphic = () => {\n  registerShadowRoot();\n  registerArc3d();\n  Factory.registerGraphic(GrammarMarkType.arc3d, createArc3d);\n};\n\nexport const registerPyramid3dGraphic = () => {\n  registerShadowRoot();\n  registerPyramid3d();\n  Factory.registerGraphic(GrammarMarkType.pyramid3d, createPyramid3d);\n};\n\nexport const registerAreaGraphic = () => {\n  registerShadowRoot();\n  registerArea();\n  Factory.registerGraphic(GrammarMarkType.area, createArea);\n  registerLineDataLabel();\n  registerSymbolDataLabel();\n};\n\nexport const registerGroupGraphic = () => {\n  registerShadowRoot();\n  registerGroup();\n  Factory.registerGraphic(GrammarMarkType.group, createGroup);\n};\n\nexport const registerImageGraphic = () => {\n  registerShadowRoot();\n  registerImage();\n  Factory.registerGraphic(GrammarMarkType.image, createImage);\n};\n\nexport const registerLineGraphic = () => {\n  registerShadowRoot();\n  registerLine();\n  registerLineDataLabel();\n  registerSymbolDataLabel();\n  Factory.registerGraphic(GrammarMarkType.line, createLine);\n};\n\nexport const registerPathGraphic = () => {\n  registerShadowRoot();\n  registerPath();\n  Factory.registerGraphic(GrammarMarkType.path, createPath);\n};\n\nexport const registerRectGraphic = () => {\n  registerShadowRoot();\n  registerRect();\n  registerRectDataLabel();\n  Factory.registerGraphic(GrammarMarkType.rect, createRect);\n};\n\nexport const registerRect3dGraphic = () => {\n  registerShadowRoot();\n  registerRect3d();\n  Factory.registerGraphic(GrammarMarkType.rect3d, createRect3d);\n};\n\nexport const registerRuleGraphic = () => {\n  registerShadowRoot();\n  registerLine();\n  Factory.registerGraphic(GrammarMarkType.rule, createLine);\n};\n\nexport const registerShapeGraphic = () => {\n  registerShadowRoot();\n  registerPath();\n  Factory.registerGraphic(GrammarMarkType.shape, createPath);\n};\n\nexport const registerSymbolGraphic = () => {\n  registerShadowRoot();\n  registerSymbol();\n  registerSymbolDataLabel();\n  Factory.registerGraphic(GrammarMarkType.symbol, createSymbol);\n};\n\nexport const registerTextGraphic = () => {\n  registerShadowRoot();\n  registerText();\n  registerRichtext();\n  Factory.registerGraphic(GrammarMarkType.text, createText);\n};\n\nexport const registerPolygonGraphic = () => {\n  registerShadowRoot();\n  registerPolygon();\n  Factory.registerGraphic(GrammarMarkType.polygon, createPolygon);\n};\n\nexport const registerRichTextGraphic = () => {\n  registerShadowRoot();\n  registerRichtext();\n  Factory.registerGraphic(GrammarMarkType.richtext, createRichText);\n};\n\nexport const registerCellGraphic = () => {\n  registerShadowRoot();\n  registerSymbol();\n  registerSymbolDataLabel();\n  Factory.registerGraphic(GrammarMarkType.cell, createSymbol);\n};\n\nexport const registerIntervalGraphic = () => {\n  registerShadowRoot();\n  registerRect();\n  registerRectDataLabel();\n  registerArc();\n  registerArcDataLabel();\n  Factory.registerGraphic(GrammarMarkType.interval, createRect);\n};\n\nexport const registerGlyphGraphic = () => {\n  registerShadowRoot();\n  registerGlyph();\n  Factory.registerGraphic(GrammarMarkType.glyph, createGlyph);\n};\n\nexport const registerLargeRectsGraphic = () => {\n  registerShadowRoot();\n  registerPath();\n  Factory.registerGraphic(GrammarMarkType.largeRects, (attrs: any) => {\n    return new LargeRects(attrs) as unknown as IGraphic;\n  });\n};\n\nexport const registerLargeSymbolsGraphic = () => {\n  registerShadowRoot();\n  registerPath();\n  Factory.registerGraphic(GrammarMarkType.largeSymbols, (attrs: any) => {\n    return new LargeSymbols(attrs) as unknown as IGraphic;\n  });\n};\n"]}