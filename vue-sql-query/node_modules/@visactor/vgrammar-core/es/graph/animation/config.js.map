{"version":3,"sources":["../src/graph/animation/config.ts"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import { array, isFunction, isNil, merge } from '@visactor/vutils';\nimport type { IElement } from '../../types';\nimport type {\n  IAnimationConfig,\n  IAnimationTimeline,\n  IAnimationTypeConfig,\n  IParsedAnimationConfig,\n  MarkFunctionValueType\n} from '../../types/animate';\nimport {\n  DefaultAnimationControlOptions,\n  DefaultAnimationDelay,\n  DefaultAnimationDelayAfter,\n  DefaultAnimationDuration,\n  DefaultAnimationEasing,\n  DefaultAnimationLoop,\n  DefaultAnimationOneByOne,\n  DefaultAnimationStartTime\n} from '../constants';\n\nfunction transformToTimelineConfig(animationConfig: IAnimationConfig): IAnimationTimeline {\n  if (isNil((animationConfig as IAnimationTimeline).timeSlices)) {\n    const typeConfig = animationConfig as IAnimationTypeConfig;\n    // transform type animation config into timeline animation config\n    return {\n      startTime: typeConfig.startTime ?? DefaultAnimationStartTime,\n      totalTime: typeConfig.totalTime,\n      oneByOne: typeConfig.oneByOne ?? DefaultAnimationOneByOne,\n      loop: typeConfig.loop ?? DefaultAnimationLoop,\n      controlOptions: merge({}, DefaultAnimationControlOptions, typeConfig.controlOptions ?? {}),\n      timeSlices: [\n        {\n          duration: typeConfig.duration ?? DefaultAnimationDuration,\n          delay: typeConfig.delay ?? DefaultAnimationDelay,\n          delayAfter: typeConfig.delayAfter ?? DefaultAnimationDelayAfter,\n          effects: [\n            {\n              type: typeConfig.type,\n              channel: typeConfig.channel,\n              custom: typeConfig.custom,\n              easing: typeConfig.easing ?? DefaultAnimationEasing,\n              customParameters: typeConfig.customParameters,\n              options: typeConfig.options\n            }\n          ]\n        }\n      ]\n    };\n  }\n\n  const timeSlices = array((animationConfig as IAnimationTimeline).timeSlices);\n  const formattedTimeSlices = timeSlices.filter(timeSlice => {\n    return timeSlice.effects && array(timeSlice.effects).filter(effect => effect.channel || effect.type).length;\n  });\n\n  if (formattedTimeSlices.length) {\n    // fill up default animation config\n    return {\n      startTime: (animationConfig as IAnimationTimeline).startTime ?? DefaultAnimationStartTime,\n      totalTime: (animationConfig as IAnimationTimeline).totalTime,\n      oneByOne: (animationConfig as IAnimationTimeline).oneByOne ?? DefaultAnimationOneByOne,\n      loop: (animationConfig as IAnimationTimeline).loop ?? DefaultAnimationLoop,\n      controlOptions: merge({}, DefaultAnimationControlOptions, animationConfig.controlOptions ?? {}),\n      timeSlices: formattedTimeSlices.map(timeSlice => {\n        return {\n          duration: timeSlice.duration,\n          delay: timeSlice.delay ?? DefaultAnimationDelay,\n          delayAfter: timeSlice.delayAfter ?? DefaultAnimationDelayAfter,\n          effects: array(timeSlice.effects)\n            .filter(effect => effect.channel || effect.type)\n            .map(effect => {\n              return {\n                type: effect.type,\n                channel: effect.channel,\n                custom: effect.custom,\n                easing: effect.easing ?? DefaultAnimationEasing,\n                customParameters: effect.customParameters,\n                options: effect.options\n              };\n            })\n        };\n      }),\n      partitioner: (animationConfig as IAnimationTimeline).partitioner,\n      sort: (animationConfig as IAnimationTimeline).sort\n    };\n  }\n\n  return;\n}\n\nexport function normalizeAnimationConfig(\n  config: Record<string, IAnimationConfig | IAnimationConfig[]>\n): Array<IParsedAnimationConfig> {\n  let normalizedConfig: Array<IParsedAnimationConfig> = [];\n\n  Object.keys(config).forEach(state => {\n    normalizedConfig = normalizedConfig.concat(normalizeStateAnimationConfig(state, config[state]));\n  });\n  return normalizedConfig;\n}\n\nexport function normalizeStateAnimationConfig(\n  state: string,\n  config: IAnimationConfig | IAnimationConfig[],\n  initialIndex: number = 0\n): Array<IParsedAnimationConfig> {\n  const normalizedConfig: Array<IParsedAnimationConfig> = [];\n  let index = initialIndex;\n  array(config).forEach(animationConfig => {\n    const timelineConfig = transformToTimelineConfig(animationConfig);\n    if (timelineConfig) {\n      normalizedConfig.push({\n        state,\n        id: timelineConfig.id ?? `${state}-${index}`,\n        timeline: timelineConfig,\n        originConfig: animationConfig\n      });\n      index += 1;\n    }\n  });\n  return normalizedConfig;\n}\n\nexport function invokeAnimateSpec<T>(spec: MarkFunctionValueType<T>, element: IElement, parameters: any): T {\n  if (isFunction(spec)) {\n    return spec.call(null, element.getDatum(), element, parameters);\n  }\n  return spec;\n}\n"]}