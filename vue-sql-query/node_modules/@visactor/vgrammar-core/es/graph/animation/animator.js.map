{"version":3,"sources":["../src/graph/animation/animator.ts"],"names":[],"mappings":"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","file":"animator.js","sourcesContent":["import { isNil, isValidNumber } from '@visactor/vutils';\nimport type { IAnimate as IGraphicAnimate } from '@visactor/vrender-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { ACustomAnimate, Animate, AnimateGroup, AnimateMode } from '@visactor/vrender-core';\nimport type {\n  IAnimationChannelInterpolator,\n  IAnimationCustomConstructor,\n  IAnimationTimeline,\n  IAnimator,\n  IAnimatorOptions,\n  IAnimationUnit,\n  IAnimationParameters,\n  IAnimationTimeSlice,\n  IElement,\n  IAnimationEffect\n} from '../../types';\nimport { AttributeAnimate, channelAnimationAttributes, CustomInterpolator, typeAnimationAttributes } from './attribute';\n\nAnimate.mode |= AnimateMode.SET_ATTR_IMMEDIATELY;\n\nlet GlobalAnimatorId = 0;\n\nconst isCustomAnimateCtor = (custom?: IAnimationChannelInterpolator | IAnimationCustomConstructor) => {\n  if (isNil(custom) || isNil(custom.prototype)) {\n    return false;\n  }\n  const prototype = custom.prototype ?? {};\n  return (\n    prototype instanceof ACustomAnimate ||\n    // similar to ACustomAnimate, apply for different vrender version\n    ('onBind' in prototype && 'onStart' in prototype && 'onEnd' in prototype && 'onUpdate' in prototype)\n  );\n};\n\nexport class Animator implements IAnimator {\n  id: number = GlobalAnimatorId++;\n  element: IElement;\n  animationOptions: IAnimatorOptions;\n  isAnimating: boolean = false;\n\n  private unit: IAnimationUnit;\n  private runnings: IGraphicAnimate[] = [];\n  private callbackFunction: (...args: any[]) => any;\n\n  constructor(\n    element: IElement,\n    unit: IAnimationUnit,\n    animationOptions: {\n      state: string;\n      timeline: IAnimationTimeline;\n      id: string;\n    }\n  ) {\n    this.element = element;\n    this.animationOptions = animationOptions;\n    this.unit = unit;\n  }\n\n  callback(callbackFunction: (...args: any[]) => void): this {\n    this.callbackFunction = callbackFunction;\n    return this;\n  }\n\n  animate(animationParameters: IAnimationParameters, parameters: any): this {\n    this.isAnimating = true;\n\n    this.animateElement(animationParameters, parameters);\n\n    // if no valid running, end animating immediately\n    if (this.runnings.length === 0) {\n      this.animationEnd();\n    }\n    return this;\n  }\n\n  stop(stopState: 'start' | 'end' | null = 'end', invokeCallback: boolean = true): this {\n    // FIXME: wait for VRender to fix 'end' parameter\n    this.runnings.forEach(running => running.stop(stopState));\n    this.animationEnd(invokeCallback);\n    return this;\n  }\n\n  pause(): this {\n    this.runnings.forEach(running => running.pause());\n    return this;\n  }\n\n  resume(): this {\n    this.runnings.forEach(running => running.resume());\n    return this;\n  }\n\n  startAt(startTime: number): this {\n    this.runnings.forEach(running => {\n      const initialDelay = this.unit.initialDelay;\n      running.startAt(initialDelay + startTime);\n    });\n    return this;\n  }\n\n  getTotalAnimationTime() {\n    const timeLineDuration = this.unit.initialDelay + this.unit.loopDuration * this.unit.loopCount;\n    return this.unit.totalTime ?? timeLineDuration;\n  }\n\n  getEndAttributes() {\n    return this.runnings.reduce((attributes, running) => {\n      return Object.assign(attributes, running.getEndProps());\n    }, {} as Record<string, any>);\n  }\n\n  private animationEnd(invokeCallback: boolean = true) {\n    this.isAnimating = false;\n    this.runnings = null;\n    if (invokeCallback) {\n      this.callbackFunction?.call(null);\n    }\n  }\n\n  private animateElement(animationParameters: IAnimationParameters, parameters: any) {\n    const graphicItem = this.element.getGraphicItem();\n\n    if (!graphicItem) {\n      return;\n    }\n\n    const graphicAnimate: IGraphicAnimate = graphicItem.animate();\n    this.runnings.push(graphicAnimate);\n    // initialDelay is only used at first loop\n    graphicAnimate.startAt(this.unit.initialDelay);\n    // execute loop animation\n    graphicAnimate.wait(this.unit.loopDelay);\n    this.unit.timeSlices.forEach(timeSlice => {\n      this.animateTimeSlice(graphicAnimate, timeSlice, animationParameters, parameters);\n    });\n    graphicAnimate.wait(this.unit.loopDelayAfter);\n\n    graphicAnimate.loop(this.unit.loopCount - 1);\n\n    if (isValidNumber(this.unit.totalTime)) {\n      // FIXME: use VRender api instead after VRender refactor is finished\n      setTimeout(() => {\n        if (graphicAnimate) {\n          graphicAnimate.stop('end');\n        }\n      }, this.unit.totalTime);\n    }\n\n    graphicAnimate.onEnd(() => {\n      this.runnings = this.runnings.filter(running => running !== graphicAnimate);\n      if (this.runnings.length === 0) {\n        this.animationEnd();\n      }\n    });\n  }\n\n  private animateTimeSlice(\n    graphicAnimate: IGraphicAnimate,\n    timeSlice: IAnimationTimeSlice,\n    animationParameters: IAnimationParameters,\n    parameters: any\n  ) {\n    const delay = timeSlice.delay as number;\n    const delayAfter = timeSlice.delayAfter as number;\n    const duration = timeSlice.duration as number;\n    const effects = timeSlice.effects as IAnimationEffect[];\n\n    // wait in loop animation before animation starts\n    if (delay > 0) {\n      graphicAnimate.wait(delay);\n    }\n\n    if (effects.length < 0) {\n      graphicAnimate.wait(duration);\n    } else {\n      const customAnimates = effects\n        .map((effect, index) => {\n          const attributes =\n            (effect.type\n              ? typeAnimationAttributes(this.element, effect, animationParameters, parameters)\n              : effect.channel\n              ? channelAnimationAttributes(this.element, effect, animationParameters, parameters)\n              : undefined) ?? {};\n\n          const customOption = attributes.custom || effect?.custom;\n          const customParametersOption = attributes?.customParameters || effect?.customParameters;\n\n          if (\n            attributes.from &&\n            Object.keys(attributes.from).length &&\n            this.unit &&\n            this.animationOptions.timeline.controlOptions.immediatelyApply &&\n            this.element.mark.markType !== 'component'\n          ) {\n            this.element.getGraphicItem().setAttributes(attributes.from);\n          }\n\n          const isCustomAnimate = isCustomAnimateCtor(customOption);\n          const isCustomInterpolator = !isNil(customOption) && !isCustomAnimateCtor(customOption);\n\n          if (isCustomInterpolator) {\n            return new CustomInterpolator(attributes.from, attributes.to, duration, effect.easing, {\n              interpolator: customOption as IAnimationChannelInterpolator,\n              element: this.element,\n              parameters: customParametersOption\n            });\n          } else if (isCustomAnimate) {\n            return new (customOption as IAnimationCustomConstructor)(\n              attributes.from,\n              attributes.to,\n              duration,\n              effect.easing,\n              customParametersOption\n            );\n          } else if (attributes.to) {\n            return new AttributeAnimate(attributes.from, attributes.to, duration, effect.easing);\n          }\n        })\n        .filter(animate => !isNil(animate));\n\n      if (customAnimates.length === 1) {\n        graphicAnimate.play(customAnimates[0]);\n      } else if (customAnimates.length > 1) {\n        graphicAnimate.play(new AnimateGroup(duration, customAnimates));\n      }\n    }\n\n    if (delayAfter > 0) {\n      graphicAnimate.wait(delayAfter);\n    }\n  }\n}\n"]}