{"version":3,"sources":["../src/component/scale.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAG5C,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAE9C,MAAM,OAAgB,cAAe,SAAQ,SAAS;IAG1C,aAAa,CAAC,IAAwB;QAC9C,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,KAA6B;QACjC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,MAAM,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAC/G,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;SAC7B;QACD,MAAM,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC7E,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAE1B,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEhC,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,OAAO,IAAI,CAAC;IACd,CAAC;IAED,QAAQ;QACN,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAC/F,CAAC;CACF","file":"scale.js","sourcesContent":["import { isString } from '@visactor/vutils';\nimport type { IScale, Nil } from '../types';\nimport type { IScaleComponent, ScaleComponentSpec } from '../types/component';\nimport { Component } from '../view/component';\n\nexport abstract class ScaleComponent extends Component implements IScaleComponent {\n  protected declare spec: ScaleComponentSpec;\n\n  protected parseAddition(spec: ScaleComponentSpec) {\n    super.parseAddition(spec);\n    this.scale(spec.scale);\n    return this;\n  }\n\n  scale(scale?: IScale | string | Nil) {\n    if (this.spec.scale) {\n      const lastScaleGrammar = isString(this.spec.scale) ? this.view.getScaleById(this.spec.scale) : this.spec.scale;\n      this.detach(lastScaleGrammar);\n      this.spec.scale = undefined;\n    }\n    const scaleGrammar = isString(scale) ? this.view.getScaleById(scale) : scale;\n    this.spec.scale = scaleGrammar;\n    this.attach(scaleGrammar);\n\n    this._updateComponentEncoders();\n\n    this.commit();\n    return this;\n  }\n\n  getScale() {\n    return isString(this.spec.scale) ? this.view.getScaleById(this.spec.scale) : this.spec.scale;\n  }\n}\n"]}