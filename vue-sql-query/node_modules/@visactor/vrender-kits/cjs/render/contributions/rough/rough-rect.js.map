{"version":3,"sources":["../src/render/contributions/rough/rough-rect.ts"],"names":[],"mappings":"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","file":"rough-rect.js","sourcesContent":["import type {\n  IGraphicRender,\n  IRenderService,\n  IRect,\n  IDrawContext,\n  IGraphicRenderDrawParams\n} from '@visactor/vrender-core';\nimport { RECT_NUMBER_TYPE, DefaultCanvasRectRender, getTheme, inject, injectable } from '@visactor/vrender-core';\nimport rough from 'roughjs';\nimport { defaultRouthThemeSpec } from './config';\nimport { RoughBaseRender } from './base-render';\n\n@injectable()\nexport class RoughCanvasRectRender extends RoughBaseRender implements IGraphicRender {\n  type: 'rect';\n  numberType: number;\n  style: 'rough' = 'rough';\n\n  constructor(\n    @inject(DefaultCanvasRectRender)\n    public readonly canvasRenderer: IGraphicRender\n  ) {\n    super();\n    this.type = 'rect';\n    this.numberType = RECT_NUMBER_TYPE;\n  }\n\n  draw(rect: IRect, renderService: IRenderService, drawContext: IDrawContext, params?: IGraphicRenderDrawParams) {\n    const { context } = drawContext;\n    if (!context) {\n      return;\n    }\n    // 获取到原生canvas\n    const canvas = context.canvas.nativeCanvas;\n    const rc = rough.canvas(canvas);\n\n    context.highPerformanceSave();\n\n    // const rectAttribute = graphicService.themeService.getCurrentTheme().rectAttribute;\n    const rectAttribute = rect.getGraphicTheme();\n    let { x = rectAttribute.x, y = rectAttribute.y } = rect.attribute;\n    if (!rect.transMatrix.onlyTranslate()) {\n      // 性能较差\n      x = 0;\n      y = 0;\n      context.transformFromMatrix(rect.transMatrix, true);\n    } else {\n      const { dx = rectAttribute.dx, dy = rectAttribute.dy } = rect.attribute;\n      x += dx;\n      y += dy;\n      // 当前context有rotate/scale，重置matrix\n      context.setTransformForCurrent();\n    }\n\n    const {\n      fill = rectAttribute.fill,\n      stroke = rectAttribute.stroke,\n      fillColor = rectAttribute.fill,\n      strokeColor = rectAttribute.stroke,\n      x1,\n      y1,\n      lineWidth = rectAttribute.lineWidth,\n      maxRandomnessOffset = defaultRouthThemeSpec.maxRandomnessOffset,\n      roughness = defaultRouthThemeSpec.roughness,\n      bowing = defaultRouthThemeSpec.bowing,\n      curveFitting = defaultRouthThemeSpec.curveFitting,\n      curveTightness = defaultRouthThemeSpec.curveTightness,\n      curveStepCount = defaultRouthThemeSpec.curveStepCount,\n      fillStyle = defaultRouthThemeSpec.fillStyle,\n      fillWeight = defaultRouthThemeSpec.fillWeight,\n      hachureAngle = defaultRouthThemeSpec.hachureAngle,\n      hachureGap = defaultRouthThemeSpec.hachureGap,\n      simplification = defaultRouthThemeSpec.simplification,\n      dashOffset = defaultRouthThemeSpec.dashOffset,\n      dashGap = defaultRouthThemeSpec.dashGap,\n      zigzagOffset = defaultRouthThemeSpec.zigzagOffset,\n      seed = defaultRouthThemeSpec.seed,\n      fillLineDash = defaultRouthThemeSpec.fillLineDash,\n      fillLineDashOffset = defaultRouthThemeSpec.fillLineDashOffset,\n      disableMultiStroke = defaultRouthThemeSpec.disableMultiStroke,\n      disableMultiStrokeFill = defaultRouthThemeSpec.disableMultiStrokeFill,\n      preserveVertices = defaultRouthThemeSpec.preserveVertices,\n      fixedDecimalPlaceDigits = defaultRouthThemeSpec.fixedDecimalPlaceDigits\n    } = rect.attribute as any;\n\n    let { width = rectAttribute.width, height = rectAttribute.height } = rect.attribute;\n\n    width = (width ?? x1 - x) || 0;\n    height = (height ?? y1 - y) || 0;\n\n    rc.rectangle(x, y, width, height, {\n      fill: fill ? (fillColor as string) : undefined,\n      stroke: stroke ? (strokeColor as string) : undefined,\n      strokeWidth: lineWidth,\n      maxRandomnessOffset,\n      roughness,\n      bowing,\n      curveFitting,\n      curveTightness,\n      curveStepCount,\n      fillStyle,\n      fillWeight,\n      hachureAngle,\n      hachureGap,\n      simplification,\n      dashOffset,\n      dashGap,\n      zigzagOffset,\n      seed,\n      fillLineDash,\n      fillLineDashOffset,\n      disableMultiStroke,\n      disableMultiStrokeFill,\n      preserveVertices,\n      fixedDecimalPlaceDigits\n    });\n\n    context.highPerformanceRestore();\n  }\n}\n"]}