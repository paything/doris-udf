{"version":3,"sources":["../src/animate/Ticker/default-ticker.ts"],"names":[],"mappings":"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","file":"default-ticker.js","sourcesContent":["import { EventEmitter, Logger } from '@visactor/vutils';\nimport type { ITickHandler, ITickerHandlerStatic, ITimeline, ITicker } from '../../interface';\nimport { application } from '../../application';\nimport type { TickerMode } from './type';\nimport { STATUS } from './type';\nimport { RAFTickHandler } from './raf-tick-handler';\nimport { TimeOutTickHandler } from './timeout-tick-handler';\n\nexport class DefaultTicker extends EventEmitter implements ITicker {\n  protected interval: number;\n  protected tickerHandler: ITickHandler;\n  protected _mode: TickerMode;\n  protected status: STATUS;\n  protected lastFrameTime: number;\n  protected tickCounts: number;\n  protected timelines: ITimeline[];\n  autoStop: boolean;\n\n  set mode(m: TickerMode) {\n    if (this._mode === m) {\n      return;\n    }\n    this._mode = m;\n    this.setupTickHandler();\n  }\n  get mode(): TickerMode {\n    return this._mode;\n  }\n\n  constructor(timelines: ITimeline[] = []) {\n    super();\n    this.init();\n    this.lastFrameTime = -1;\n    this.tickCounts = 0;\n    this.timelines = timelines;\n    this.autoStop = true;\n  }\n\n  init() {\n    this.interval = NaN;\n    this.status = STATUS.INITIAL;\n    application.global.hooks.onSetEnv.tap('default-ticker', () => {\n      this.initHandler();\n    });\n    if (application.global.env) {\n      this.initHandler();\n    }\n  }\n\n  addTimeline(timeline: ITimeline) {\n    this.timelines.push(timeline);\n  }\n  remTimeline(timeline: ITimeline) {\n    this.timelines = this.timelines.filter(t => t !== timeline);\n  }\n  getTimelines(): ITimeline[] {\n    return this.timelines;\n  }\n\n  protected initHandler(): ITickHandler | null {\n    if (this._mode) {\n      return null;\n    }\n    const ticks: { mode: TickerMode; cons: ITickerHandlerStatic }[] = [\n      { mode: 'raf', cons: RAFTickHandler },\n      { mode: 'timeout', cons: TimeOutTickHandler }\n    ];\n    for (let i = 0; i < ticks.length; i++) {\n      if (ticks[i].cons.Avaliable()) {\n        this.mode = ticks[i].mode;\n        break;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 设置tickHandler\n   * @returns 返回true表示设置成功，false表示设置失败\n   */\n  protected setupTickHandler(): boolean {\n    let handler: ITickHandler;\n    // 创建下一个tickHandler\n    switch (this._mode) {\n      case 'raf':\n        handler = new RAFTickHandler();\n        break;\n      case 'timeout':\n        handler = new TimeOutTickHandler();\n        break;\n      // case 'manual':\n      //   handler = new ManualTickHandler();\n      // break;\n      default:\n        Logger.getInstance().warn('非法的计时器模式');\n        handler = new RAFTickHandler();\n        break;\n    }\n    if (!handler.avaliable()) {\n      return false;\n    }\n\n    // 销毁上一个tickerHandler\n    if (this.tickerHandler) {\n      this.tickerHandler.release();\n    }\n    this.tickerHandler = handler;\n    return true;\n  }\n\n  setInterval(interval: number) {\n    this.interval = interval;\n  }\n  getInterval(): number {\n    return this.interval;\n  }\n\n  setFPS(fps: number): void {\n    this.setInterval(1000 / fps);\n  }\n  getFPS(): number {\n    return 1000 / this.interval;\n  }\n  tick(interval: number): void {\n    this.tickerHandler.tick(interval, (handler: ITickHandler) => {\n      this.handleTick(handler, { once: true });\n    });\n  }\n  tickTo(t: number): void {\n    if (!this.tickerHandler.tickTo) {\n      return;\n    }\n    this.tickerHandler.tickTo(t, (handler: ITickHandler) => {\n      this.handleTick(handler, { once: true });\n    });\n  }\n  pause(): boolean {\n    if (this.status === STATUS.INITIAL) {\n      return false;\n    }\n    this.status = STATUS.PAUSE;\n    return true;\n  }\n  resume(): boolean {\n    if (this.status === STATUS.INITIAL) {\n      return false;\n    }\n    this.status = STATUS.RUNNING;\n    return true;\n  }\n\n  ifCanStop(): boolean {\n    if (this.autoStop) {\n      if (!this.timelines.length) {\n        return true;\n      }\n      if (this.timelines.reduce((a, b) => a + b.animateCount, 0) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  start(force: boolean = false): boolean {\n    if (this.status === STATUS.RUNNING) {\n      return false;\n    }\n    if (!this.tickerHandler) {\n      return false;\n    }\n    // 如果不需要start，那就不start\n    if (!force) {\n      // 暂停状态不执行\n      if (this.status === STATUS.PAUSE) {\n        return false;\n      }\n      if (!this.timelines.length) {\n        return false;\n      }\n      if (this.timelines.reduce((a, b) => a + b.animateCount, 0) === 0) {\n        return false;\n      }\n    }\n    this.status = STATUS.RUNNING;\n    this.tickerHandler.tick(0, this.handleTick);\n    return true;\n  }\n  stop(): void {\n    // 重新设置tickHandler\n    this.status = STATUS.INITIAL;\n    this.setupTickHandler();\n    this.lastFrameTime = -1;\n  }\n\n  protected handleTick = (handler: ITickHandler, params?: { once?: boolean }) => {\n    const { once = false } = params ?? {};\n    // 尝试停止\n    if (this.ifCanStop()) {\n      this.stop();\n      return;\n    }\n    this._handlerTick();\n    if (!once) {\n      handler.tick(this.interval, this.handleTick);\n    }\n  };\n\n  protected _handlerTick = () => {\n    // 具体执行函数\n    const tickerHandler = this.tickerHandler;\n    const time = tickerHandler.getTime();\n    // 上一帧经过的时间\n    let delta = 0;\n    if (this.lastFrameTime >= 0) {\n      delta = time - this.lastFrameTime;\n    }\n    this.lastFrameTime = time;\n\n    if (this.status !== STATUS.RUNNING) {\n      return;\n    }\n    this.tickCounts++;\n\n    this.timelines.forEach(t => {\n      t.tick(delta);\n    });\n    this.emit('tick');\n  };\n\n  release(): void {\n    this.stop();\n    this.timelines = [];\n    this.tickerHandler.release();\n    this.emit('afterTick');\n  }\n\n  /**\n   * 同步tick状态，需要手动触发tick执行，保证属性为走完动画的属性\n   * 【注】grammar会设置属性到最终值，然后调用render，这时候需要VRender手动触发tick，保证属性为走完动画的属性，而不是Grammar设置上的属性\n   */\n  trySyncTickStatus() {\n    if (this.status === STATUS.RUNNING) {\n      this._handlerTick();\n    }\n  }\n}\n"]}