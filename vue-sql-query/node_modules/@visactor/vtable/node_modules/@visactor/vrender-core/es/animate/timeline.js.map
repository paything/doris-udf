{"version":3,"sources":["../src/animate/timeline.ts"],"names":[],"mappings":"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","file":"timeline.js","sourcesContent":["import { AnimateStatus } from '../common/enums';\nimport { Generator } from '../common/generator';\nimport type { IAnimate, ITimeline } from '../interface';\n\n// 管理一组动画\nexport class DefaultTimeline implements ITimeline {\n  declare id: number;\n  protected declare animateHead: IAnimate | null;\n  protected declare animateTail: IAnimate | null;\n  protected declare ticker: any;\n  declare animateCount: number;\n  protected declare paused: boolean;\n\n  constructor() {\n    this.id = Generator.GenAutoIncrementId();\n    this.animateHead = null;\n    this.animateTail = null;\n    this.animateCount = 0;\n    this.paused = false;\n  }\n\n  addAnimate(animate: IAnimate) {\n    if (!this.animateTail) {\n      this.animateHead = animate;\n      this.animateTail = animate;\n    } else {\n      this.animateTail.nextAnimate = animate;\n      animate.prevAnimate = this.animateTail;\n      this.animateTail = animate;\n      animate.nextAnimate = null;\n    }\n    this.animateCount++;\n  }\n\n  pause() {\n    this.paused = true;\n  }\n  resume() {\n    this.paused = false;\n  }\n\n  tick(delta: number) {\n    if (this.paused) {\n      return;\n    }\n    let animate = this.animateHead;\n    this.animateCount = 0;\n    while (animate) {\n      if (animate.status === AnimateStatus.END) {\n        this.removeAnimate(animate);\n      } else if (animate.status === AnimateStatus.RUNNING || animate.status === AnimateStatus.INITIAL) {\n        this.animateCount++;\n        animate.advance(delta);\n      } else if (animate.status === AnimateStatus.PAUSED) {\n        // 暂停\n        this.animateCount++;\n      }\n      animate = animate.nextAnimate;\n    }\n  }\n\n  clear() {\n    let animate = this.animateHead;\n    while (animate) {\n      animate.release();\n      animate = animate.nextAnimate;\n    }\n    this.animateHead = null;\n    this.animateTail = null;\n    this.animateCount = 0;\n  }\n\n  removeAnimate(animate: IAnimate, release: boolean = true) {\n    animate._onRemove && animate._onRemove.forEach(cb => cb());\n    if (animate === this.animateHead) {\n      this.animateHead = animate.nextAnimate;\n      if (animate === this.animateTail) {\n        // 只有一个元素\n        this.animateTail = null;\n      } else {\n        // 有多个元素\n        this.animateHead.prevAnimate = null;\n      }\n    } else if (animate === this.animateTail) {\n      // 有多个元素\n      this.animateTail = animate.prevAnimate;\n      this.animateTail.nextAnimate = null;\n      // animate.prevAnimate = null;\n    } else {\n      animate.prevAnimate.nextAnimate = animate.nextAnimate;\n      animate.nextAnimate.prevAnimate = animate.prevAnimate;\n      // animate不支持二次复用，不需要重置\n      // animate.prevAnimate = null;\n      // animate.nextAnimate = null;\n    }\n    release && animate.release();\n\n    return;\n  }\n}\n\nexport const defaultTimeline = new DefaultTimeline();\n"]}