{"version":3,"sources":["../src/ts-types/column/style.ts"],"names":[],"mappings":";;;AAqGa,QAAA,aAAa,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC","file":"style.js","sourcesContent":["import type { LineWidthsPropertyDefine } from '..';\nimport { PaddingPropertyDefine } from '..';\nimport type {\n  ColorPropertyDefine,\n  ColorsPropertyDefine,\n  IconPropertyDefine,\n  LineClamp,\n  LineDashsPropertyDefine,\n  TextOverflow,\n  UnderlinePropertyDefine,\n  LineDashPropertyDefine,\n  LineThroughPropertyDefine,\n  TagPropertyDefine,\n  PaddingsPropertyDefine,\n  StylePropertyFunctionArg,\n  CursorPropertyDefine,\n  MarkedPropertyDefine,\n  FontSizePropertyDefine,\n  FontFamilyPropertyDefine,\n  FontWeightPropertyDefine,\n  FontVariantPropertyDefine,\n  FontStylePropertyDefine,\n  TextAlignType,\n  TextBaselineType\n} from '../style-define';\nimport type { ThemeStyle } from '../theme';\n//这个style是在绘制里面的内容时用到的，用不到borderColor和borderLineWidth，所以和IStyleOption有些不一致\nexport interface ColumnStyle {\n  padding?: PaddingsPropertyDefine;\n  bgColor?: ColorPropertyDefine;\n  // eslint-disable-next-line no-undef\n  textAlign?: TextAlignType;\n  // eslint-disable-next-line no-undef\n  textBaseline?: TextBaselineType;\n  color?: ColorPropertyDefine;\n\n  fontSize?: FontSizePropertyDefine;\n  fontFamily?: FontFamilyPropertyDefine;\n  fontWeight?: FontWeightPropertyDefine;\n  fontVariant?: FontVariantPropertyDefine;\n  fontStyle?: FontStylePropertyDefine;\n\n  textOverflow?: TextOverflow;\n  // doChangeStyle: () => void;\n  clone: () => ColumnStyle;\n  linkColor?: ColorPropertyDefine;\n}\n\nexport type IHeaderStyle = ColumnStyle;\n\nexport type ISortheaderSyle = IHeaderStyle;\n\nexport interface IStyleOption {\n  bgColor?: ColorPropertyDefine;\n  padding?: PaddingsPropertyDefine;\n  textAlign?: TextAlignType;\n  textBaseline?: TextBaselineType;\n  color?: ColorPropertyDefine;\n  strokeColor?: ColorPropertyDefine;\n\n  fontSize?: FontSizePropertyDefine;\n  fontFamily?: FontFamilyPropertyDefine;\n  fontWeight?: FontWeightPropertyDefine;\n  fontVariant?: FontVariantPropertyDefine;\n  fontStyle?: FontStylePropertyDefine;\n\n  textOverflow?: TextOverflow;\n  borderColor?: ColorsPropertyDefine;\n  borderLineWidth?: LineWidthsPropertyDefine;\n\n  lineHeight?: number;\n  underline?: UnderlinePropertyDefine;\n  /** TODO */\n  underlineColor?: ColorPropertyDefine;\n  underlineDash?: LineDashPropertyDefine;\n  underlineOffset?: number;\n  lineThrough?: LineThroughPropertyDefine;\n  /** TODO */\n  lineThroughColor?: ColorPropertyDefine;\n  /** TODO */\n  lineThroughDash?: LineDashPropertyDefine;\n\n  borderLineDash?: LineDashsPropertyDefine;\n  linkColor?: ColorPropertyDefine;\n\n  // tag?: TagPropertyDefine;\n  // tagFont?: FontPropertyDefine;\n  // tagColor?: ColorPropertyDefine;\n  // tagBgColor?: ColorPropertyDefine;\n  // tagMargin?: number | string | (number | string)[];\n\n  // dropDownIcon?: IconPropertyDefine;\n  // dropDownHoverIcon?: IconPropertyDefine;\n  cursor?: CursorPropertyDefine;\n\n  textStick?: boolean | 'vertical' | 'horizontal';\n  textStickBaseOnAlign?: boolean;\n\n  marked?: MarkedPropertyDefine;\n}\n\nexport const cellStyleKeys = ['bgColor', 'color', 'strokeColor', 'borderColor', 'linkColor']; //  keys of style not change cell layout\n\nexport interface ITextStyleOption extends IStyleOption {\n  // lineHeight?: string | number;//移入IStyleOption中 单行文本类型也可以有\n  autoWrapText?: boolean;\n  lineClamp?: LineClamp;\n}\n\nexport interface IImageStyleOption extends IStyleOption {\n  // imageSizing?: 'keep-aspect-ratio';\n  // imageAutoSizing?: boolean;\n  margin?: number;\n}\n// export type ISortHeaderStyleOption = IStyleOption;\n\nexport type ColumnStyleOption =\n  | IStyleOption\n  | ITextStyleOption\n  | IImageStyleOption\n  | ProgressBarStyleOption\n  | CheckboxStyleOption\n  | ((styleArg: StylePropertyFunctionArg) => IStyleOption | ITextStyleOption | IImageStyleOption);\n\nexport type HeaderStyleOption =\n  | (IStyleOption & { textStick?: boolean | 'vertical' | 'horizontal' }) //表头可以配置吸附\n  | ITextStyleOption\n  | IImageStyleOption\n  // | ISortHeaderStyleOption\n  | ((styleArg: StylePropertyFunctionArg) => IStyleOption | ITextStyleOption | IImageStyleOption);\n// | ISortHeaderStyleOption\n\nexport type FullExtendStyle = HeaderStyleOption & ColumnStyleOption & ThemeStyle;\n\n// export interface BaseStyleOption {\n//   bgColor?: ColorPropertyDefine;\n// }\n\n// export interface StdBaseStyleOption extends BaseStyleOption {\n//   // eslint-disable-next-line no-undef\n//   textAlign?: CanvasTextAlign;\n//   // eslint-disable-next-line no-undef\n//   textBaseline?: CanvasTextBaseline;\n// }\n// export interface StyleOption extends StdBaseStyleOption {\n//   color?: ColorPropertyDefine;\n//   font?: FontPropertyDefine;\n//   padding?: PaddingsPropertyDefine;\n//   textOverflow?: TextOverflow;\n// }\nexport interface ProgressBarStyleOption extends IStyleOption {\n  // 是否显示进度条\n  showBar?: boolean | ((args: StylePropertyFunctionArg) => boolean);\n  // 进度条颜色\n  barColor?: ColorPropertyDefine;\n  // 进度条背景颜色\n  barBgColor?: ColorPropertyDefine;\n  // 进度条高度\n  barHeight?: number | string;\n  // 进度条距单元格底部距离\n  barBottom?: number | string;\n  // 进度条padding\n  barPadding?: (number | string)[];\n  // 进度条正向颜色\n  barPositiveColor?: ColorPropertyDefine;\n  // 进度条负向颜色\n  barNegativeColor?: ColorPropertyDefine;\n  // 进度条坐标轴轴颜色\n  barAxisColor?: ColorPropertyDefine;\n  // 进度条方向是否从右到左\n  barRightToLeft?: boolean;\n\n  // 是否显示进度条标记\n  showBarMark?: boolean;\n  // 进度条标记正向颜色\n  barMarkPositiveColor?: ColorPropertyDefine;\n  // 进度条标记负向颜色\n  barMarkNegativeColor?: ColorPropertyDefine;\n  // 进度条标记宽度\n  barMarkWidth?: number;\n  // 进度条标记位置\n  barMarkPosition?: 'right' | 'bottom';\n  // 进度条标记是否在进度条内\n  barMarkInBar?: boolean;\n}\n\nexport type CheckboxStyleOption = {\n  size?: number;\n  spaceBetweenTextAndIcon?: number;\n  checkboxStyle?: CheckboxStyle;\n} & ITextStyleOption;\n\nexport type RadioStyleOption = {\n  size?: number;\n  spaceBetweenTextAndIcon?: number;\n  spaceBetweenRadio?: number;\n  radioStyle?: RadioStyle;\n} & ITextStyleOption;\n\nexport type SwitchStyleOption = {\n  size?: number;\n  spaceBetweenTextAndCircle?: number;\n  switchStyle?: SwitchStyle;\n} & ITextStyleOption;\n\nexport type ButtonStyleOption = {\n  buttonStyle?: ButtonStyle;\n} & ITextStyleOption;\n\nexport type CheckboxStyle = {\n  // 选择框尺寸\n  size?: number;\n  // 选择框与文字间距\n  spaceBetweenTextAndIcon?: number;\n\n  // 未选中状态填充颜色\n  defaultFill?: string;\n  // 未选中状态描边颜色\n  defaultStroke?: string;\n  // disable状态填充颜色\n  disableFill?: string;\n  // checked状态填充颜色\n  checkedFill?: string;\n  // checked状态描边颜色\n  checkedStroke?: string;\n  // checked状态填充颜色\n  disableCheckedFill?: string;\n  // checked状态描边颜色\n  disableCheckedStroke?: string;\n\n  // checked状态图标url\n  checkIconImage?: string;\n  // indeterminate状态图标url\n  indeterminateIconImage?: string;\n};\n\nexport type RadioStyle = {\n  // 选择框尺寸\n  size?: number;\n  // 选择框与文字间距\n  spaceBetweenTextAndIcon?: number;\n  // 单元格内多个单选框，单选框直接的间距\n  spaceBetweenRadio?: number;\n\n  // 单选框环形图标外半径（会覆盖size）\n  outerRadius?: number;\n  // 单选框环形图标内半径\n  innerRadius?: number;\n\n  // 未选中状态填充颜色\n  defaultFill?: string;\n  // 未选中状态描边颜色\n  defaultStroke?: string;\n  // disable状态填充颜色\n  disableFill?: string;\n  // checked状态填充颜色\n  checkedFill?: string;\n  // checked状态描边颜色\n  checkedStroke?: string;\n  // checked状态填充颜色\n  disableCheckedFill?: string;\n  // checked状态描边颜色\n  disableCheckedStroke?: string;\n};\n\nexport type SwitchStyle = {\n  // 开关与文字间距\n  spaceBetweenTextAndCircle?: number;\n\n  // 圆圈半径\n  circleRadius?: number;\n  // 开关宽度\n  boxWidth?: number;\n  // 开关高度\n  boxHeight?: number;\n\n  // 未选中状态box填充颜色\n  checkedFill?: string;\n  // 未选中状态box填充颜色\n  uncheckedFill?: string;\n  // disable&checked状态box填充颜色\n  disableCheckedFill?: string;\n  // disable&unchecked状态box填充颜色\n  disableUncheckedFill?: string;\n  // 圆圈填充颜色\n  circleFill?: string;\n};\n\nexport interface ButtonStyle {\n  /** 按钮背景色 */\n  buttonColor?: string;\n  /** 按钮边框颜色 */\n  buttonBorderColor?: string;\n  /** 按钮边框宽度 */\n  buttonLineWidth?: number;\n  /** 按钮圆角 */\n  buttonBorderRadius?: number;\n  /** 按钮hover状态背景色 */\n  buttonHoverColor?: string;\n  /** 按钮hover状态边框颜色 */\n  buttonHoverBorderColor?: string;\n  /** 按钮hover状态文本颜色 */\n  buttonTextHoverColor?: string;\n  /** 按钮disable状态背景色 */\n  buttonDisableColor?: string;\n  /** 按钮disable状态边框颜色 */\n  buttonDisableBorderColor?: string;\n  /** 按钮disable状态文本颜色 */\n  buttonTextDisableColor?: string;\n  /** 按钮内边距 */\n  buttonPadding?: number;\n}\n"]}