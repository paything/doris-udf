{"version":3,"sources":["../src/ts-types/pivot-table/indicator/basic-indicator.ts"],"names":[],"mappings":"","file":"basic-indicator.js","sourcesContent":["import type { ICustomRender } from '../../customElement';\nimport type { ICustomLayout } from '../../customLayout';\nimport type { FieldFormat } from '../../table-engine';\nimport type { ColumnIconOption } from '../../icon';\nimport type { MenuListItem } from '../../menu';\nimport type { BaseCellInfo, CellInfo, IDimensionInfo } from '../../common';\nimport type { IEditor } from '@visactor/vtable-editors';\nimport type { BaseTableAPI } from '../../base-table';\n\nexport interface IBasicHeaderIndicator {\n  // 单种指标属性配置\n  indicatorKey: string; // 指标的唯一标识 用处对应到具体数据查询阶段 flat数据\n  title?: string; // 指标名\n  // headerType?: HeaderTypeOption | null; //指标表头类型\n  // headerStyle?: HeaderStyleOption | null; //指标名称在表头部分显示类型\n  headerIcon?: (string | ColumnIconOption)[] | ((args: CellInfo) => (string | ColumnIconOption)[]);\n\n  // linkJump?: boolean;\n  // linkDetect?: boolean;\n  // templateLink?: string | FieldGetter;\n\n  // chartSpec?: any | ((arg0: CustomRenderFunctionArg) => any);\n  // chartModule?: string; // 如果配置了columnType未chart，chartType来指定图表组件类型 如'vchart' 需要从预先register的图表类型获取\n  // sparklineSpec?: SparklineSpec | ((arg0: CustomRenderFunctionArg) => SparklineSpec);\n\n  dropDownMenu?: MenuListItem[] | ((args: { row: number; col: number; table: BaseTableAPI }) => MenuListItem[]); // 针对单独指标上配置下拉按钮\n  /** sort排序规则 */\n  sort?: boolean;\n  /** 显示sort排序icon。为了仅仅显示图标，无排序逻辑 */\n  showSort?: boolean | ((args: { row: number; col: number; table: BaseTableAPI }) => boolean);\n  disableColumnResize?: boolean; // 是否禁用调整列宽,如果是转置表格或者是透视表的指标是行方向指定 那该配置不生效\n  /** 指标隐藏 默认false */\n  hide?: boolean | ((args: { dimensionPaths: IDimensionInfo[]; table: BaseTableAPI }) => boolean);\n  /** 指标名称表头自定义渲染内容定义 */\n  headerCustomRender?: ICustomRender; // header单元格的自定义内容\n  /** 指标名称表头自定义布局元素 */\n  headerCustomLayout?: ICustomLayout;\n  editor?: string | IEditor | ((args: BaseCellInfo & { table: BaseTableAPI }) => string | IEditor);\n\n  /** 该指标表头单元格不支持hover交互行为 */\n  disableHeaderHover?: boolean;\n  /** 该指标表头单元格不支持选中 */\n  disableHeaderSelect?: boolean;\n  /** 设置表头编辑器 */\n  headerEditor?: string | IEditor | ((args: BaseCellInfo & { table: BaseTableAPI }) => string | IEditor);\n}\n\nexport interface IBasicColumnIndicator {\n  width?: string | number;\n  minWidth?: number | string;\n  maxWidth?: number | string;\n  format?: FieldFormat; // 指标值格式化\n  headerFormat?: FieldFormat; // 指标名称格式化\n  // cellType?: ColumnTypeOption | BaseColumn<any, any> | null; // body指标值显示类型\n  // style?: ColumnStyleOption | null; // body部分指标值显示样式\n  icon?:\n    | string\n    | ColumnIconOption\n    | (string | ColumnIconOption)[]\n    | ((args: CellInfo) => undefined | string | ColumnIconOption | (string | ColumnIconOption)[]);\n\n  /** 指标值body单元格自定义渲染内容定义 */\n  customRender?: ICustomRender; // body单元格的自定义内容\n  /** 指标值body单元格自定义布局元素 */\n  customLayout?: ICustomLayout;\n\n  /** 该指标内容不支持hover交互行为 */\n  disableHover?: boolean;\n  /** 该指标内容不支持选中 */\n  disableSelect?: boolean | ((col: number, row: number, table: BaseTableAPI) => boolean);\n}\n"]}