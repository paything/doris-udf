import type { ICustomRender } from '../../customElement';
import type { ICustomLayout } from '../../customLayout';
import type { FieldFormat } from '../../table-engine';
import type { ColumnIconOption } from '../../icon';
import type { MenuListItem } from '../../menu';
import type { BaseCellInfo, CellInfo, SortOption } from '../../common';
import type { IEditor } from '@visactor/vtable-editors';
import type { BaseTableAPI } from '../../base-table';
export interface IBasicDimension {
    dimensionKey: string;
    title: string;
    headerFormat?: FieldFormat;
    headerIcon?: string | ColumnIconOption | (string | ColumnIconOption)[] | ((args: CellInfo) => undefined | string | ColumnIconOption | (string | ColumnIconOption)[]);
    width?: number | string;
    minWidth?: number | string;
    maxWidth?: number | string;
    drillDown?: boolean;
    drillUp?: boolean;
    dropDownMenu?: MenuListItem[] | ((args: {
        row: number;
        col: number;
        table: BaseTableAPI;
    }) => MenuListItem[]);
    cornerDropDownMenu?: MenuListItem[];
    sort?: SortOption;
    showSort?: boolean | ((args: {
        row: number;
        col: number;
        table: BaseTableAPI;
    }) => boolean);
    showSortInCorner?: boolean;
    dragHeader?: boolean;
    headerCustomRender?: ICustomRender;
    headerCustomLayout?: ICustomLayout;
    description?: string | ((args: CellInfo) => string);
    cornerDescription?: string;
    disableHeaderHover?: boolean;
    disableHeaderSelect?: boolean;
    headerEditor?: string | IEditor | ((args: BaseCellInfo & {
        table: BaseTableAPI;
    }) => string | IEditor);
    cornerHeaderIcon?: string | ColumnIconOption | (string | ColumnIconOption)[] | ((args: CellInfo) => undefined | string | ColumnIconOption | (string | ColumnIconOption)[]);
}
