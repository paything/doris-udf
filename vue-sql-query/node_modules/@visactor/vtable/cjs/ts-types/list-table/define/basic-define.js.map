{"version":3,"sources":["../src/ts-types/list-table/define/basic-define.ts"],"names":[],"mappings":"","file":"basic-define.js","sourcesContent":["import type { BaseCellInfo, CellInfo, MergeCellOption, SortOption } from '../../common';\nimport type { ICustomRender } from '../../customElement';\nimport type { ICustomLayout } from '../../customLayout';\nimport type { FieldDef, FieldFormat, FieldKeyDef } from '../../table-engine';\nimport type { ColumnIconOption } from '../../icon';\nimport type { MenuListItem } from '../../menu';\nimport type { BaseTableAPI } from '../../base-table';\nimport type { IEditor } from '@visactor/vtable-editors';\nimport type { Aggregation, CustomAggregation } from '../../new-data-set';\n\n// eslint-disable-next-line no-unused-vars\nexport interface IBasicHeaderDefine {\n  // 表头的标题\n  title?: string | (() => string); //支持图文混合\n  /** 表头Icon配置 */\n  headerIcon?: string | ColumnIconOption | (string | ColumnIconOption)[];\n  // | ((args: CellInfo) => string | ColumnIconOption | (string | ColumnIconOption)[]);\n\n  // headerStyle?: HeaderStyleOption | null;\n  // style?: ColumnStyleOption | null;\n  // headerType?: HeaderTypeOption | headerType.BaseHeader | null;\n  /** sort排序规则 */\n  sort?: SortOption;\n  /** 显示sort排序icon。为了仅仅显示图标，无排序逻辑 */\n  showSort?: boolean;\n  /** 该列不支持hover交互行为 */\n  disableHover?: boolean;\n  /** 该列不支持选中 */\n  disableSelect?: boolean | ((col: number, row: number, table: BaseTableAPI) => boolean);\n  /** 该列表头不支持hover交互行为 */\n  disableHeaderHover?: boolean;\n  /** 该列表头不支持选中 */\n  disableHeaderSelect?: boolean;\n  /** 表头hover时的描述信息 会以tooltip形式展示出来 */\n  description?: string;\n  /** 下拉菜单项配置 */\n  dropDownMenu?: MenuListItem[];\n  /** 表头自定义渲染函数 */\n  headerCustomRender?: ICustomRender;\n  /** 表头自定义渲染元素定义 */\n  headerCustomLayout?: ICustomLayout;\n  /** 是否可以拖拽表头 */\n  dragHeader?: boolean;\n  /**\n   * 列宽计算模式，only-header只考虑表头的内容 only-body只考虑body的内容  normal能被显示出来的所有内容\n   */\n  columnWidthComputeMode?: 'normal' | 'only-header' | 'only-body';\n  /**\n   *  是否禁用调整列宽,如果是转置表格或者是透视表的指标是行方向指定 那该配置不生效\n   */\n  disableColumnResize?: boolean;\n  headerEditor?: string | IEditor | ((args: BaseCellInfo & { table: BaseTableAPI }) => string | IEditor);\n}\n\nexport interface IBasicColumnBodyDefine {\n  field: FieldDef;\n  /** @deprecated 已不维护 */\n  fieldKey?: FieldKeyDef;\n  // 列的唯一标识\n  key?: string;\n  fieldFormat?: FieldFormat;\n  width?: number | string;\n  minWidth?: number | string;\n  maxWidth?: number | string;\n  //是否展示为树形结构\n  tree?: boolean;\n  icon?:\n    | string\n    | ColumnIconOption\n    | (string | ColumnIconOption)[]\n    | ((\n        args: CellInfo & { table: BaseTableAPI }\n      ) => undefined | string | ColumnIconOption | (string | ColumnIconOption)[]);\n\n  // cellType?: ColumnTypeOption | BaseColumn<T, any> | null;\n\n  // /** 如果是绘制图表库组件的图表类型 需要将注入的组件名称 写到chartType */\n  // chartModule?: string;\n  // /** 如果是绘制图表库组件的图表类型 统一图表配置chartSpec */\n  // chartSpec?: any | ((arg0: CellInfo) => any);\n  // sparklineSpec?: SparklineSpec | ((arg0: CellInfo) => SparklineSpec);\n  // style?: ColumnStyleOption | null;\n  /** 是否对相同内容合并单元格 **/\n  mergeCell?: MergeCellOption;\n  /** 是否隐藏 */\n  hide?: boolean;\n  customRender?: ICustomRender;\n  customLayout?: ICustomLayout;\n  editor?: string | IEditor | ((args: BaseCellInfo & { table: BaseTableAPI }) => string | IEditor);\n  aggregation?: Aggregation | CustomAggregation | (Aggregation | CustomAggregation)[];\n}\n"]}