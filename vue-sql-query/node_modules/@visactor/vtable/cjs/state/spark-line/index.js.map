{"version":3,"sources":["../src/state/spark-line/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { createLine, createSymbol } from './../../vrender';\nimport { TABLE_EVENT_TYPE } from '../../core/TABLE_EVENT_TYPE';\nimport type { MousePointerSparklineEvent } from '../../ts-types';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\n\nexport function clearChartHover(col: number, row: number, table: BaseTableAPI) {\n  const cellGroup = table.scenegraph.getCell(col, row);\n  const sparkline = cellGroup.getChildByName('sparkline');\n  const highlightLine = sparkline?.getChildByName('highlight-line');\n  const highlightSymbol = sparkline?.getChildByName('highlight-symbol');\n  if (highlightLine) {\n    highlightLine.setAttributes({\n      visible: false,\n      pickable: false\n    });\n  }\n  if (highlightSymbol) {\n    highlightSymbol.setAttributes({\n      visible: false,\n      pickable: false\n    });\n  }\n\n  table.scenegraph.updateNextFrame();\n}\n\nexport function updateChartHover(col: number, row: number, x: number, y: number, table: BaseTableAPI): boolean {\n  const cellGroup = table.scenegraph.getCell(col, row);\n  const sparkline = cellGroup.getChildByName('sparkline');\n  const line = sparkline?.getChildByName('sparkline-line');\n  const symbol = sparkline?.getChildByName('sparkline-symbol-group');\n  if (!line) {\n    return false;\n  }\n  const bandwidth = (line as any).bandwidth;\n  const min = (line as any).min;\n  const max = (line as any).max;\n  const points = line.attribute.points;\n  x = x - sparkline.globalAABBBounds.x1;\n  y = y - sparkline.globalAABBBounds.y1;\n\n  let chartPoint;\n  for (let i = 0; i < points.length; i++) {\n    const { x: pointX, y: pointY, defined, rawData } = points[i];\n\n    if (Math.abs(x - pointX) < bandwidth / 2) {\n      chartPoint = {\n        point: points[i],\n        points,\n        pointsBandWidth: bandwidth,\n        pointData: rawData\n      };\n      if (defined) {\n        // 添加highlight line\n        const highlightLine = sparkline.getChildByName('highlight-line');\n        if (highlightLine) {\n          highlightLine.setAttributes({\n            // x: pointX,\n            points: [\n              { x: pointX, y: max },\n              { x: pointX, y: min }\n            ],\n            visible: true,\n            pickable: true\n          });\n        } else {\n          const highlightLine = createLine({\n            // x: 0,\n            // y: 0,\n            points: [\n              { x: pointX, y: max },\n              { x: pointX, y: min }\n            ],\n            lineWidth: line.hover?.strokeWidth,\n            stroke: line.hover?.stroke\n          });\n          highlightLine.name = 'highlight-line';\n          sparkline.addChild(highlightLine);\n        }\n\n        // 添加highlight symbol\n        const highlightSymbol = sparkline.getChildByName('highlight-symbol');\n        if (highlightSymbol) {\n          highlightSymbol.setAttributes({\n            x: pointX,\n            y: pointY,\n            visible: true,\n            pickable: true\n          });\n        } else {\n          const highlightSymbol = createSymbol({\n            x: pointX,\n            y: pointY,\n            stroke: symbol.hover.stroke,\n            lineWidth: symbol.hover.strokeWidth,\n            fill: symbol.hover.fill,\n            size: symbol.hover.size * 2, // 之前配置的是圆半径\n            symbolType: 'circle'\n          });\n          highlightSymbol.name = 'highlight-symbol';\n          sparkline.addChild(highlightSymbol);\n        }\n        break;\n      }\n    }\n  }\n  table.scenegraph.updateNextFrame();\n\n  if (chartPoint) {\n    const eventInfo: Omit<MousePointerSparklineEvent, 'target'> = {\n      col,\n      row,\n      field: table.getHeaderField(col, row),\n      value: table.getCellValue(col, row),\n      dataValue: table.getCellOriginValue(col, row),\n      cellHeaderPaths: table.internalProps.layoutMap.getCellHeaderPaths(col, row),\n      title: table.getBodyColumnDefine(col, row).title,\n      cellRange: table.getCellRelativeRect(col, row),\n      sparkline: {\n        pointData: chartPoint.pointData\n      },\n      scaleRatio: table.canvas.getBoundingClientRect().width / table.canvas.offsetWidth\n    };\n    table.fireListeners(TABLE_EVENT_TYPE.MOUSEOVER_CHART_SYMBOL, eventInfo as MousePointerSparklineEvent);\n  }\n  return true;\n}\n"]}