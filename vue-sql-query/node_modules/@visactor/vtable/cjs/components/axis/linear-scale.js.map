{"version":3,"sources":["../src/components/axis/linear-scale.ts"],"names":[],"mappings":"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","file":"linear-scale.js","sourcesContent":["import { LinearScale, LogScale, SymlogScale } from '@visactor/vscale';\nimport { isNil, isValid, maxInArray, minInArray } from '@visactor/vutils';\n\nconst e10 = Math.sqrt(50);\nconst e5 = Math.sqrt(10);\nconst e2 = Math.sqrt(2);\n\ntype IRange = { max?: number; min?: number };\nexport class LinearAxisScale {\n  protected _extend: { [key: string]: number } = {};\n  _scale: LinearScale | LogScale | SymlogScale;\n  _scales: (LinearScale | LogScale | SymlogScale)[];\n  nice: boolean;\n  zero: boolean;\n  domain: Required<IRange>;\n  expand?: IRange;\n  forceTickCount?: number;\n  tickCount?: number;\n  niceType?: 'tickCountFirst' | 'accurateFirst';\n  type?: 'linear' | 'time' | 'log' | 'symlog';\n\n  constructor(type?: 'linear' | 'time' | 'log' | 'symlog') {\n    this.type = type ?? 'linear';\n    if (type === 'log') {\n      this._scale = new LogScale();\n    } else if (type === 'symlog') {\n      this._scale = new SymlogScale();\n    } else {\n      this._scale = new LinearScale();\n    }\n    this._scales = [this._scale];\n  }\n\n  setExtraAttrFromSpec(\n    nice: boolean,\n    zero: boolean,\n    range: Required<IRange>,\n    expand?: IRange,\n    base?: number,\n    constant?: number\n  ) {\n    // this.nice = nice;\n    this.nice = false; // nice deal in getAxisDomainRangeAndLabels()\n    this.zero = zero;\n    // this.domain = range;\n    if (this.zero) {\n      range.min = Math.min(range.min, 0);\n      range.max = Math.max(range.max, 0);\n    }\n    this.domain = range;\n    this.expand = expand;\n\n    if (this.type === 'log') {\n      (this._scale as LogScale).base(base ?? 10);\n    } else if (this.type === 'symlog') {\n      (this._scale as SymlogScale).constant(constant ?? 10);\n    }\n  }\n\n  transformScaleDomain() {\n    if (this.type === 'symlog' || this.type === 'log') {\n      // do nothing\n    } else {\n      this.setScaleNice();\n    }\n  }\n\n  setScaleNice() {\n    if (this.type === 'log') {\n      this.setLogScaleNice();\n    } else {\n      this.setLinearScaleNice();\n    }\n  }\n\n  setLogScaleNice() {\n    if (isNil(this.domain?.min) && isNil(this.domain?.max)) {\n      this.nice && this._scale.nice();\n    } else if (isValid(this.domain?.min) && isNil(this.domain?.max)) {\n      this.nice && this._scale.niceMax();\n    } else if (isNil(this.domain?.min) && isValid(this.domain?.max)) {\n      this.nice && this._scale.niceMin();\n    }\n  }\n\n  setLinearScaleNice() {\n    let tickCount = this.forceTickCount ?? this.tickCount ?? 10;\n    // 如果配置了精度优先，那么最低是10\n    // 否则就直接使用tickCount即可\n    if (this.niceType === 'accurateFirst') {\n      tickCount = Math.max(10, tickCount);\n    }\n\n    if (isNil(this.domain?.min) && isNil(this.domain?.max)) {\n      this.nice && this._scale.nice(tickCount);\n    } else if (isValid(this.domain?.min) && isNil(this.domain?.max)) {\n      this.nice && this._scale.niceMax(tickCount);\n    } else if (isNil(this.domain?.min) && isValid(this.domain?.max)) {\n      this.nice && this._scale.niceMin(tickCount);\n    } else {\n      this.nice && this._scale.nice(tickCount);\n    }\n  }\n  dataToPosition(values: any[]): number {\n    return this.valueToPosition(values[0]);\n  }\n\n  valueToPosition(value: any): number {\n    return this._scale.scale(value);\n  }\n\n  computeLinearDomain(data: { min: number; max: number }[]): number[] {\n    const domain: number[] = [];\n    data.forEach(d => {\n      const { min, max } = d;\n      domain[0] = domain[0] === undefined ? min : Math.min(domain[0] as number, min as number);\n      domain[1] = domain[1] === undefined ? max : Math.max(domain[1] as number, max as number);\n    });\n    this.expandDomain(domain);\n    this.includeZero(domain);\n    this.setDomainMinMax(domain);\n    return domain;\n  }\n\n  protected expandDomain(domain: number[]): void {\n    if (!this.expand) {\n      return;\n    }\n    const domainMin = domain[0];\n    const domainMax = domain[domain.length - 1];\n    if (isValid(this.expand.min)) {\n      domain[0] = domainMin - (domainMax - domainMin) * this.expand.min;\n    }\n    if (isValid(this.expand.max)) {\n      domain[domain.length - 1] = domainMax + (domainMax - domainMin) * this.expand.max;\n    }\n  }\n\n  protected niceDomain(domain: number[]) {\n    if (isValid(domain[0]) || isValid(domain[1]) || this.type !== 'linear') {\n      // 如果用户设置了 min 或者 max 则按照用户设置的为准\n      // 如果是非 linear 类型也不处理\n      return domain;\n    }\n    if (Math.abs(minInArray(domain) - maxInArray(domain)) <= 1e-12) {\n      let num: number = domain[0];\n      const flag = num >= 0 ? 1 : -1;\n      num = Math.abs(num);\n      if (num < 1) {\n        domain[0] = 0;\n        domain[1] = 1; // 在[0, 1) 区间变成[0, 1]\n      } else {\n        let step = num / 5; // 默认5个ticks\n        const power = Math.floor(Math.log(step) / Math.LN10);\n        const err = step / Math.pow(10, power);\n        step = (err >= e10 ? 10 : err >= e5 ? 5 : err >= e2 ? 2 : 1) * Math.pow(10, power);\n\n        domain[0] = 0;\n        domain[1] = step * 10;\n      }\n      if (flag < 0) {\n        domain.reverse();\n        domain[0] *= -1;\n        domain[1] *= -1;\n      }\n    }\n    return domain;\n  }\n\n  protected niceMinMax() {\n    if (this.nice) {\n      let tickCount = this.forceTickCount ?? this.tickCount ?? 10;\n      // 如果配置了精度优先，那么最低是10\n      // 否则就直接使用tickCount即可\n      if (this.niceType === 'accurateFirst') {\n        tickCount = Math.max(10, tickCount);\n      }\n      if (isNil(this.domain?.min) && isNil(this.domain?.max)) {\n        this._scale.nice(tickCount);\n      } else if (isValid(this.domain?.min) && isNil(this.domain?.max)) {\n        this._scale.niceMax(tickCount);\n      } else if (isNil(this.domain?.min) && isValid(this.domain?.max)) {\n        this._scale.niceMin(tickCount);\n      } else {\n        this._scale.nice(tickCount);\n      }\n    }\n  }\n\n  protected includeZero(domain: number[]): void {\n    if (this.zero) {\n      domain[0] = Math.min(domain[0], 0);\n      domain[domain.length - 1] = Math.max(domain[domain.length - 1], 0);\n    }\n  }\n\n  // 用户其他模块扩充轴scale的区间\n  setExtendDomain(key: string, value: number | undefined) {\n    if (value === undefined) {\n      delete this._extend[key];\n      return;\n    }\n    this._extend[key] = value;\n    const domain = this._scale.domain();\n    this.extendDomain(domain);\n    this.includeZero(domain);\n    this.setDomainMinMax(domain);\n    this.niceDomain(domain);\n    this._scale.domain(domain, this.nice);\n    this.niceMinMax();\n\n    // this.event.emit(ChartEvent.scaleUpdate, { model: this as any });\n  }\n\n  protected extendDomain(domain: number[]) {\n    let temp;\n    const domainLast = domain.length - 1;\n    const reverse = domain[0] - domain[domainLast] > 0;\n    const min = reverse ? domainLast : 0;\n    const max = reverse ? 0 : domainLast;\n    for (const key in this._extend) {\n      temp = this._extend[key];\n      temp > domain[max] && (domain[max] = temp);\n      temp < domain[min] && (domain[min] = temp);\n    }\n  }\n\n  protected setDomainMinMax(domain: number[]): void {\n    if (!this.domain) {\n      return;\n    }\n    const { min, max } = this.domain;\n    isValid(min) && (domain[0] = min);\n    isValid(max) && (domain[1] = max);\n  }\n\n  setZero(zero: boolean) {\n    if (this.zero !== zero) {\n      this.zero = zero;\n      this.updateScaleDomain();\n    }\n  }\n  /**\n   * @override\n   * TODO event.emit是否可以考虑用decorator\n   */\n  updateScaleDomain() {\n    const domain: number[] = this.computeDomain([this.domain]) as number[];\n    this.updateScaleDomainByModel(domain);\n  }\n\n  computeDomain(data: { min: number; max: number }[]): number[] {\n    return this.computeLinearDomain(data);\n  }\n\n  /**\n   * TODO event.emit是否可以考虑用decorator\n   * 数据逻辑外，模块的设置更新对scale-domain的修改操作\n   */\n  protected updateScaleDomainByModel(domain?: number[]) {\n    domain = domain ?? this._scale.domain();\n    // 其他模块的设置 domain\n    this.extendDomain(domain);\n    this.includeZero(domain);\n    // 用户 spec 的 min-max\n    this.setDomainMinMax(domain);\n    // nice 优先级最高\n    this.niceDomain(domain);\n    this._scale.domain(domain, this.nice);\n    // 设置scale的nice-min-max\n    this.niceMinMax();\n\n    // this.event.emit(ChartEvent.scaleUpdate, { model: this as any });\n  }\n\n  updateRange(newRange: [number, number]) {\n    const [start, end] = this._scale.range();\n    if (newRange[0] !== start || newRange[1] !== end) {\n      this._scale.range(newRange);\n    }\n  }\n}\n"]}