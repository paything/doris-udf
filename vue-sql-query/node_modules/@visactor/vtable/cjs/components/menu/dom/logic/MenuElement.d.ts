import type { DropDownMenuHighlightInfo, MenuInstanceInfo, Placement, RectProps } from '../../../../ts-types';
import type { BaseTableAPI } from '../../../../ts-types/base-table';
export declare function isMenuHighlight(_table: BaseTableAPI, cells: DropDownMenuHighlightInfo[], menuKeyCurrent: string, colCurrent: number, rowCurrent: number, index: number): boolean;
export declare class MenuElement {
    private _handler;
    private _rootElement?;
    private _secondElement?;
    private _menuInstanceInfo?;
    private _showChildrenIndex;
    private _mouseEnterSecondElement;
    constructor(table: BaseTableAPI);
    get rootElement(): HTMLElement;
    release(): void;
    bindToCell(table: BaseTableAPI, col: number, row: number, menuInstanceInfo: MenuInstanceInfo): boolean;
    unbindFromCell(): void;
    _canBindToCell(table: BaseTableAPI, col: number, row: number): boolean;
    _bindToCell(table: BaseTableAPI, col: number, row: number, position?: {
        x: number;
        y: number;
    }, referencePosition?: {
        rect: RectProps;
        placement?: Placement;
    }): boolean;
    _bindSecondElement(table: BaseTableAPI, col: number, row: number, x: number, y: number): boolean;
    pointInMenuElement(x: number, y: number): boolean;
}
