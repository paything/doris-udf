{"version":3,"sources":["../src/components/util/transform.ts"],"names":[],"mappings":";;;AAAA,6CAAkE;AAElE,SAAgB,8BAA8B,CAAC,KAAU;;IACvD,MAAM,gBAAgB,qBACjB,KAAK,CACT,CAAC;IACF,IAAI,CAAC,IAAA,gBAAO,EAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QACzB,gBAAgB,CAAC,SAAS,GAAG,kBAAkB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC9D;IACD,IAAI,CAAC,IAAA,gBAAO,EAAC,KAAK,CAAC,SAAS,CAAC,EAAE;QAC7B,IAAA,cAAK,EAAC,gBAAgB,CAAC,SAAS,EAAE,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;KACxE;IAED,IAAI,MAAA,KAAK,CAAC,KAAK,0CAAE,KAAK,EAAE;QACtB,kBAAkB,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAClD;IAED,IAAI,MAAA,KAAK,CAAC,UAAU,0CAAE,KAAK,EAAE;QAC3B,kBAAkB,CAAC,gBAAgB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KACvD;IACD,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAnBD,wEAmBC;AAED,SAAgB,kBAAkB,CAAC,KAAU;IAC3C,IAAI,IAAA,gBAAO,EAAC,KAAK,CAAC,EAAE;QAClB,OAAO,KAAK,CAAC;KACd;IACD,IAAI,KAAK,CAAC,KAAK,EAAE;QACf,KAAK,CAAC,KAAK,GAAG,IAAA,uBAAc,EAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC3C;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AATD,gDASC;AAED,SAAgB,uBAAuB,CAAC,MAAW,EAAE;IACnD,IAAI,CAAC,IAAA,gBAAO,EAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QACvB,GAAG,CAAC,KAAK,GAAG,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAC3C;IAED,IAAI,CAAC,IAAA,gBAAO,EAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QACvB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACnC,IAAI,CAAC,IAAA,gBAAO,EAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC5B,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;aACrD;QACH,CAAC,CAAC,CAAC;KACJ;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AAdD,0DAcC;AAED,SAAgB,mBAAmB,CAAC,UAAe;IACjD,IAAI,IAAA,gBAAO,EAAC,UAAU,CAAC,EAAE;QACvB,OAAO,IAAI,CAAC;KACb;IACD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACpC,IAAI,CAAC,IAAA,gBAAO,EAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;YAC7B,UAAU,CAAC,GAAG,CAAC,GAAG,kBAAkB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SACvD;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,UAAU,CAAC;AACpB,CAAC;AAXD,kDAWC;AAED,SAAgB,sBAAsB,CAAC,OAAY;IACjD,uBAAuB,CAAC,OAAO,CAAC,CAAC;IACjC,uBAAuB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC7C,uBAAuB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAE3C,OAAO,OAAO,CAAC;AACjB,CAAC;AAND,wDAMC","file":"transform.js","sourcesContent":["import { degreeToRadian, isEmpty, merge } from '@visactor/vutils';\n\nexport function transformLegendTitleAttributes(title: any) {\n  const transformedTitle = {\n    ...title\n  };\n  if (!isEmpty(title.style)) {\n    transformedTitle.textStyle = transformToGraphic(title.style);\n  }\n  if (!isEmpty(title.textStyle)) {\n    merge(transformedTitle.textStyle, transformToGraphic(title.textStyle));\n  }\n\n  if (title.shape?.style) {\n    transformToGraphic(transformedTitle.shape.style);\n  }\n\n  if (title.background?.style) {\n    transformToGraphic(transformedTitle.background.style);\n  }\n  return transformedTitle;\n}\n\nexport function transformToGraphic(style: any) {\n  if (isEmpty(style)) {\n    return style;\n  }\n  if (style.angle) {\n    style.angle = degreeToRadian(style.angle);\n  }\n\n  return style;\n}\n\nexport function transformComponentStyle(cfg: any = {}) {\n  if (!isEmpty(cfg.style)) {\n    cfg.style = transformToGraphic(cfg.style);\n  }\n\n  if (!isEmpty(cfg.state)) {\n    Object.keys(cfg.state).forEach(key => {\n      if (!isEmpty(cfg.state[key])) {\n        cfg.state[key] = transformToGraphic(cfg.state[key]);\n      }\n    });\n  }\n\n  return cfg;\n}\n\nexport function transformStateStyle(stateStyle: any) {\n  if (isEmpty(stateStyle)) {\n    return null;\n  }\n  Object.keys(stateStyle).forEach(key => {\n    if (!isEmpty(stateStyle[key])) {\n      stateStyle[key] = transformToGraphic(stateStyle[key]);\n    }\n  });\n\n  return stateStyle;\n}\n\nexport function transformAxisLineStyle(lineCfg: any) {\n  transformComponentStyle(lineCfg);\n  transformComponentStyle(lineCfg.startSymbol);\n  transformComponentStyle(lineCfg.endSymbol);\n\n  return lineCfg;\n}\n"]}