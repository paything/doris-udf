{"version":3,"sources":["../src/core/animation.ts"],"names":[],"mappings":"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","file":"animation.js","sourcesContent":["import type { EasingType, IRect } from './../vrender';\nimport { DefaultTimeline, DefaultTicker, Animate, ACustomAnimate, createRect, Generator } from './../vrender';\nimport type { BaseTableAPI } from '../ts-types/base-table';\nimport { isBoolean, isNumber } from '@visactor/vutils';\nimport type { ITableAnimationOption } from '../ts-types/animation/appear';\n\nfunction isInteger(value: number) {\n  return Math.floor(value) === value;\n}\nclass Animateaaa extends ACustomAnimate<any> {\n  onUpdate(end: boolean, ratio: number, out: Record<string, any>): void {\n    if (this.from.x !== this.to.x) {\n      const x = end ? this.to.x : this.from.x + Math.floor((this.to.x - this.from.x) * ratio);\n      this.params.table.scrollLeft = x;\n    }\n    if (this.from.y !== this.to.y) {\n      const y = end ? this.to.y : this.from.y + Math.floor((this.to.y - this.from.y) * ratio);\n      this.params.table.scrollTop = y;\n    }\n  }\n}\n\nexport class TableAnimationManager {\n  table: BaseTableAPI;\n  timeline: DefaultTimeline;\n  ticker: DefaultTicker;\n  animation: Animate;\n  tempGraphic: IRect;\n  constructor(table: BaseTableAPI) {\n    this.table = table;\n    this.timeline = new DefaultTimeline();\n    // this.ticker = new DefaultTicker([this.timeline]);\n    this.ticker = new DefaultTicker();\n    this.ticker.addTimeline(this.timeline);\n    const TICKER_FPS = 60;\n    this.ticker.setFPS(TICKER_FPS);\n    // no use, for avoid error in vrender animation\n    this.tempGraphic = createRect({});\n  }\n\n  scrollTo(position: { col?: number; row?: number }, animationOption?: ITableAnimationOption | true) {\n    const from = {\n      x: this.table.scrollLeft,\n      y: this.table.scrollTop\n    };\n\n    const { col, row } = position;\n    let colInt = col;\n    let rowInt = row;\n    let colDecimal;\n    let rowDecimal;\n    if (isNumber(col) && !isInteger(col)) {\n      colInt = Math.floor(col);\n      colDecimal = col - colInt;\n    }\n    if (isNumber(row) && !isInteger(row)) {\n      rowInt = Math.floor(row);\n      rowDecimal = row - rowInt;\n    }\n    const cellRect = this.table.getCellRect(colInt ?? 0, rowInt ?? 0);\n    let { left, top } = cellRect;\n\n    // deal with decimal\n    if (colDecimal) {\n      left += colDecimal * cellRect.width;\n    }\n    if (rowDecimal) {\n      top += rowDecimal * cellRect.height;\n    }\n\n    const to = {\n      x: isNumber(col) ? left - this.table.getFrozenColsWidth() : this.table.scrollLeft,\n      y: isNumber(row) ? top - this.table.getFrozenRowsHeight() : this.table.scrollTop\n    };\n    const duration = !isBoolean(animationOption) ? animationOption?.duration ?? 3000 : animationOption ? 3000 : 0;\n    const easing = !isBoolean(animationOption) ? animationOption?.easing ?? 'linear' : animationOption ? 'linear' : '';\n\n    const animation = new Animate(Generator.GenAutoIncrementId(), this.timeline).bind(this.tempGraphic).play(\n      new Animateaaa(from, to, duration, easing, {\n        graphic: this.tempGraphic,\n        table: this.table\n      })\n    );\n    // this.timeline.addAnimate(animation);\n    this.ticker.start();\n  }\n\n  clear() {\n    this.timeline.clear();\n    this.ticker.stop();\n  }\n}\n"]}