{"version":3,"sources":["../src/event/listener/table-group.ts"],"names":[],"mappings":"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","file":"table-group.js","sourcesContent":["import type { IEventTarget, FederatedPointerEvent, FederatedWheelEvent, Switch } from './../../vrender';\nimport { Gesture } from './../../vrender';\nimport type {\n  ListTableAPI,\n  MousePointerCellEvent,\n  MousePointerMultiCellEvent,\n  MousePointerSparklineEvent,\n  RadioColumnDefine\n} from '../../ts-types';\nimport { IconFuncTypeEnum, InteractionState } from '../../ts-types';\nimport type { SceneEvent } from '../util';\nimport { getCellEventArgsSet, regIndexReg } from '../util';\nimport { TABLE_EVENT_TYPE } from '../../core/TABLE_EVENT_TYPE';\nimport type { Group } from '../../scenegraph/graphic/group';\nimport { isValid } from '@visactor/vutils';\nimport { getIconAndPositionFromTarget } from '../../scenegraph/utils/icon';\nimport { cellInRanges, getPromiseValue } from '../../tools/helper';\nimport { Rect } from '../../tools/Rect';\nimport type { EventManager } from '../event';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport type { IIconGraphicAttribute } from '../../scenegraph/graphic/icon';\nimport { getCellMergeInfo } from '../../scenegraph/utils/get-cell-merge';\nimport type { CheckBox, CheckboxAttributes, Radio } from './../../vrender';\nimport { handleWhell } from '../scroll';\nimport { fireMoveColEventListeners } from '../helper';\nexport function bindTableGroupListener(eventManager: EventManager) {\n  const table = eventManager.table;\n  const stateManager = table.stateManager;\n\n  table.scenegraph.tableGroup.addEventListener('pointermove', (e: FederatedPointerEvent) => {\n    const lastX = table.eventManager.LastPointerXY?.x ?? e.x;\n    const lastY = table.eventManager.LastPointerXY?.y ?? e.y;\n    table.eventManager.LastPointerXY = { x: e.x, y: e.y };\n    // const eventArgsSet: SceneEvent = (table as any).getCellEventArgsSet(e);\n    if (eventManager.touchSetTimeout) {\n      // 移动端事件特殊处理\n      clearTimeout(eventManager.touchSetTimeout);\n      eventManager.touchSetTimeout = undefined;\n    }\n    const eventArgsSet = getCellEventArgsSet(e);\n    // if (stateManager.interactionState === InteractionState.scrolling) {\n    //   return;\n    // }\n\n    // 触发MOUSEMOVE_TABLE\n    if (eventArgsSet.eventArgs && (table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEMOVE_TABLE)) {\n      table.fireListeners(TABLE_EVENT_TYPE.MOUSEMOVE_TABLE, {\n        col: eventArgsSet.eventArgs.col,\n        row: eventArgsSet.eventArgs.row,\n        x: eventArgsSet.abstractPos.x,\n        y: eventArgsSet.abstractPos.y,\n        event: e.nativeEvent,\n        target: eventArgsSet?.eventArgs?.target,\n        mergeCellInfo: eventArgsSet.eventArgs?.mergeInfo\n      });\n    }\n\n    if (\n      stateManager.interactionState === InteractionState.grabing &&\n      !(table as ListTableAPI).editorManager?.editingEditor\n    ) {\n      if (Math.abs(lastX - e.x) + Math.abs(lastY - e.y) >= 1) {\n        if (stateManager.isResizeCol() || stateManager.isResizeRow()) {\n          /* do nothing */\n        } else if (stateManager.isMoveCol()) {\n          eventManager.dealColumnMover(eventArgsSet);\n        } else if (stateManager.isFillHandle()) {\n          eventManager.dealFillSelect(eventArgsSet, true);\n        } else {\n          table.options.select?.disableDragSelect || eventManager.dealTableSelect(eventArgsSet, true);\n        }\n      }\n      return;\n    } else if (\n      !table.options.select?.disableDragSelect &&\n      table.eventManager.isDraging &&\n      stateManager.isSelecting() &&\n      !(table as ListTableAPI).editorManager?.editingEditor\n    ) {\n      eventManager.dealTableSelect(eventArgsSet, true);\n    }\n    // 更新列宽调整pointer\n    // if (stateManager.isResizeCol() || eventManager.checkColumnResize(eventArgsSet)) {\n    //   // 更新填充柄pointer\n    //   if (table.stateManager.select && eventManager.checkCellFillhandle(eventArgsSet)) {\n    //     stateManager.updateCursor('crosshair');\n    //   } else {\n    //     stateManager.updateCursor('col-resize');\n    //   }\n    // } else {\n    //   stateManager.updateCursor();\n    // }\n\n    const cellGoup: any = e.path.find(node => (node as any).role === 'cell');\n    if ((table as any).hasListeners(TABLE_EVENT_TYPE.MOUSELEAVE_CELL)) {\n      // const cellGoup = eventArgsSet?.eventArgs?.target as unknown as Group;\n      if (\n        // cellGoup?.role === 'cell' && // 这里去掉这个判断 处理当鼠标移动到滚动条上 也需要触发leave事件\n        table.stateManager.hover.cellPos.col !== -1 &&\n        table.stateManager.hover.cellPos.row !== -1 &&\n        (cellGoup?.col !== table.stateManager.hover.cellPos.col ||\n          cellGoup?.row !== table.stateManager.hover.cellPos.row)\n      ) {\n        table.fireListeners(TABLE_EVENT_TYPE.MOUSELEAVE_CELL, {\n          col: table.stateManager.hover.cellPos.col,\n          row: table.stateManager.hover.cellPos.row,\n          cellRange: table.getCellRangeRelativeRect({\n            col: table.stateManager.hover.cellPos.col,\n            row: table.stateManager.hover.cellPos.row\n          }),\n          scaleRatio: table.canvas.getBoundingClientRect().width / table.canvas.offsetWidth,\n          event: e.nativeEvent,\n          target: eventArgsSet?.eventArgs?.target\n        });\n      }\n    }\n    if ((table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEENTER_CELL)) {\n      // const cellGoup = eventArgsSet?.eventArgs?.target as unknown as Group;\n      if (\n        cellGoup?.role === 'cell' &&\n        isValid(cellGoup.col) &&\n        isValid(cellGoup.row) &&\n        (cellGoup.col !== table.stateManager.hover.cellPos.col ||\n          cellGoup.row !== table.stateManager.hover.cellPos.row) &&\n        (cellGoup.col !== table.stateManager.hover.cellPosContainHeader?.col ||\n          cellGoup.row !== table.stateManager.hover.cellPosContainHeader?.row)\n      ) {\n        table.fireListeners(TABLE_EVENT_TYPE.MOUSEENTER_CELL, {\n          col: cellGoup.col,\n          row: cellGoup.row,\n          cellRange: table.getCellRangeRelativeRect({\n            col: cellGoup.col,\n            row: cellGoup.row\n          }),\n          scaleRatio: table.canvas.getBoundingClientRect().width / table.canvas.offsetWidth,\n          event: e.nativeEvent,\n          target: eventArgsSet?.eventArgs?.target,\n          mergeCellInfo: eventArgsSet.eventArgs?.mergeInfo\n        });\n      }\n    }\n\n    eventManager.dealIconHover(eventArgsSet);\n    eventManager.dealTableHover(eventArgsSet);\n\n    if (table.theme.columnResize.visibleOnHover) {\n      // 是否在hover时显示\n      eventManager.checkColumnResize(eventArgsSet, true);\n    }\n    // 触发MOUSEMOVE_CELL\n    if (eventArgsSet.eventArgs && (table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEMOVE_CELL)) {\n      let icon;\n      let position;\n      if (eventArgsSet.eventArgs?.target) {\n        const iconInfo = getIconAndPositionFromTarget(eventArgsSet.eventArgs?.target);\n        if (iconInfo) {\n          icon = iconInfo.icon;\n          position = iconInfo.position;\n        }\n      }\n      table.fireListeners(TABLE_EVENT_TYPE.MOUSEMOVE_CELL, {\n        col: eventArgsSet.eventArgs.col,\n        row: eventArgsSet.eventArgs.row,\n        x: eventArgsSet.abstractPos.x,\n        y: eventArgsSet.abstractPos.y,\n        event: e.nativeEvent,\n        targetIcon: icon\n          ? {\n              name: icon.name,\n              position: position,\n              funcType: (icon as any).attribute.funcType\n            }\n          : undefined,\n        target: eventArgsSet?.eventArgs?.target,\n        mergeCellInfo: eventArgsSet.eventArgs?.mergeInfo\n      });\n    }\n  });\n\n  table.scenegraph.tableGroup.addEventListener('pointerout', (e: FederatedPointerEvent) => {\n    const eventArgsSet = getCellEventArgsSet(e);\n    const cellGoup = eventArgsSet?.eventArgs?.target as unknown as Group;\n    if (cellGoup?.role === 'table') {\n      eventManager.dealTableHover();\n    }\n  });\n\n  table.scenegraph.tableGroup.addEventListener('pointerover', (e: FederatedPointerEvent) => {\n    const eventArgsSet = getCellEventArgsSet(e);\n    const cellGoup = eventArgsSet?.eventArgs?.target as unknown as Group;\n    // console.log('pointerover', cellGoup);\n\n    if (\n      cellGoup &&\n      (table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEOVER_CHART_SYMBOL) &&\n      cellGoup.type === 'symbol'\n    ) {\n      const cellGroup = e.composedPath().find(p => (p as any).roll === 'cell');\n      if (cellGroup) {\n        const { col, row } = cellGroup as unknown as Group;\n        const eventInfo: MousePointerSparklineEvent = {\n          col,\n          row,\n          field: table.getHeaderField(col, row),\n          value: table.getCellValue(col, row),\n          dataValue: table.getCellOriginValue(col, row),\n          cellHeaderPaths: table.internalProps.layoutMap.getCellHeaderPaths(col, row),\n          title: table.getBodyColumnDefine(col, row).title,\n          cellRange: table.getCellRelativeRect(col, row),\n          event: e.nativeEvent,\n          sparkline: {\n            pointData: undefined // chartPoint.pointData,\n          },\n          scaleRatio: table.canvas.getBoundingClientRect().width / table.canvas.offsetWidth,\n          target: eventArgsSet?.eventArgs?.target\n        };\n        table.fireListeners(TABLE_EVENT_TYPE.MOUSEOVER_CHART_SYMBOL, eventInfo);\n      }\n    }\n    //MOUSEENTER_CELL 不能在这里触发 引发在单元格内移动会触发多次的问题【迷你图的单元格中】\n    // if ((table as any).hasListeners(DG_EVENT_TYPE.MOUSEENTER_CELL)) {\n    //   const eventArgsSet = getCellEventArgsSet(e);\n    //   const cellGoup = eventArgsSet?.eventArgs?.target as unknown as Group;\n    //   console.log('hover cell', table.stateManager.hover.cellPos);\n    //   if (\n    //     cellGoup?.role === 'cell' &&\n    //     (cellGoup.col !== table.stateManager.hover.cellPos.col ||\n    //       cellGoup.row !== table.stateManager.hover.cellPos.row)\n    //   ) {\n    //     table.fireListeners(DG_EVENT_TYPE.MOUSEENTER_CELL, {\n    //       col: cellGoup.col,\n    //       row: cellGoup.row,\n    //       cellRange: table.getCellRangeRelativeRect({\n    //         col: cellGoup.col,\n    //         row: cellGoup.row,\n    //       }),\n    //       scaleRatio:\n    //         table.canvas.getBoundingClientRect().width / table.canvas.offsetWidth,\n    //       event: e.nativeEvent,\n    //     });\n    //   }\n    // }\n  });\n  // table.scenegraph.tableGroup.addEventListener('pointerenter', (e: FederatedPointerEvent) => {\n  //   console.log('pointerenter', e.target);\n  // 触发MOUSEOVER_CELL\n  // const eventArgsSet = getCellEventArgsSet(e);\n  // if ((eventArgsSet?.eventArgs?.target as unknown as Group)?.role === 'cell') {\n  //   table.fireListeners(DG_EVENT_TYPE.MOUSEENTER_CELL, {\n  //     col: (eventArgsSet.eventArgs.target as unknown as Group).col,\n  //     row: (eventArgsSet.eventArgs.target as unknown as Group).row,\n  //     cellRange: table.getCellRangeRelativeRect({\n  //       col: (eventArgsSet.eventArgs.target as unknown as Group).col,\n  //       row: (eventArgsSet.eventArgs.target as unknown as Group).row,\n  //     }),\n  //     scaleRatio: table.canvas.getBoundingClientRect().width / table.canvas.offsetWidth,\n  //     event: e.nativeEvent,\n  //   });\n  // }\n  // });\n  table.scenegraph.tableGroup.addEventListener('pointerenter', (e: FederatedPointerEvent) => {\n    if (\n      (table.theme.scrollStyle.horizontalVisible && table.theme.scrollStyle.horizontalVisible === 'focus') ||\n      (!table.theme.scrollStyle.horizontalVisible && table.theme.scrollStyle.visible === 'focus')\n    ) {\n      stateManager.showHorizontalScrollBar();\n    }\n    if (\n      (table.theme.scrollStyle.verticalVisible && table.theme.scrollStyle.verticalVisible === 'focus') ||\n      (!table.theme.scrollStyle.verticalVisible && table.theme.scrollStyle.visible === 'focus')\n    ) {\n      stateManager.showVerticalScrollBar();\n    }\n    if ((table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEENTER_TABLE)) {\n      table.fireListeners(TABLE_EVENT_TYPE.MOUSEENTER_TABLE, {\n        event: e.nativeEvent\n      });\n    }\n  });\n  table.scenegraph.tableGroup.addEventListener('pointerleave', (e: FederatedPointerEvent) => {\n    //resize 列宽 当鼠标离开table也需要继续响应\n    if (\n      !stateManager.isResizeCol() &&\n      !stateManager.isResizeRow() &&\n      !stateManager.isMoveCol() &&\n      !stateManager.isSelecting()\n    ) {\n      stateManager.updateInteractionState(InteractionState.default);\n      stateManager.updateCursor();\n    }\n\n    if (\n      (table.theme.scrollStyle.horizontalVisible && table.theme.scrollStyle.horizontalVisible === 'focus') ||\n      (!table.theme.scrollStyle.horizontalVisible && table.theme.scrollStyle.visible === 'focus')\n    ) {\n      stateManager.hideHorizontalScrollBar();\n    }\n    if (\n      (table.theme.scrollStyle.verticalVisible && table.theme.scrollStyle.verticalVisible === 'focus') ||\n      (!table.theme.scrollStyle.verticalVisible && table.theme.scrollStyle.visible === 'focus')\n    ) {\n      stateManager.hideVerticalScrollBar();\n    }\n\n    // 移动到table外部 如移动到表格空白区域 移动到表格浏览器外部\n    if ((table as any).hasListeners(TABLE_EVENT_TYPE.MOUSELEAVE_CELL)) {\n      if (table.stateManager.hover.cellPos.col !== -1 && table.stateManager.hover.cellPos.row !== -1) {\n        table.fireListeners(TABLE_EVENT_TYPE.MOUSELEAVE_CELL, {\n          col: table.stateManager.hover.cellPos.col,\n          row: table.stateManager.hover.cellPos.row,\n          cellRange: table.getCellRangeRelativeRect({\n            col: table.stateManager.hover.cellPos.col,\n            row: table.stateManager.hover.cellPos.row\n          }),\n          scaleRatio: table.canvas.getBoundingClientRect().width / table.canvas.offsetWidth,\n          event: e.nativeEvent,\n          target: undefined\n        });\n      }\n    }\n    eventManager.dealTableHover();\n    const target = e.target;\n    if (target && !target.isDescendantsOf(table.scenegraph.tableGroup)) {\n      table.fireListeners(TABLE_EVENT_TYPE.MOUSELEAVE_TABLE, {\n        event: e.nativeEvent\n      });\n    }\n  });\n  // /**\n  //  * 两种场景会触发这里的pointerupoutside TODO 第二种并不应该触发，待vrender修改后再整理这里的逻辑\n  //  * 1. 鼠标down和up的场景树节点不一样\n  //  * 2. 点击到非stage的（非canvas）  其他dom节点\n  //  */\n  // table.scenegraph.tableGroup.addEventListener('pointerupoutside', (e: FederatedPointerEvent) => {\n  //   console.log('pointerupoutside');\n  //   const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n  //   if (stateManager.menu.isShow && (eventArgsSet.eventArgs?.target as any) !== stateManager.residentHoverIcon?.icon) {\n  //     setTimeout(() => {\n  //       // conside page scroll\n  //       if (!table.internalProps.menuHandler.pointInMenuElement(e.client.x, e.client.y)) {\n  //         stateManager.menu.isShow && stateManager.hideMenu();\n  //       }\n  //     }, 0);\n  //   }\n  //   // 同pointerup中的逻辑\n  //   if (stateManager.isResizeCol()) {\n  //     endResizeCol(table);\n  //   } else if (stateManager.isResizeRow()) {\n  //     endResizeRow(table);\n  //   } else if (stateManager.isMoveCol()) {\n  //     const endMoveColSuccess = table.stateManager.endMoveCol();\n  //     if (\n  //       endMoveColSuccess &&\n  //       table.stateManager.columnMove?.colSource !== -1 &&\n  //       table.stateManager.columnMove?.rowSource !== -1 &&\n  //       table.stateManager.columnMove?.colTarget !== -1 &&\n  //       table.stateManager.columnMove?.rowTarget !== -1\n  //     ) {\n  //       // 下面触发CHANGE_HEADER_POSITION 区别于pointerup\n  //       if ((table as any).hasListeners(TABLE_EVENT_TYPE.CHANGE_HEADER_POSITION)) {\n  //         table.fireListeners(TABLE_EVENT_TYPE.CHANGE_HEADER_POSITION, {\n  //           target: { col: table.stateManager.columnMove.colTarget, row: table.stateManager.columnMove.rowTarget },\n  //           source: {\n  //             col: table.stateManager.columnMove.colSource,\n  //             row: table.stateManager.columnMove.rowSource\n  //           },\n  //           event: e.nativeEvent\n  //         });\n  //       }\n  //     }\n  //   } else if (stateManager.isSelecting()) {\n  //     if (table.stateManager.select?.ranges?.length) {\n  //       const lastCol = table.stateManager.select.ranges[table.stateManager.select.ranges.length - 1].end.col;\n  //       const lastRow = table.stateManager.select.ranges[table.stateManager.select.ranges.length - 1].end.row;\n  //       table.stateManager.endSelectCells();\n  //       if ((table as any).hasListeners(TABLE_EVENT_TYPE.DRAG_SELECT_END)) {\n  //         const cellsEvent: MousePointerMultiCellEvent = {\n  //           event: e.nativeEvent,\n  //           cells: [],\n  //           col: lastCol,\n  //           row: lastRow,\n  //           scaleRatio: table.canvas.getBoundingClientRect().width / table.canvas.offsetWidth,\n  //           target: undefined\n  //         };\n  //         cellsEvent.cells = table.getSelectedCellInfos();\n  //         table.fireListeners(TABLE_EVENT_TYPE.DRAG_SELECT_END, cellsEvent);\n  //       }\n  //     }\n  //   }\n  // });\n\n  table.scenegraph.tableGroup.addEventListener('pointerdown', (e: FederatedPointerEvent) => {\n    if ((table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE)) {\n      table.fireListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE, {\n        event: e.nativeEvent\n      });\n    }\n    // table.eventManager.isPointerDownOnTable = true;\n    // setTimeout(() => {\n    //   table.eventManager.isPointerDownOnTable = false;\n    // }, 0);\n    table.eventManager.isDown = true;\n    table.eventManager.LastBodyPointerXY = { x: e.x, y: e.y };\n    // // 避免在调整列宽等拖拽操作触发外层组件的拖拽逻辑;\n    // // 如果鼠标位置在表格内（加调整列宽的热区），将pointerdown事件阻止冒泡（如果阻止mousedown需要结合isPointerDownOnTable来判断）\n    // e.stopPropagation();\n\n    // e.preventDefault(); //为了阻止mousedown事件的触发，后续：不能这样写，会阻止table聚焦\n    table.eventManager.LastPointerXY = { x: e.x, y: e.y };\n    if (e.button !== 0) {\n      // 只处理左键\n      return;\n    }\n    const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n    eventManager.downIcon = undefined;\n    if (stateManager.interactionState !== InteractionState.default) {\n      return;\n    }\n    //处理当点击到的不是图表上时 更新图表的状态为空\n    if (table.isPivotChart() && eventArgsSet?.eventArgs?.target.type !== 'chart') {\n      table.scenegraph.updateChartState(null);\n    }\n    // 处理menu\n    if ((eventArgsSet.eventArgs?.target as any) !== stateManager.residentHoverIcon?.icon) {\n      // 点击在menu外，且不是下拉菜单的icon，移除menu\n      stateManager.hideMenu();\n    }\n    // 如果点击到了图表上  后续的逻辑忽略掉 以免重绘了图表 丢失vchart图表的交互\n    if (eventArgsSet?.eventArgs?.target.type === 'chart') {\n      return;\n    }\n\n    const isCompleteEdit = (table as ListTableAPI).editorManager?.completeEdit(e.nativeEvent);\n    getPromiseValue<boolean>(isCompleteEdit, isCompleteEdit => {\n      if (isCompleteEdit === false) {\n        // 如果没有正常退出编辑状态 则不执行下面的逻辑 如选择其他单元格的逻辑\n        return;\n      }\n\n      const hitIcon = (eventArgsSet?.eventArgs?.target as any)?.role?.startsWith('icon')\n        ? eventArgsSet.eventArgs.target\n        : (e.target as any).role?.startsWith('icon')\n        ? e.target\n        : undefined;\n      eventManager.downIcon = hitIcon;\n      if (!hitIcon || (hitIcon.attribute as IIconGraphicAttribute).interactive === false) {\n        // 处理列头checkbox状态改变\n        if (eventManager.cellIsHeaderCheck(eventArgsSet)) {\n          return;\n        }\n        if (e.pointerType === 'touch') {\n          // 移动端事件特殊处理\n          eventManager.touchEnd = false;\n          eventManager.touchSetTimeout = setTimeout(() => {\n            eventManager.isTouchdown = false;\n            eventManager.isLongTouch = true;\n\n            // 处理列宽调整\n            if (\n              !eventManager.touchEnd &&\n              (eventManager.checkColumnResize(eventArgsSet, true) || eventManager.checkRowResize(eventArgsSet, true))\n            ) {\n              // eventManager.startColumnResize(e);\n              // eventManager._resizing = true;\n              stateManager.updateInteractionState(InteractionState.grabing);\n              return;\n            }\n\n            // 处理column mover\n            if (!eventManager.touchEnd && eventManager.checkColumnMover(eventArgsSet)) {\n              stateManager.updateInteractionState(InteractionState.grabing);\n              return;\n            }\n\n            // 处理单元格选择\n            if (eventManager.dealTableSelect(eventArgsSet) && !eventManager.touchEnd) {\n              // 先执行单选逻辑，再更新为grabing模式\n              // stateManager.interactionState = 'grabing';\n              stateManager.updateInteractionState(InteractionState.grabing);\n              // console.log('DRAG_SELECT_START');\n            }\n          }, 500);\n          if ((table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEENTER_CELL)) {\n            // const cellGoup = eventArgsSet?.eventArgs?.target as unknown as Group;\n            const cellGoup: any = e.path.find(node => (node as any).role === 'cell');\n            if (\n              cellGoup?.role === 'cell' &&\n              isValid(cellGoup.col) &&\n              isValid(cellGoup.row) &&\n              (cellGoup.col !== table.stateManager.hover.cellPos.col ||\n                cellGoup.row !== table.stateManager.hover.cellPos.row) &&\n              (cellGoup.col !== table.stateManager.hover.cellPosContainHeader?.col ||\n                cellGoup.row !== table.stateManager.hover.cellPosContainHeader?.row)\n            ) {\n              table.fireListeners(TABLE_EVENT_TYPE.MOUSEENTER_CELL, {\n                col: cellGoup.col,\n                row: cellGoup.row,\n                cellRange: table.getCellRangeRelativeRect({\n                  col: cellGoup.col,\n                  row: cellGoup.row\n                }),\n                scaleRatio: table.canvas.getBoundingClientRect().width / table.canvas.offsetWidth,\n                event: e.nativeEvent,\n                target: eventArgsSet?.eventArgs?.target,\n                mergeCellInfo: eventArgsSet.eventArgs?.mergeInfo\n              });\n            }\n          }\n          // 这里处理成hover  这样移动端 当点击到带有下拉菜单dropdown的单元格时 那个icon才能绘制出来。可以测试example的menu示例\n          eventManager.dealTableHover(eventArgsSet);\n        } else {\n          // 处理列宽调整\n          if (\n            !eventManager.checkCellFillhandle(eventArgsSet) &&\n            (eventManager.checkColumnResize(eventArgsSet, true) || eventManager.checkRowResize(eventArgsSet, true))\n          ) {\n            // eventManager.startColumnResize(e);\n            // eventManager._resizing = true;\n            table.scenegraph.updateChartState(null);\n            stateManager.updateInteractionState(InteractionState.grabing);\n            return;\n          }\n\n          // 处理column mover\n          if (eventManager.checkColumnMover(eventArgsSet)) {\n            stateManager.updateInteractionState(InteractionState.grabing);\n            return;\n          }\n\n          // 处理填充功能\n          if (eventManager.checkCellFillhandle(eventArgsSet, true) && eventManager.dealFillSelect(eventArgsSet)) {\n            // table.eventManager.LastRange = {\n            //   start: table.stateManager.select.ranges[0].start,\n            //   end: {\n            //     col: (getCellEventArgsSet(e).eventArgs.target as unknown as Group).col,\n            //     row: (getCellEventArgsSet(e).eventArgs.target as unknown as Group).row\n            //   }\n            // };\n            // table.eventManager.SelectData = table.getCopyValue();\n            stateManager.updateInteractionState(InteractionState.grabing);\n            return;\n          }\n          // 处理单元格选择\n          if (eventManager.dealTableSelect(eventArgsSet)) {\n            // 先执行单选逻辑，再更新为grabing模式\n            // stateManager.interactionState = 'grabing';\n            stateManager.updateInteractionState(InteractionState.grabing);\n            // console.log('DRAG_SELECT_START');\n          }\n        }\n      } else if ((hitIcon.attribute as any).funcType === IconFuncTypeEnum.dragReorder) {\n        stateManager.startMoveCol(\n          eventArgsSet.eventArgs.col,\n          eventArgsSet.eventArgs.row,\n          eventArgsSet.abstractPos.x,\n          eventArgsSet.abstractPos.y,\n          eventArgsSet.eventArgs?.event?.nativeEvent\n        );\n        stateManager.updateInteractionState(InteractionState.grabing);\n      }\n      if ((table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEDOWN_CELL)) {\n        const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n        if (eventArgsSet.eventArgs) {\n          table.fireListeners(TABLE_EVENT_TYPE.MOUSEDOWN_CELL, {\n            col: eventArgsSet.eventArgs.col,\n            row: eventArgsSet.eventArgs.row,\n            event: e.nativeEvent,\n            target: eventArgsSet?.eventArgs?.target,\n            mergeCellInfo: eventArgsSet.eventArgs.mergeInfo\n          });\n        }\n      }\n    });\n  });\n  // 注意和pointertap事件的处理 vrender中的事件系统： 是先触发pointerup 如果是点击到的场景树图元节点则会继续触发pointertap 否则不触发pointertap\n  table.scenegraph.tableGroup.addEventListener('pointerup', (e: FederatedPointerEvent) => {\n    console.log('tableGroup', 'pointerup');\n    if (e.button !== 0) {\n      // 只处理左键\n      return;\n    }\n    if (stateManager.interactionState === 'grabing') {\n      // stateManager.interactionState = 'default';\n      stateManager.updateInteractionState(InteractionState.default);\n      // eventManager._resizing = false;\n      if (stateManager.isResizeCol()) {\n        endResizeCol(table);\n      } else if (stateManager.isResizeRow()) {\n        endResizeRow(table);\n      } else if (stateManager.isMoveCol()) {\n        // const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n        const endMoveColSuccess = table.stateManager.endMoveCol();\n        fireMoveColEventListeners(table, endMoveColSuccess, e.nativeEvent);\n      } else if (stateManager.isSelecting()) {\n        table.stateManager.endSelectCells();\n        if (table.stateManager.isFillHandle()) {\n          table.stateManager.endFillSelect();\n        }\n        const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n        if (\n          table.eventManager.isDraging &&\n          eventArgsSet.eventArgs &&\n          (table as any).hasListeners(TABLE_EVENT_TYPE.DRAG_SELECT_END)\n        ) {\n          const cellsEvent: MousePointerMultiCellEvent = {\n            event: e.nativeEvent,\n            cells: [],\n            col: (eventArgsSet.eventArgs.target as unknown as Group).col,\n            row: (eventArgsSet.eventArgs.target as unknown as Group).row,\n            scaleRatio: table.canvas.getBoundingClientRect().width / table.canvas.offsetWidth,\n            target: eventArgsSet?.eventArgs?.target,\n            mergeCellInfo: eventArgsSet.eventArgs?.mergeInfo\n          };\n\n          cellsEvent.cells = table.getSelectedCellInfos();\n          table.fireListeners(TABLE_EVENT_TYPE.DRAG_SELECT_END, cellsEvent);\n        }\n      }\n    } else if (stateManager.interactionState === InteractionState.scrolling) {\n      stateManager.updateInteractionState(InteractionState.default);\n      // scroll end\n    }\n\n    // console.log('DRAG_SELECT_END');\n    if ((table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEUP_CELL)) {\n      const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n      if (eventArgsSet.eventArgs) {\n        table.fireListeners(TABLE_EVENT_TYPE.MOUSEUP_CELL, {\n          col: eventArgsSet.eventArgs.col,\n          row: eventArgsSet.eventArgs.row,\n          event: e.nativeEvent,\n          target: eventArgsSet?.eventArgs?.target,\n          mergeCellInfo: eventArgsSet.eventArgs?.mergeInfo\n        });\n      }\n    }\n    setTimeout(() => {\n      eventManager.isTouchdown = false;\n      eventManager.isTouchMove = false;\n      eventManager.isDraging = false;\n      eventManager.touchMovePoints = [];\n    }, 0);\n  });\n\n  table.scenegraph.tableGroup.addEventListener('rightdown', (e: FederatedPointerEvent) => {\n    const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n    // 右键点击\n    if (eventArgsSet.eventArgs) {\n      stateManager.triggerContextMenu(\n        eventArgsSet.eventArgs.col,\n        eventArgsSet.eventArgs.row,\n        eventArgsSet.abstractPos.x,\n        eventArgsSet.abstractPos.y\n      );\n\n      //处理监听的右键事件\n      const { col, row } = eventArgsSet.eventArgs;\n      if ((table as any).hasListeners(TABLE_EVENT_TYPE.CONTEXTMENU_CELL)) {\n        const cellInfo = table.getCellInfo(col, row);\n        let icon;\n        let position;\n        if (eventArgsSet.eventArgs?.target) {\n          const iconInfo = getIconAndPositionFromTarget(eventArgsSet.eventArgs?.target);\n          if (iconInfo) {\n            icon = iconInfo.icon;\n            position = iconInfo.position;\n          }\n        }\n        const cellsEvent: MousePointerMultiCellEvent = {\n          ...cellInfo,\n          event: e.nativeEvent,\n          cells: [],\n          targetIcon: icon\n            ? {\n                name: icon.name,\n                position: position,\n                funcType: (icon as any).attribute.funcType\n              }\n            : undefined,\n          target: eventArgsSet?.eventArgs?.target,\n          mergeCellInfo: eventArgsSet.eventArgs?.mergeInfo\n        };\n        if (cellInRanges(table.stateManager.select.ranges, col, row)) {\n          // 用户右键点击已经选中的区域\n          // const { start, end } = eventManager.selection.range;\n          cellsEvent.cells = table.getSelectedCellInfos();\n        } else {\n          // 用户右键点击新单元格\n          cellsEvent.cells = [[cellInfo]];\n        }\n\n        table.fireListeners(TABLE_EVENT_TYPE.CONTEXTMENU_CELL, cellsEvent);\n      }\n    }\n  });\n  // 注意和pointerup事件的处理 vrender中的事件系统： 是先触发pointerup 如果是点击到的场景树图元节点则会继续触发pointertap 否则不触发pointertap\n  table.scenegraph.tableGroup.addEventListener('pointertap', (e: FederatedPointerEvent) => {\n    if (table.stateManager.columnResize.resizing) {\n      return;\n    }\n    const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n    if (\n      !eventManager.isTouchMove &&\n      e.button === 0 &&\n      eventArgsSet.eventArgs &&\n      (table as any).hasListeners(TABLE_EVENT_TYPE.CLICK_CELL)\n    ) {\n      const { col, row } = eventArgsSet.eventArgs;\n      const cellInfo = table.getCellInfo(col, row);\n      let icon;\n      let position;\n      if (eventArgsSet.eventArgs?.target) {\n        const iconInfo = getIconAndPositionFromTarget(eventArgsSet.eventArgs?.target);\n        if (iconInfo) {\n          icon = iconInfo.icon;\n          position = iconInfo.position;\n        }\n      }\n      const cellsEvent: MousePointerMultiCellEvent = {\n        ...cellInfo,\n        event: e.nativeEvent,\n        federatedEvent: e,\n        cells: [],\n        targetIcon: icon\n          ? {\n              name: icon.name,\n              position: position,\n              funcType: (icon as any).attribute.funcType\n            }\n          : undefined,\n        target: eventArgsSet?.eventArgs?.target,\n        mergeCellInfo: eventArgsSet.eventArgs?.mergeInfo\n      };\n\n      table.fireListeners(TABLE_EVENT_TYPE.CLICK_CELL, cellsEvent);\n    }\n    if (table.stateManager.columnResize.resizing || table.stateManager.columnMove.moving) {\n      return;\n    }\n    // if (table.stateManager.fillHandle.isFilling) {\n    //   table.stateManager.endFillSelect();\n    //   return;\n    // }\n\n    eventManager.dealIconClick(e, eventArgsSet);\n    if (!eventArgsSet?.eventArgs) {\n      return;\n    }\n    if (eventManager.touchSetTimeout) {\n      // 通过这个变量判断非drag鼠标拖拽状态，就不再增加其他变量isDrag了（touchSetTimeout如果拖拽过会变成undefined pointermove事件有置为undefined）\n      if (e.pointerType === 'touch') {\n        // 移动端事件特殊处理\n        const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n        if (eventManager.touchSetTimeout) {\n          clearTimeout(eventManager.touchSetTimeout);\n          const isHasSelected = !!stateManager.select.ranges?.length;\n          eventManager.dealTableSelect(eventArgsSet);\n          stateManager.endSelectCells(true, isHasSelected);\n          eventManager.touchSetTimeout = undefined;\n        }\n      }\n    }\n  });\n  // stage 的pointerdown监听\n  table.scenegraph.stage.addEventListener('pointerdown', (e: FederatedPointerEvent) => {\n    const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n    if (\n      !eventArgsSet.eventArgs?.target ||\n      (eventArgsSet.eventArgs?.target as any) !== stateManager.residentHoverIcon?.icon\n    ) {\n      stateManager.hideMenu();\n    }\n    const isCompleteEdit = (table as ListTableAPI).editorManager?.completeEdit(e.nativeEvent);\n    getPromiseValue<boolean>(isCompleteEdit, isCompleteEdit => {\n      if (isCompleteEdit === false) {\n        // 如果没有正常退出编辑状态 则不执行下面的逻辑 如选择其他单元格的逻辑\n        return;\n      }\n      const hitIcon = (e.target as any).role?.startsWith('icon') ? e.target : undefined;\n      eventManager.downIcon = hitIcon;\n      // 处理列宽调整  这里和tableGroup.addEventListener('pointerdown' 逻辑一样\n      if (\n        e.pointerType !== 'touch' && // 移动端不应该在这里处理列宽调整 下面有eventManager.touchMove的逻辑\n        !hitIcon &&\n        !eventManager.checkCellFillhandle(eventArgsSet) &&\n        !stateManager.columnResize.resizing &&\n        eventManager.checkColumnResize(eventArgsSet, true)\n      ) {\n        // eventManager.startColumnResize(e);\n        // eventManager._resizing = true;\n        table.scenegraph.updateChartState(null);\n        stateManager.updateInteractionState(InteractionState.grabing);\n\n        // 调整列宽最后一列有外扩了8px  需要将其考虑到table中 需要触发下MOUSEDOWN_TABLE事件\n        const { eventArgs } = eventArgsSet;\n        if (!eventArgs?.targetCell) {\n          const cell = table.getCellAt(\n            eventArgsSet.abstractPos.x - table.theme.columnResize.resizeHotSpotSize / 2,\n            eventArgsSet.abstractPos.y\n          );\n          if (cell) {\n            if ((table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE)) {\n              table.fireListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE, {\n                event: e.nativeEvent\n              });\n            }\n          }\n        }\n        return;\n      }\n    });\n  });\n  table.scenegraph.stage.addEventListener('pointerup', (e: FederatedPointerEvent) => {\n    // 处理列宽调整  这里和tableGroup.addEventListener('pointerup' 逻辑一样\n    if (stateManager.interactionState === 'grabing') {\n      // stateManager.interactionState = 'default';\n      stateManager.updateInteractionState(InteractionState.default);\n      // eventManager._resizing = false;\n      if (stateManager.isResizeCol()) {\n        endResizeCol(table);\n      } else if (stateManager.isResizeRow()) {\n        endResizeRow(table);\n      }\n    }\n  });\n  // click outside\n  table.scenegraph.stage.addEventListener('pointertap', (e: FederatedPointerEvent) => {\n    const target = e.target;\n    if (\n      // 如果是鼠标点击到canvas空白区域 则取消选中状态\n      !table.eventManager.isDraging &&\n      target &&\n      (target.isDescendantsOf(table.scenegraph.stage) || (target as any).stage === target) && //判断节点未被删除 后面这个是为了判断是stage本身\n      !target.isDescendantsOf(table.scenegraph.tableGroup)\n      // &&\n      // (target as any) !== table.scenegraph.tableGroup &&\n      // (target as any) !== table.scenegraph.stage\n    ) {\n      stateManager.updateInteractionState(InteractionState.default);\n      eventManager.dealTableHover();\n      const isHasSelected = !!stateManager.select.ranges?.length;\n      // 点击空白区域取消选中\n      if (table.options.select?.blankAreaClickDeselect ?? true) {\n        eventManager.dealTableSelect();\n      }\n      stateManager.endSelectCells(true, isHasSelected);\n\n      stateManager.updateCursor();\n      table.scenegraph.updateChartState(null);\n    } else if (table.eventManager.isDraging && stateManager.isSelecting()) {\n      // 如果鼠标拖拽后是否 则结束选中\n      stateManager.endSelectCells();\n    }\n  });\n  table.scenegraph.stage.addEventListener('pointermove', (e: FederatedPointerEvent) => {\n    const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n    // 处理列宽调整  这里和tableGroup.addEventListener('pointermove' 逻辑一样\n    if (stateManager.isResizeCol() || eventManager.checkColumnResize(eventArgsSet)) {\n      // 更新填充柄pointer\n      if (table.stateManager.select && eventManager.checkCellFillhandle(eventArgsSet)) {\n        stateManager.updateCursor('crosshair');\n      } else {\n        stateManager.updateCursor('col-resize');\n      }\n    } else if (stateManager.isResizeRow() || eventManager.checkRowResize(eventArgsSet)) {\n      // 更新填充柄pointer\n      if (table.stateManager.select && eventManager.checkCellFillhandle(eventArgsSet)) {\n        stateManager.updateCursor('crosshair');\n      } else {\n        stateManager.updateCursor('row-resize');\n      }\n    } else if (stateManager.isMoveCol()) {\n      // 拖拽位置已经在updateMoveCol方法中添加了响应的鼠标样式\n    } else {\n      stateManager.updateCursor();\n    }\n  });\n  // table.scenegraph.tableGroup.addEventListener('dbltap', (e: FederatedPointerEvent) => {\n  //   console.log('tableGroup', 'dbltap');\n  //   dblclickHandler(e);\n  // });\n  // table.scenegraph.tableGroup.addEventListener('dblclick', (e: FederatedPointerEvent) => {\n  //   console.log('tableGroup', 'dblclick');\n  //   dblclickHandler(e);\n  // });\n\n  table.scenegraph.tableGroup.addEventListener('checkbox_state_change', (e: FederatedPointerEvent) => {\n    const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n    const { col, row } = eventArgsSet.eventArgs;\n    const cellInfo = table.getCellInfo(col, row);\n\n    const mergeRange = getCellMergeInfo(table, col, row);\n    if (mergeRange) {\n      for (let col = mergeRange.start.col; col <= mergeRange.end.col; col++) {\n        for (let row = mergeRange.start.row; row <= mergeRange.end.row; row++) {\n          const cellGroup = table.scenegraph.getCell(col, row);\n          cellGroup.forEachChildren((checkbox: CheckBox) => {\n            if (checkbox.name === 'checkbox') {\n              checkbox.setAttributes({\n                checked: (e.target.attribute as CheckboxAttributes).checked,\n                indeterminate: (e.target.attribute as CheckboxAttributes).indeterminate\n              });\n            }\n          });\n        }\n      }\n    }\n\n    const cellsEvent: MousePointerCellEvent & { checked: boolean } = {\n      ...cellInfo,\n      event: e.nativeEvent,\n      target: eventArgsSet?.eventArgs?.target,\n      mergeCellInfo: eventArgsSet?.eventArgs?.mergeInfo,\n      checked: (e.detail as unknown as { checked: boolean }).checked\n    };\n\n    if (table.isHeader(col, row)) {\n      //点击的表头部分的checkbox 需要同时处理表头和body单元格的状态\n      table.stateManager.setHeaderCheckedState(\n        cellInfo.field as string | number,\n        (e.detail as unknown as { checked: boolean }).checked\n      );\n      const cellType = table.getCellType(col, row);\n      if (cellType === 'checkbox') {\n        table.scenegraph.updateCheckboxCellState(col, row, (e.detail as unknown as { checked: boolean }).checked);\n      }\n    } else {\n      //点击的是body单元格的checkbox  处理本单元格的状态维护 同时需要检查表头是否改变状态\n      table.stateManager.setCheckedState(\n        col,\n        row,\n        cellInfo.field as string | number,\n        (e.detail as unknown as { checked: boolean }).checked\n      );\n      const cellType = table.getCellType(col, row);\n      if (cellType === 'checkbox') {\n        const oldHeaderCheckedState = table.stateManager.headerCheckedState[cellInfo.field as string | number];\n        const newHeaderCheckedState = table.stateManager.updateHeaderCheckedState(\n          cellInfo.field as string | number,\n          col,\n          row\n        );\n        if (oldHeaderCheckedState !== newHeaderCheckedState) {\n          table.scenegraph.updateHeaderCheckboxCellState(col, row, newHeaderCheckedState);\n        }\n      }\n    }\n    table.fireListeners(TABLE_EVENT_TYPE.CHECKBOX_STATE_CHANGE, cellsEvent);\n\n    table.scenegraph.updateNextFrame();\n  });\n\n  table.scenegraph.tableGroup.addEventListener('radio_checked', (e: FederatedPointerEvent) => {\n    const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n    const { col, row, target } = eventArgsSet.eventArgs;\n    const cellInfo = table.getCellInfo(col, row);\n    const indexInCell: string | undefined = regIndexReg.exec(target.id as string)?.[1];\n\n    const mergeRange = getCellMergeInfo(table, col, row);\n    if (mergeRange) {\n      // update all radio in merge cells\n      for (let col = mergeRange.start.col; col <= mergeRange.end.col; col++) {\n        for (let row = mergeRange.start.row; row <= mergeRange.end.row; row++) {\n          const cellGroup = table.scenegraph.getCell(col, row);\n          cellGroup.forEachChildren((radio: Radio) => {\n            if (radio.name === 'radio' && radio.id === target.id) {\n              radio.setAttributes({\n                checked: true\n              });\n            }\n          });\n        }\n      }\n    }\n\n    // update other radio\n    const define = table.getBodyColumnDefine(col, row) as RadioColumnDefine;\n    const radioCheckType = define.radioCheckType || 'column';\n\n    if (radioCheckType === 'cell') {\n      // update other radio in this cell\n      if (mergeRange) {\n        // update all radio in merge cells\n        for (let col = mergeRange.start.col; col <= mergeRange.end.col; col++) {\n          for (let row = mergeRange.start.row; row <= mergeRange.end.row; row++) {\n            const cellGroup = table.scenegraph.getCell(col, row);\n            cellGroup.forEachChildren((radio: Radio) => {\n              if (radio.name === 'radio' && radio.id !== target.id) {\n                radio.setAttributes({\n                  checked: false\n                });\n              }\n            });\n          }\n        }\n      } else {\n        // update all radio in single cell\n        const cellGroup = table.scenegraph.getCell(col, row);\n        cellGroup.forEachChildren((radio: Radio) => {\n          if (radio.name === 'radio' && radio.id !== target.id) {\n            radio.setAttributes({\n              checked: false\n            });\n          }\n        });\n      }\n    } else if (radioCheckType === 'column') {\n      // update other radio in this column\n      const columnGroup = table.scenegraph.getColGroup(col);\n      columnGroup.forEachChildren((cellGroup: Group) => {\n        cellGroup.forEachChildren((radio: Radio) => {\n          if (radio.name === 'radio' && radio.id !== target.id) {\n            radio.setAttributes({\n              checked: false\n            });\n          }\n        });\n      });\n    }\n\n    // update state\n    const radioIndexInCell = indexInCell ? Number(indexInCell) : undefined;\n    table.stateManager.setRadioState(col, row, cellInfo.field as string | number, radioCheckType, radioIndexInCell);\n\n    // trigger event\n    const cellsEvent: MousePointerCellEvent & { radioIndexInCell: number | undefined } = {\n      ...cellInfo,\n      event: e.nativeEvent,\n      target: eventArgsSet?.eventArgs?.target,\n      mergeCellInfo: eventArgsSet?.eventArgs?.mergeInfo,\n      radioIndexInCell\n    };\n    table.fireListeners(TABLE_EVENT_TYPE.RADIO_STATE_CHANGE, cellsEvent);\n\n    table.scenegraph.updateNextFrame();\n  });\n\n  table.scenegraph.tableGroup.addEventListener('switch_state_change', (e: FederatedPointerEvent) => {\n    const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n    const { col, row, target } = eventArgsSet.eventArgs;\n    const cellInfo = table.getCellInfo(col, row);\n\n    const mergeRange = getCellMergeInfo(table, col, row);\n    if (mergeRange) {\n      for (let col = mergeRange.start.col; col <= mergeRange.end.col; col++) {\n        for (let row = mergeRange.start.row; row <= mergeRange.end.row; row++) {\n          const cellGroup = table.scenegraph.getCell(col, row);\n          cellGroup.forEachChildren((switchComponent: Switch) => {\n            if (switchComponent.name === 'switch') {\n              switchComponent.setAttributes({\n                checked: (e.target.attribute as CheckboxAttributes).checked\n              });\n            }\n          });\n        }\n      }\n    }\n\n    const cellsEvent: MousePointerCellEvent & { checked: boolean } = {\n      ...cellInfo,\n      event: e.nativeEvent,\n      target: eventArgsSet?.eventArgs?.target,\n      mergeCellInfo: eventArgsSet?.eventArgs?.mergeInfo,\n      checked: (e.detail as unknown as { checked: boolean }).checked\n    };\n\n    table.stateManager.setCheckedState(\n      col,\n      row,\n      cellInfo.field as string | number,\n      (e.detail as unknown as { checked: boolean }).checked\n    );\n\n    table.fireListeners(TABLE_EVENT_TYPE.SWITCH_STATE_CHANGE, cellsEvent);\n\n    table.scenegraph.updateNextFrame();\n  });\n\n  table.scenegraph.stage.addEventListener('wheel', (e: FederatedWheelEvent) => {\n    const legend: any = e.path.find(node => (node as any).name === 'legend');\n    if (!legend) {\n      table.editorManager?.completeEdit();\n      if (table.eventManager._enableTableScroll) {\n        handleWhell(e, stateManager);\n      }\n    }\n  });\n}\nexport function bindGesture(eventManager: EventManager) {\n  const table = eventManager.table;\n  eventManager.gesture = new Gesture(table.scenegraph.tableGroup as unknown as IEventTarget, {\n    tap: {\n      interval: 300\n    }\n  });\n  eventManager.gesture.on('doubletap', e => {\n    console.log('doubletap', e);\n    // e.preventDefault();\n    dblclickHandler(e, table);\n  });\n}\nexport function endResizeCol(table: BaseTableAPI) {\n  table.stateManager.endResizeCol();\n  // textStick 依赖了这个事件 所以一定要触发RESIZE_COLUMN_END\n  // if ((table as any).hasListeners(TABLE_EVENT_TYPE.RESIZE_COLUMN_END)) {\n  // RESIZE_COLUMN_END事件触发，返回所有列宽\n  const columns = [];\n  // 返回所有列宽信息\n  for (let col = 0; col < table.colCount; col++) {\n    columns.push(table.getColWidth(col));\n  }\n  table.fireListeners(TABLE_EVENT_TYPE.RESIZE_COLUMN_END, {\n    col: table.stateManager.columnResize.col,\n    colWidths: columns\n  });\n  // }\n}\n\nexport function endResizeRow(table: BaseTableAPI) {\n  table.stateManager.endResizeRow();\n\n  table.fireListeners(TABLE_EVENT_TYPE.RESIZE_ROW_END, {\n    row: table.stateManager.rowResize.row,\n    rowHeight: table.getRowHeight(table.stateManager.rowResize.row)\n  });\n}\n\nfunction dblclickHandler(e: FederatedPointerEvent, table: BaseTableAPI) {\n  const eventArgsSet: SceneEvent = getCellEventArgsSet(e);\n  let col = -1;\n  let row = -1;\n  if (eventArgsSet.eventArgs) {\n    col = eventArgsSet.eventArgs.col;\n    row = eventArgsSet.eventArgs.row;\n  }\n  const value = table.getCellValue(col, row);\n\n  const bounds = eventArgsSet.eventArgs?.targetCell?.globalAABBBounds;\n  bounds &&\n    table.internalProps.focusControl.setFocusRect(\n      new Rect(bounds.x1 + table.scrollLeft, bounds.y1 + table.scrollTop, bounds.x2 - bounds.x1, bounds.y2 - bounds.y1),\n      value\n    );\n  if ((table as any).hasListeners(TABLE_EVENT_TYPE.DBLCLICK_CELL)) {\n    const cellInfo = table.getCellInfo(col, row);\n    let icon;\n    let position;\n    if (eventArgsSet.eventArgs?.target) {\n      const iconInfo = getIconAndPositionFromTarget(eventArgsSet.eventArgs?.target);\n      if (iconInfo) {\n        icon = iconInfo.icon;\n        position = iconInfo.position;\n      }\n    }\n    const cellsEvent: MousePointerMultiCellEvent = {\n      ...cellInfo,\n      event: e.nativeEvent,\n      federatedEvent: e,\n      cells: [],\n      targetIcon: icon\n        ? {\n            name: icon.name,\n            position: position,\n            funcType: (icon as any).attribute.funcType\n          }\n        : undefined,\n      target: eventArgsSet?.eventArgs?.target,\n      mergeCellInfo: eventArgsSet?.eventArgs?.mergeInfo\n    };\n    table.fireListeners(TABLE_EVENT_TYPE.DBLCLICK_CELL, cellsEvent);\n  }\n}\n"]}