{"version":3,"sources":["../src/tools/merge-range.ts"],"names":[],"mappings":";;;AAKA,SAAgB,iBAAiB,CAAC,SAAgB,EAAE,KAAiB;IACnE,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;QAC1B,OAAO;YACL,QAAQ,EAAE,CAAC;YACX,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,CAAC;YACX,MAAM,EAAE,CAAC;SACV,CAAC;KACH;IACD,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC;IAGvF,MAAM,iBAAiB,GAAG,aAAa,CAAC;IACxC,MAAM,eAAe,GAAG,WAAW,CAAC;IACpC,MAAM,iBAAiB,GAAG,aAAa,CAAC;IACxC,MAAM,eAAe,GAAG,WAAW,CAAC;IAYpC,OAAO;QACL,QAAQ,EAAE,iBAAiB;QAC3B,MAAM,EAAE,eAAe;QACvB,QAAQ,EAAE,iBAAiB;QAC3B,MAAM,EAAE,eAAe;KACxB,CAAC;AACJ,CAAC;AAjCD,8CAiCC;AAED,SAAgB,eAAe,CAAC,SAAoB,EAAE,KAAmB;IACvE,MAAM,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;IACrC,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;IACjC,MAAM,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;IACrC,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;IAEjC,IAAI,WAAW,GAAG,QAAQ,CAAC;IAC3B,IAAI,SAAS,GAAG,MAAM,CAAC;IACvB,IAAI,WAAW,GAAG,QAAQ,CAAC;IAC3B,IAAI,SAAS,GAAG,MAAM,CAAC;IACvB,KAAK,IAAI,GAAG,GAAG,QAAQ,EAAE,GAAG,IAAI,MAAM,EAAE,GAAG,EAAE,EAAE;QAC7C,KAAK,IAAI,GAAG,GAAG,QAAQ,EAAE,GAAG,IAAI,MAAM,EAAE,GAAG,EAAE,EAAE;YAC7C,MAAM,UAAU,GAAG,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAChD,IAAI,UAAU,EAAE;gBACd,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC1D,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACpD,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC1D,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACrD;SACF;KACF;IAED,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,CAAC;IAClC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC;IAC9B,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,CAAC;IAClC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC;IAE9B,OAAO,SAAS,CAAC;AACnB,CAAC;AA5BD,0CA4BC","file":"merge-range.js","sourcesContent":["import type { Group } from '../scenegraph/graphic/group';\nimport type { Scenegraph } from '../scenegraph/scenegraph';\nimport type { CellRange } from '../ts-types';\nimport type { BaseTableAPI } from '../ts-types/base-table';\n\nexport function getCellMergeRange(cellGroup: Group, scene: Scenegraph) {\n  if (!scene || !scene.proxy) {\n    return {\n      colStart: 0,\n      colEnd: 0,\n      rowStart: 0,\n      rowEnd: 0\n    };\n  }\n  const { mergeStartCol, mergeEndCol, mergeStartRow, mergeEndRow, col, row } = cellGroup;\n  // const { colStart, colEnd, rowStart, rowEnd, bodyLeftCol, bodyRightCol, bodyTopRow, bodyBottomRow } = scene.proxy;\n\n  const cellRangeColStart = mergeStartCol;\n  const cellRangeColEnd = mergeEndCol;\n  const cellRangeRowStart = mergeStartRow;\n  const cellRangeRowEnd = mergeEndRow;\n\n  // if (col >= bodyLeftCol && col <= bodyRightCol) {\n  //   cellRangeColStart = Math.max(cellGroup.mergeStartCol, colStart);\n  //   cellRangeColEnd = Math.min(cellGroup.mergeEndCol, colEnd);\n  // }\n\n  // if (row >= bodyTopRow && row <= bodyBottomRow) {\n  //   cellRangeRowStart = Math.max(cellGroup.mergeStartRow, rowStart);\n  //   cellRangeRowEnd = Math.min(cellGroup.mergeEndRow, rowEnd);\n  // }\n\n  return {\n    colStart: cellRangeColStart,\n    colEnd: cellRangeColEnd,\n    rowStart: cellRangeRowStart,\n    rowEnd: cellRangeRowEnd\n  };\n}\n\nexport function expendCellRange(cellRange: CellRange, table: BaseTableAPI): CellRange {\n  const colStart = cellRange.start.col;\n  const colEnd = cellRange.end.col;\n  const rowStart = cellRange.start.row;\n  const rowEnd = cellRange.end.row;\n\n  let newColStart = colStart;\n  let newColEnd = colEnd;\n  let newRowStart = rowStart;\n  let newRowEnd = rowEnd;\n  for (let col = colStart; col <= colEnd; col++) {\n    for (let row = rowStart; row <= rowEnd; row++) {\n      const mergeRange = table.getCellRange(col, row);\n      if (mergeRange) {\n        newColStart = Math.min(newColStart, mergeRange.start.col);\n        newColEnd = Math.max(newColEnd, mergeRange.end.col);\n        newRowStart = Math.min(newRowStart, mergeRange.start.row);\n        newRowEnd = Math.max(newRowEnd, mergeRange.end.row);\n      }\n    }\n  }\n\n  cellRange.start.col = newColStart;\n  cellRange.end.col = newColEnd;\n  cellRange.start.row = newRowStart;\n  cellRange.end.row = newRowEnd;\n\n  return cellRange;\n}\n"]}