{"version":3,"sources":["../src/tools/env.ts"],"names":[],"mappings":";;;AAGA,MAAa,GAAG;IAEP,MAAM,KAAK,IAAI;QACpB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE;YACd,GAAG,CAAC,KAAK,GAAG,WAAW,EAAE,CAAC;SAC3B;QACD,OAAO,GAAG,CAAC,KAAK,CAAC;IACnB,CAAC;IACM,MAAM,KAAK,IAAI,CAAC,IAAa;QAClC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC;IACnB,CAAC;IAYD,MAAM,CAAC,oBAAoB,CAAC,IAAmB;QAC7C,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,MAAM,CAAC,iBAAiB,CAAC,IAAmB;QAC1C,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,mBAAmB;QACxB,IAAI,GAAG,CAAC,YAAY,EAAE;YACpB,OAAO,GAAG,CAAC,YAAY,CAAC;SACzB;QACD,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;YACzB,OAAO,CAAC,KAAK,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,EAAE,EAAE,CAAC,IAAI,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SAC1E;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,MAAM,CAAC,6BAA6B,CAAC,IAAmB;QACtD,GAAG,CAAC,qBAAqB,GAAG,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,MAAM,CAAC,wBAAwB;QAC7B,IAAI,GAAG,CAAC,qBAAqB,EAAE;YAC7B,OAAO,GAAG,CAAC,qBAAqB,CAAC;SAClC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,MAAM,CAAC,4BAA4B,CAAC,IAAmB;QACrD,GAAG,CAAC,oBAAoB,GAAG,IAAI,EAAE,CAAC;IACpC,CAAC;IAED,MAAM,CAAC,uBAAuB;QAC5B,IAAI,GAAG,CAAC,oBAAoB,EAAE;YAC5B,OAAO,GAAG,CAAC,oBAAoB,CAAC;SACjC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;;AA5DH,kBA6DC;AAjDQ,OAAG,GAAG,CAAC,CAAC;AAwDjB,SAAS,WAAW;IAClB,IAAI,IAAI,GAAY,SAAS,CAAC;IAC9B,IAAI;QACF,IAAK,MAAc,CAAC,IAAI,KAAK,MAAM,EAAE;YACnC,IAAI,GAAG,MAAM,CAAC;SACf;aAAM,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YAC/D,IAAI,GAAG,SAAS,CAAC;SAClB;aAAM,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACxC,IAAI,GAAG,MAAM,CAAC;SACf;KACF;IAAC,OAAO,GAAG,EAAE;QACZ,IAAI,GAAG,MAAM,CAAC;KACf;IACD,OAAO,IAAI,CAAC;AACd,CAAC","file":"env.js","sourcesContent":["export type EnvMode = 'browser' | 'node' | 'worker' | 'miniApp' | 'desktop-miniApp';\nexport type LooseFunction = (...args: any) => any;\n\nexport class Env {\n  static _mode: EnvMode;\n  public static get mode() {\n    if (!Env._mode) {\n      Env._mode = defaultMode();\n    }\n    return Env._mode;\n  }\n  public static set mode(mode: EnvMode) {\n    Env._mode = mode;\n  }\n\n  static dpr = 0;\n\n  static CreateCanvas?: LooseFunction;\n\n  static LoadImage?: LooseFunction;\n\n  static RequestAnimationFrame?: LooseFunction;\n\n  static CancelAnimationFrame?: LooseFunction;\n\n  static RegisterCreateCanvas(func: LooseFunction) {\n    Env.CreateCanvas = func;\n  }\n\n  static RegisterLoadImage(func: LooseFunction) {\n    Env.LoadImage = func;\n  }\n\n  static GetCreateCanvasFunc(): LooseFunction | undefined {\n    if (Env.CreateCanvas) {\n      return Env.CreateCanvas;\n    }\n    if (Env.mode === 'worker') {\n      return (width = 200, height = 200) => new OffscreenCanvas(width, height);\n    }\n    return undefined;\n  }\n\n  static RegisterRequestAnimationFrame(func: LooseFunction) {\n    Env.RequestAnimationFrame = func();\n  }\n\n  static GetRequestAnimationFrame() {\n    if (Env.RequestAnimationFrame) {\n      return Env.RequestAnimationFrame;\n    }\n    return undefined;\n  }\n\n  static RegisterCancelAnimationFrame(func: LooseFunction) {\n    Env.CancelAnimationFrame = func();\n  }\n\n  static GetCancelAnimationFrame() {\n    if (Env.CancelAnimationFrame) {\n      return Env.CancelAnimationFrame;\n    }\n    return undefined;\n  }\n}\n\n/**\n *\n * 这个默认的判断方法并不能区分出不同的环境，所以这里采用是否判断\n * 满足条件为 'browser'，不满足则为 'node'\n */\nfunction defaultMode(): EnvMode {\n  let mode: EnvMode = 'browser';\n  try {\n    if ((window as any).type === 'node') {\n      mode = 'node';\n    } else if (typeof window !== 'undefined' && !window.performance) {\n      mode = 'miniApp';\n    } else if (typeof window === 'undefined') {\n      mode = 'node';\n    }\n  } catch (err) {\n    mode = 'node';\n  }\n  return mode;\n}\n"]}