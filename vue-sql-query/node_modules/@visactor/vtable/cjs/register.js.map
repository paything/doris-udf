{"version":3,"sources":["../src/register.ts"],"names":[],"mappings":";;;AAAA,mCAA+C;AAC/C,4CAAyD;AACzD,+CAA+D;AAG/D,4CAAyC;AAEzC,gEAAuE;AAEvE,SAAS,QAAQ,CAAC,GAA2B,EAAE,IAAY,EAAE,KAAU;IACrE,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IACtB,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IAClB,OAAO,GAAG,CAAC;AACb,CAAC;AAED,SAAgB,KAAK,CAAC,IAAY,EAAE,KAAyB;IAC3D,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;QACzC,OAAO,QAAQ,CAAC,eAAY,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KAC5C;IACD,OAAO,eAAY,CAAC,IAAI,CAAC,CAAC;AAC5B,CAAC;AALD,sBAKC;AACD,SAAgB,IAAI,CAAC,IAAY,EAAE,IAAuB;IACxD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;QACvC,OAAO,QAAQ,CAAC,aAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KAC1C;IACD,OAAO,aAAW,CAAC,IAAI,CAAC,CAAC;AAC3B,CAAC;AALD,oBAKC;AACD,SAAgB,WAAW,CAAC,IAAY,EAAE,WAAiB;IACzD,IAAI,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,SAAS,EAAE;QACrD,OAAO,QAAQ,CAAC,wBAAgB,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;KACtD;IACD,OAAO,wBAAgB,CAAC,IAAI,CAAC,CAAC;AAChC,CAAC;AALD,kCAKC;AACD,SAAgB,MAAM,CAAC,IAAY,EAAE,MAAgB;IACnD,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;QAC3C,OAAO,QAAQ,CAAC,iBAAO,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;KACxC;IACD,OAAO,iBAAO,CAAC,IAAI,CAAC,CAAC;AACvB,CAAC;AALD,wBAKC;AACD,SAAgB,UAAU,CACxB,eAAuB,EACvB,WAEC;IAED,IAAI,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,SAAS,EAAE;QACrD,QAAQ,CAAC,mCAAqB,EAAE,eAAe,EAAE,WAAW,CAAC,CAAC;KAC/D;AACH,CAAC;AATD,gCASC;AAED,SAAS,KAAK,CAAC,GAAQ;IACrB,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;QACrB,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;KACjB;AACH,CAAC;AAID,SAAgB,QAAQ;IACtB,KAAK,CAAC,eAAY,CAAC,CAAC;IACpB,KAAK,CAAC,aAAW,CAAC,CAAC;IACnB,KAAK,CAAC,wBAAgB,CAAC,CAAC;IACxB,KAAK,CAAC,iBAAO,CAAC,CAAC;IACf,KAAK,CAAC,mCAAqB,CAAC,CAAC;AAC/B,CAAC;AAND,4BAMC","file":"register.js","sourcesContent":["import { icons as iconPlugins } from './icons';\nimport { themes as themePlugins } from './themes/themes';\nimport { chartTypes as chartTypePlugins } from './chartModule';\nimport type { ColumnIconOption, ITableThemeDefine } from './ts-types';\nimport type { IEditor } from '@visactor/vtable-editors';\nimport { editors } from './edit/editors';\nimport type { Aggregator } from './ts-types/dataset/aggregation';\nimport { registeredAggregators } from './ts-types/dataset/aggregation';\n\nfunction register(obj: { [key: string]: any }, name: string, value: any): any {\n  const old = obj[name];\n  obj[name] = value;\n  return old;\n}\n\nexport function theme(name: string, theme?: ITableThemeDefine): ITableThemeDefine {\n  if (theme !== null && theme !== undefined) {\n    return register(themePlugins, name, theme);\n  }\n  return themePlugins[name];\n}\nexport function icon(name: string, icon?: ColumnIconOption): ColumnIconOption {\n  if (icon !== null && icon !== undefined) {\n    return register(iconPlugins, name, icon);\n  }\n  return iconPlugins[name];\n}\nexport function chartModule(name: string, chartModule?: any): any {\n  if (chartModule !== null && chartModule !== undefined) {\n    return register(chartTypePlugins, name, chartModule);\n  }\n  return chartTypePlugins[name];\n}\nexport function editor(name: string, editor?: IEditor): IEditor {\n  if (editor !== null && editor !== undefined) {\n    return register(editors, name, editor);\n  }\n  return editors[name];\n}\nexport function aggregator(\n  aggregationType: string,\n  aggregation: {\n    new (args: { key: string; field: string; formatFun?: any }): Aggregator;\n  }\n) {\n  if (aggregation !== null && aggregation !== undefined) {\n    register(registeredAggregators, aggregationType, aggregation);\n  }\n}\n// 清理注册的全局theme icon chartModule\nfunction clear(obj: any) {\n  for (const key in obj) {\n    delete obj[key];\n  }\n}\n/**\n * 清理注册的全局theme icon chartModule\n */\nexport function clearAll() {\n  clear(themePlugins);\n  clear(iconPlugins);\n  clear(chartTypePlugins);\n  clear(editors);\n  clear(registeredAggregators);\n}\n"]}