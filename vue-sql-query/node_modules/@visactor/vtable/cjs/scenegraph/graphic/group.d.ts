import type { IRect, INode } from './../../vrender';
import { Group as VRenderGroup } from './../../vrender';
import { type AABBBounds } from '@visactor/vutils';
export declare class Group extends VRenderGroup {
    role?: string;
    col?: number;
    row?: number;
    mergeStartCol?: number;
    mergeStartRow?: number;
    mergeEndCol?: number;
    mergeEndRow?: number;
    contentWidth?: number;
    contentHeight?: number;
    rowNumber?: number;
    colHeight?: number;
    border?: IRect;
    needUpdate?: boolean;
    needUpdateWidth?: boolean;
    needUpdateHeight?: boolean;
    clear(): void;
    getChildByName(name: string, deep?: boolean): any;
    get width(): number;
    get height(): number;
    setDeltaWidth(deltaX: number): void;
    setDeltaHeight(deltaY: number): void;
    setDeltaX(deltaX: number): void;
    setDeltaY(deltaY: number): void;
    forEachChildrenSkipChild<T extends INode = INode>(cb: (item: T, index: number) => void | boolean, skipChildName?: string, reverse?: boolean): void;
    getColGroup(col: number): Group;
    getRowGroup(row: number): Group;
    addCellGroup(cellGroup: Group): void;
    getChildAt(index: number): INode;
    protected tryUpdateAABBBounds(): AABBBounds;
    protected doUpdateAABBBounds(): any;
    updateColumnRowNumber(row: number): void;
    updateColumnHeight(cellHeight: number): void;
}
