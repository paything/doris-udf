{"version":3,"sources":["../src/scenegraph/graphic/contributions/text-contribution-render.ts"],"names":[],"mappings":"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","file":"text-contribution-render.js","sourcesContent":["import type {\n  IContext2d,\n  IDrawContext,\n  IGraphicAttribute,\n  IMarkAttribute,\n  IText,\n  ITextGraphicAttribute,\n  ITextRenderContribution,\n  IThemeAttribute\n} from './../../../vrender';\nimport {\n  BaseRenderContributionTime,\n  calculateLineHeight,\n  injectable,\n  textDrawOffsetX,\n  textLayoutOffsetY\n} from './../../../vrender';\nimport { isString } from '@visactor/vutils';\nimport { textMeasure } from '../../utils/text-measure';\n\n@injectable()\nexport class SuffixTextBeforeRenderContribution implements ITextRenderContribution {\n  time: BaseRenderContributionTime = BaseRenderContributionTime.afterFillStroke;\n  useStyle: boolean = true;\n  order: number = 0;\n  drawShape(\n    text: IText,\n    context: IContext2d,\n    x: number,\n    y: number,\n    doFill: boolean,\n    doStroke: boolean,\n    fVisible: boolean,\n    sVisible: boolean,\n    textAttribute: Required<ITextGraphicAttribute>,\n    drawContext: IDrawContext,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    doFillOrStroke?: { doFill: boolean; doStroke: boolean }\n  ) {\n    const {\n      text: str,\n      underline = textAttribute.underline,\n      lineThrough = textAttribute.lineThrough,\n      direction = textAttribute.direction,\n      // lineHeight = textAttribute.lineHeight,\n      whiteSpace = textAttribute.whiteSpace,\n      fontSize = textAttribute.fontSize,\n      verticalMode = textAttribute.verticalMode,\n      ellipsis = textAttribute.ellipsis,\n      textAlign = textAttribute.textAlign,\n      textBaseline = textAttribute.textBaseline,\n      x: originX = textAttribute.x,\n      y: originY = textAttribute.y\n    } = text.attribute;\n\n    let isEmpty: boolean = false;\n    if (Array.isArray(text)) {\n      const layoutData = text.cache?.layoutData;\n      if (ellipsis && layoutData && layoutData.lines.every(line => line.str === '')) {\n        isEmpty = true;\n      }\n    } else {\n      const { cache } = text;\n      if (ellipsis && cache && cache.clipedText === '' && cache.clipedWidth === 0) {\n        isEmpty = true;\n      }\n    }\n\n    if (!isEmpty) {\n      return;\n    }\n\n    const textStr = isString(ellipsis) ? ellipsis : '...';\n    const lineHeight = calculateLineHeight(text.attribute.lineHeight, fontSize) ?? fontSize;\n\n    let dy = 0;\n    if (lineHeight !== fontSize) {\n      if (textBaseline === 'top') {\n        dy = (lineHeight - fontSize) / 2;\n      } else if (textBaseline === 'middle') {\n        // middle do nothing\n      } else if (textBaseline === 'bottom') {\n        dy = -(lineHeight - fontSize) / 2;\n      } else {\n        // alphabetic do nothing\n        // dy = (lineHeight - fontSize) / 2 - fontSize * 0.79;\n      }\n    }\n    if (doStroke) {\n      if (strokeCb) {\n        strokeCb(context, text.attribute, textAttribute);\n      } else if (sVisible) {\n        context.setStrokeStyle(text, text.attribute, originX - x, originY - y, textAttribute);\n        context.strokeText(textStr, originX, originY + dy);\n      }\n    }\n    if (doFill) {\n      if (fillCb) {\n        fillCb(context, text.attribute, textAttribute);\n      } else if (fVisible) {\n        context.setCommonStyle(text, text.attribute, originX - x, originY - y, textAttribute);\n        context.fillText(textStr, originX, originY + dy);\n        this.drawUnderLine(underline, lineThrough, text, originX, originY + dy, 0, textAttribute, context, textStr);\n      }\n    }\n  }\n\n  drawUnderLine(\n    underline: number,\n    lineThrough: number,\n    text: IText,\n    x: number,\n    y: number,\n    z: number,\n    textAttribute: Required<ITextGraphicAttribute>,\n    context: IContext2d,\n    textStr: string\n  ) {\n    if (lineThrough + underline <= 0) {\n      return;\n    }\n\n    const {\n      textAlign = textAttribute.textAlign,\n      textBaseline = textAttribute.textBaseline,\n      fontSize = textAttribute.fontSize,\n      fontFamily = textAttribute.fontFamily,\n      fontWeight = textAttribute.fontWeight,\n      fontStyle = textAttribute.fontStyle,\n      fill = textAttribute.fill,\n      opacity = textAttribute.opacity,\n      underlineOffset = textAttribute.underlineOffset,\n      underlineDash = textAttribute.underlineDash,\n      fillOpacity = textAttribute.fillOpacity\n    } = text.attribute;\n\n    if (!underline && !lineThrough) {\n      return;\n    }\n    // const w = text.clipedWidth;\n    const w = textMeasure.measureTextWidth(textStr, {\n      fontSize,\n      fontFamily,\n      fontWeight,\n      fontStyle\n    });\n    const offsetX = textDrawOffsetX(textAlign, w);\n    const offsetY = textLayoutOffsetY(textBaseline, fontSize, fontSize);\n    const attribute = { lineWidth: 0, stroke: fill, opacity, strokeOpacity: fillOpacity };\n    if (underline) {\n      attribute.lineWidth = underline;\n      context.setStrokeStyle(text, attribute, x, y, textAttribute);\n      context.setLineDash(underlineDash);\n      context.beginPath();\n      const dy = y + offsetY + fontSize + underlineOffset;\n      context.moveTo(x + offsetX, dy, z);\n      context.lineTo(x + offsetX + w, dy, z);\n      context.stroke();\n    }\n    if (lineThrough) {\n      attribute.lineWidth = lineThrough;\n      context.setStrokeStyle(text, attribute, x, y, textAttribute);\n      context.beginPath();\n      const dy = y + offsetY + fontSize / 2;\n      context.moveTo(x + offsetX, dy, z);\n      context.lineTo(x + offsetX + w, dy, z);\n      context.stroke();\n    }\n  }\n}\n"]}