{"version":3,"sources":["../src/scenegraph/graphic/chart.ts"],"names":[],"mappings":"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","file":"chart.js","sourcesContent":["import type { GraphicType, IGroupGraphicAttribute, Stage, Group } from './../../vrender';\nimport { genNumberType, Rect } from './../../vrender';\nimport { Bounds, merge } from '@visactor/vutils';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport type { PivotChart } from '../../PivotChart';\n\ninterface IChartGraphicAttribute extends IGroupGraphicAttribute {\n  canvas: HTMLCanvasElement;\n  dataId: string | Record<string, string>; //如果是spec外层的dataId,则是string,否则通过series获取到的是Record<string, string> <dataId, series-chart的指标key用于过滤数据>\n  data: any;\n  spec: any;\n  axes: any;\n  ClassType: any;\n  chartInstance: any;\n  cellPadding: number[];\n  mode: string;\n  modeParams: any;\n  dpr: number;\n  // viewBox: {\n  //   x1: number;\n  //   y1: number;\n  //   x2: number;\n  //   y2: number;\n  // };\n  tableChartOption: any;\n  col?: number;\n  row?: number;\n}\n\nexport const CHART_NUMBER_TYPE = genNumberType();\n\nexport class Chart extends Rect {\n  type: GraphicType = 'chart' as any;\n  declare attribute: IChartGraphicAttribute;\n  chartInstance: any;\n  activeChartInstance: any;\n  active: boolean;\n  cacheCanvas: HTMLCanvasElement | { x: number; y: number; width: number; height: number; canvas: HTMLCanvasElement }[]; // HTMLCanvasElement\n  isShareChartSpec: boolean; //针对chartSpec用户配置成函数形式的话 就不需要存储chartInstance了 会太占内存，使用这个变量 当渲染出缓存图表会就删除chartInstance实例\n  constructor(isShareChartSpec: boolean, params: IChartGraphicAttribute) {\n    super(params);\n    this.numberType = CHART_NUMBER_TYPE;\n    this.isShareChartSpec = isShareChartSpec;\n    // 创建chart\n    if (!params.chartInstance) {\n      const chartInstance = (this.chartInstance = new params.ClassType(\n        params.spec,\n        merge({}, this.attribute.tableChartOption, {\n          renderCanvas: params.canvas,\n          mode: this.attribute.mode === 'node' ? 'node' : 'desktop-browser',\n          modeParams: this.attribute.modeParams,\n          canvasControled: false,\n          viewBox: { x1: 0, x2: 0, y1: 0, y2: 0 },\n          dpr: params.dpr,\n          // viewBox: params.viewBox,\n          // viewBox: this.getViewBox(),\n          // viewBox: {\n          //   x1: params.cellPadding[3],\n          //   x2: params.width - params.cellPadding[1],\n          //   y1: params.cellPadding[0],\n          //   y2: params.height - params.cellPadding[2]\n          // },\n          interactive: false,\n          animation: false,\n          autoFit: false\n        })\n      ));\n      chartInstance.renderSync();\n      chartInstance.getStage().enableDirtyBounds();\n      params.chartInstance = this.chartInstance = chartInstance;\n    } else {\n      this.chartInstance = params.chartInstance;\n    }\n\n    // this.chart.load().then((cache) => {\n    //   this.cacheCanvas = cache;\n    //   this.deactivate();\n    // });\n  }\n\n  // onBeforeAttributeUpdate() {\n  //   if (arguments[2] === y) {\n  //     debugger;\n  //   }\n  // }\n  /**\n   * 激活该图表元素\n   * @param table\n   */\n  activate(table: BaseTableAPI) {\n    this.active = true;\n    const { col, row } = this.parent;\n    // this.chart = new TestChart(this.attribute.spec);\n    // const ctx = this.attribute.canvas.getContext('2d');\n    // const { x1, y1, x2, y2 } = this.attribute.viewBox;\n    const { x1, y1, x2, y2 } = this.getViewBox();\n    //获取渲染区域的bound 考虑被表头遮住部分的情况\n    const tableBound = getTableBounds(col, row, table);\n    const clipBound = tableBound.intersect({\n      x1: x1 - table.scrollLeft,\n      x2: x2 - table.scrollLeft,\n      y1: y1 - table.scrollTop,\n      y2: y2 - table.scrollTop\n    });\n    this.activeChartInstance?.release();\n    this.activeChartInstance = new this.attribute.ClassType(\n      this.attribute.spec,\n      merge({}, this.attribute.tableChartOption, {\n        // disableDirtyBounds: true,\n        renderCanvas: this.attribute.canvas,\n        mode: 'desktop-browser',\n        canvasControled: false,\n        // viewBox: {\n        //   x1: x1 - table.scrollLeft,\n        //   x2: x2 - table.scrollLeft,\n        //   y1: y1 - table.scrollTop,\n        //   y2: y2 - table.scrollTop\n        // },\n        viewBox: {\n          x1: 0,\n          x2: x2 - x1,\n          y1: 0,\n          y2: y2 - y1\n        },\n        dpr: table.internalProps.pixelRatio,\n        animation: false,\n        interactive: true,\n        autoFit: false, //控制当容器变化大小时vchart实例不应响应事件进行内部处理\n        beforeRender: (chartStage: Stage) => {\n          const stage = this.stage;\n          const ctx = chartStage.window.getContext();\n          const stageMatrix = stage.window.getViewBoxTransform();\n          const viewBox = stage.window.getViewBox();\n          ctx.inuse = true;\n          // ctx.save();\n          // console.log(ctx.getImageData(0, 0, 100, 100));\n          ctx.clearMatrix();\n          ctx.setTransform(\n            stageMatrix.a,\n            stageMatrix.b,\n            stageMatrix.c,\n            stageMatrix.d,\n            stageMatrix.e,\n            stageMatrix.f,\n            true\n          );\n          ctx.translate(viewBox.x1, viewBox.y1);\n          ctx.setTransformForCurrent(true); // 替代原有的chart viewBox\n          ctx.beginPath();\n          ctx.rect(clipBound.x1, clipBound.y1, clipBound.x2 - clipBound.x1, clipBound.y2 - clipBound.y1);\n          ctx.clip();\n          ctx.clearMatrix();\n\n          if (table.options.canvas && !(chartStage as any).needRender) {\n            // 在使用viewbox局部渲染时，activate单独渲染chart stage，可能导致外部stage场景层级错乱\n            // 此时触发整个表格的重绘，外部stage场景可以通过table的beforeRender配置触发更上一级的重绘\n            chartStage.pauseRender();\n            table.scenegraph.stage.dirtyBounds.union(this.globalAABBBounds);\n            table.scenegraph.updateNextFrame();\n          }\n        },\n        afterRender(stage: any) {\n          const ctx = stage.window.getContext();\n          ctx.inuse = false;\n\n          stage.needRender = false;\n          chartStage.resumeRender();\n        }\n      })\n    );\n    const chartStage = this.activeChartInstance.getStage();\n    // chartStage.needRender = true;\n    // chartStage.background = 'red';\n    const matrix = this.globalTransMatrix.clone();\n    const stageMatrix = this.stage.window.getViewBoxTransform();\n    matrix.multiply(stageMatrix.a, stageMatrix.b, stageMatrix.c, stageMatrix.d, stageMatrix.e, stageMatrix.f);\n    chartStage.window.setViewBoxTransform &&\n      chartStage.window.setViewBoxTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f);\n\n    // this.activeChartInstance.updateData('data', this.attribute.data);\n    this.activeChartInstance.renderSync();\n\n    (table.internalProps.layoutMap as any)?.updateDataStateToActiveChartInstance?.(this.activeChartInstance);\n    this.activeChartInstance.on('click', (params: any) => {\n      if (this.attribute.spec.select?.enable === false) {\n        table.scenegraph.updateChartState(null);\n      } else if (Chart.temp) {\n        table.scenegraph.updateChartState(params?.datum);\n      }\n    });\n    this.activeChartInstance.on('brushEnd', (params: any) => {\n      table.scenegraph.updateChartState(params?.value?.inBrushData);\n      Chart.temp = 0;\n      setTimeout(() => {\n        Chart.temp = 1;\n      }, 0);\n    });\n    (table as PivotChart)._bindChartEvent?.(this.activeChartInstance);\n  }\n  static temp: number = 1;\n  /**\n   * 图表失去焦点\n   * @param table\n   */\n  deactivate() {\n    this.active = false;\n    // move active chart view box out of browser view\n    // to avoid async render when chart is releasd\n    this.activeChartInstance?.updateViewBox(\n      {\n        x1: -1000,\n        x2: -800,\n        y1: -1000,\n        y2: -800\n      },\n      false,\n      false\n    );\n    this.activeChartInstance?.release();\n    this.activeChartInstance = null;\n  }\n  /** 更新图表对应数据 */\n  updateData(data: any) {\n    this.attribute.data = data;\n  }\n\n  getViewBox(): {\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n  } {\n    const cellGroup = this.parent as Group;\n    const padding = this.attribute.cellPadding;\n    const table = (this.stage as any).table as BaseTableAPI;\n\n    const { x1, y1, x2, y2 } = cellGroup.globalAABBBounds;\n\n    return {\n      x1: Math.ceil(x1 + padding[3] + table.scrollLeft + (table.options.viewBox?.x1 ?? 0)),\n      x2: Math.ceil(x1 + cellGroup.attribute.width - padding[1] + table.scrollLeft + (table.options.viewBox?.x1 ?? 0)),\n      y1: Math.ceil(y1 + padding[0] + table.scrollTop + (table.options.viewBox?.y1 ?? 0)),\n      y2: Math.ceil(y1 + cellGroup.attribute.height - padding[2] + table.scrollTop + (table.options.viewBox?.y1 ?? 0))\n    };\n  }\n}\n\nfunction getTableBounds(col: number, row: number, table: BaseTableAPI) {\n  const { layoutMap } = table.internalProps;\n  const bodyBound = new Bounds();\n  const tableBound = table.scenegraph.tableGroup.globalAABBBounds;\n  bodyBound.x1 = tableBound.x1;\n  bodyBound.x2 = tableBound.x2;\n  bodyBound.y1 = tableBound.y1;\n  bodyBound.y2 = tableBound.y2;\n  if (\n    layoutMap.isLeftBottomCorner(col, row) ||\n    layoutMap.isRightTopCorner(col, row) ||\n    layoutMap.isLeftTopCorner(col, row) ||\n    layoutMap.isRightBottomCorner(col, row)\n  ) {\n    // frozen cornor\n  } else if (layoutMap.isFrozenColumn(col, row)) {\n    // left frozen\n    bodyBound.y1 = tableBound.y1 + table.getFrozenRowsHeight();\n    bodyBound.y2 = tableBound.y2 - table.getBottomFrozenRowsHeight();\n  } else if (layoutMap.isFrozenRow(col, row)) {\n    // top frozen\n    bodyBound.x1 = tableBound.x1 + table.getFrozenColsWidth();\n    bodyBound.x2 = tableBound.x2 - table.getRightFrozenColsWidth();\n  } else if (layoutMap.isRightFrozenColumn(col, row)) {\n    // right frozen\n    bodyBound.y1 = tableBound.y1 + table.getFrozenRowsHeight();\n    bodyBound.y2 = tableBound.y2 - table.getBottomFrozenRowsHeight();\n  } else if (layoutMap.isBottomFrozenRow(col, row)) {\n    // bottom frozen\n    bodyBound.x1 = tableBound.x1 + table.getFrozenColsWidth();\n    bodyBound.x2 = tableBound.x2 - table.getRightFrozenColsWidth();\n  } else if (!layoutMap.isFrozenColumn(col, row) && !layoutMap.isRightFrozenColumn(col, row)) {\n    // no frozen body\n    bodyBound.x1 = tableBound.x1 + table.getFrozenColsWidth();\n    bodyBound.x2 = tableBound.x2 - table.getRightFrozenColsWidth();\n    bodyBound.y1 = tableBound.y1 + table.getFrozenRowsHeight();\n    bodyBound.y2 = tableBound.y2 - table.getBottomFrozenRowsHeight();\n  }\n\n  bodyBound.x1 = bodyBound.x1 + (table.options.viewBox?.x1 ?? 0);\n  bodyBound.x2 = bodyBound.x2 + (table.options.viewBox?.x1 ?? 0);\n  bodyBound.y1 = bodyBound.y1 + (table.options.viewBox?.y1 ?? 0);\n  bodyBound.y2 = bodyBound.y2 + (table.options.viewBox?.y1 ?? 0);\n\n  return bodyBound;\n}\n"]}