{"version":3,"sources":["../src/scenegraph/graphic/group.ts"],"names":[],"mappings":"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","file":"group.js","sourcesContent":["import type { IGraphic, IColor, IRect, INode, IGroupGraphicAttribute, ISetAttributeContext } from './../../vrender';\nimport { Group as VRenderGroup } from './../../vrender';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport { InteractionState } from '../../ts-types';\nimport { isNumber, type AABBBounds } from '@visactor/vutils';\n\nexport class Group extends VRenderGroup {\n  role?: string;\n  col?: number;\n  row?: number;\n  mergeStartCol?: number;\n  mergeStartRow?: number;\n  mergeEndCol?: number;\n  mergeEndRow?: number;\n  contentWidth?: number;\n  contentHeight?: number;\n  rowNumber?: number; // row number of the column group\n  colHeight?: number; // current height of the column group\n  border?: IRect; // table/header/body的border mark，挂载在这里方便更新\n  needUpdate?: boolean;\n\n  needUpdateWidth?: boolean;\n  needUpdateHeight?: boolean;\n\n  // changes for size align for fs\n  // constructor(attribute?: IGroupGraphicAttribute) {\n  //   dealWidthSize(attribute, attribute);\n  //   super(attribute);\n  // }\n\n  // setAttribute(key: string, value: any, forceUpdateTag?: boolean, context?: ISetAttributeContext): void {\n  //   if (key === 'x' || key === 'y' || key === 'width' || key === 'height') {\n  //     this.attribute[`old${key}`];\n  //   }\n  //   const values = {\n  //     [key]: value\n  //   };\n  //   this.setAttributes(values, forceUpdateTag, context);\n  // }\n\n  // setAttributes(\n  //   params: Partial<IGroupGraphicAttribute>,\n  //   forceUpdateTag?: boolean,\n  //   context?: ISetAttributeContext\n  // ): void {\n  //   dealWidthSize(params, this.attribute);\n  //   super.setAttributes(params, forceUpdateTag, context);\n  // }\n\n  /**\n   * @description: 清空Group下全部子元素\n   * @return {*}\n   */\n  clear() {\n    this.removeAllChild();\n  }\n\n  getChildByName(name: string, deep?: boolean): any {\n    // for (let i = 0, j = this.children.length; i < j; i++) {\n    //   if (this.children[i].name === name) {\n    //     return this.children[i] as unknown as T;\n    //   }\n    // }\n    let result = null;\n    this.forEachChildren((child: IGraphic) => {\n      if (child.name === name) {\n        result = child;\n        return true; // 提前退出循环\n      }\n      return false;\n    });\n\n    if (deep) {\n      // for (let i = 0, j = this.children.length; i < j; i++) {\n      //   const child = this.children[i] as Group;\n\n      //   if (!child.getChildByName) {\n      //     continue;\n      //   }\n\n      //   const target = child.getChildByName(name, true);\n\n      //   if (target) {\n      //     return target;\n      //   }\n      // }\n      this.forEachChildren((child: IGraphic) => {\n        if ((child as Group).getChildByName) {\n          const target = (child as Group).getChildByName(name, true);\n          if (target) {\n            result = target;\n            return true;\n          }\n        }\n        return false;\n      });\n    }\n\n    return result;\n  }\n\n  get width() {\n    let width = this.AABBBounds.width();\n    if (width === Infinity || width === -Infinity) {\n      width = 0;\n    }\n    return Math.max(width, this.attribute.width ?? 0);\n  }\n\n  get height() {\n    let height = this.AABBBounds.height();\n    if (height === Infinity || height === -Infinity) {\n      height = 0;\n    }\n    return Math.max(height, this.attribute.height ?? 0);\n  }\n\n  setDeltaWidth(deltaX: number) {\n    if (deltaX === 0) {\n      return;\n    }\n    this.setAttribute('width', (this.attribute.width ?? 0) + deltaX);\n    if (this.border) {\n      this.border.setAttribute('width', this.border.attribute.width + deltaX);\n\n      if (this.border.type === 'group') {\n        (this.border.firstChild as IRect).setAttribute(\n          'width',\n          (this.border.firstChild as IRect).attribute.width + deltaX\n        );\n      }\n    }\n  }\n\n  setDeltaHeight(deltaY: number) {\n    if (deltaY === 0) {\n      return;\n    }\n    this.setAttribute('height', (this.attribute.height ?? 0) + deltaY);\n    if (this.border) {\n      this.border.setAttribute('height', this.border.attribute.height + deltaY);\n      if (this.border.type === 'group') {\n        (this.border.firstChild as IRect).setAttribute(\n          'width',\n          (this.border.firstChild as IRect).attribute.height + deltaY\n        );\n      }\n    }\n  }\n\n  setDeltaX(deltaX: number) {\n    if (deltaX === 0) {\n      return;\n    }\n    this.setAttribute('x', this.attribute.x + deltaX);\n  }\n\n  setDeltaY(deltaY: number) {\n    if (deltaY === 0) {\n      return;\n    }\n    this.setAttribute('y', this.attribute.y + deltaY);\n  }\n\n  /**\n   * @description: 遍历所有子节点，跳过部分节点，默认跳过group的border\n   * @return {*}\n   */\n  forEachChildrenSkipChild<T extends INode = INode>(\n    cb: (item: T, index: number) => void | boolean,\n    skipChildName = 'border-rect',\n    reverse = false\n  ) {\n    if (reverse) {\n      let child = this._lastChild;\n      let i = 0;\n      while (child) {\n        if (child.name !== skipChildName) {\n          const breakTag = cb(child as T, i++);\n          if (breakTag) {\n            return;\n          }\n        }\n        child = child._prev;\n      }\n    } else {\n      let child = this._firstChild;\n      let i = 0;\n      while (child) {\n        if (child.name !== skipChildName) {\n          const breakTag = cb(child as T, i++);\n          if (breakTag) {\n            return;\n          }\n        }\n        child = child._next;\n      }\n    }\n  }\n\n  getColGroup(col: number) {\n    let c = this._firstChild as Group;\n    if (!c) {\n      return null;\n    }\n    for (let i = 0; i < this.childrenCount; i++) {\n      if (c.col === col) {\n        return c;\n      }\n      c = c._next as Group;\n    }\n    return null;\n  }\n\n  getRowGroup(row: number) {\n    let c = this._firstChild as Group;\n    if (!c) {\n      return null;\n    }\n    for (let i = 0; i < this.childrenCount; i++) {\n      if (c.row === row) {\n        return c;\n      }\n      c = c._next as Group;\n    }\n    return null;\n  }\n\n  addCellGroup(cellGroup: Group) {\n    if (this.childrenCount === 0 || (this.lastChild as Group).row === cellGroup.row - 1) {\n      this.addChild(cellGroup);\n    } else {\n      // for promise cell row order in column\n      let c = this._firstChild as Group;\n      for (let i = 0; i < this.childrenCount; i++) {\n        if (c.row === cellGroup.row - 1) {\n          this.insertAfter(cellGroup, c);\n          return;\n        }\n        c = c._next as Group;\n      }\n      this.addChild(cellGroup);\n    }\n  }\n\n  getChildAt(index: number) {\n    const child = super.getChildAt(index);\n    if (child && child.name === 'border-rect') {\n      return child._next;\n    }\n    return child;\n  }\n\n  protected tryUpdateAABBBounds(): AABBBounds {\n    if (this.role === 'cell') {\n      if (!this.shouldUpdateAABBBounds()) {\n        return this._AABBBounds as AABBBounds;\n      }\n      // application.graphicService.beforeUpdateAABBBounds(this, this.stage, true, this._AABBBounds);\n      const selfChange = this.shouldSelfChangeUpdateAABBBounds();\n      // const selfChange = true;\n      const bounds = this.doUpdateAABBBounds();\n      this.addUpdateLayoutTag();\n      // application.graphicService.afterUpdateAABBBounds(this, this.stage, this._AABBBounds, this, selfChange);\n      after(this, selfChange);\n\n      return bounds;\n    }\n    return super.tryUpdateAABBBounds() as AABBBounds;\n  }\n\n  // 目前优化方案会导致合并单元格无法正常更新列宽（因为合并单元格更新bounds不会触发父节点bounds更新），暂时关闭优化方案\n  // shouldUpdateAABBBoundsForRowMerge(): boolean {\n\n  // }\n\n  // shouldUpdateAABBBounds(): boolean {\n  //   return this.shouldSelfChangeUpdateAABBBounds();\n  //   // // 检索自己是否需要更新\n  //   // if (super.shouldUpdateAABBBounds()) {\n  //   //   return true;\n  //   // }\n  //   // // 检索叶子节点是否有更新（如果children是叶子节点的话）\n  //   // if (this._childUpdateTag & UpdateTag.UPDATE_BOUNDS) {\n  //   //   return true;\n  //   // }\n  //   // // 检索是否子group需要更新\n  //   // let needUpdate = false;\n  //   // this.forEachChildren((node: IGraphic) => {\n  //   //   // 只查找group层级\n  //   //   if (node.isContainer && (node as Group).shouldUpdateAABBBounds()) {\n  //   //     needUpdate = true;\n  //   //     return true;\n  //   //   }\n  //   //   return false;\n  //   // });\n  //   // return needUpdate;\n  // }\n\n  protected doUpdateAABBBounds(): any {\n    // const groupTheme = getTheme(this).group;\n    // debugger;\n    if (this.role === 'cell') {\n      const attribute = this.attribute;\n      const { x, y, width, height } = attribute;\n      this._AABBBounds.setValue(x, y, x + width, y + height);\n      // 更新bounds之后需要设置父节点，否则tag丢失\n      this.parent && this.parent.addChildUpdateBoundTag();\n      this.clearUpdateBoundTag();\n      if (this.shadowRoot) {\n        // this.shadowRoot.clearUpdateBoundTag();\n        this.shadowRoot.tryUpdateAABBBounds();\n      }\n      return this._AABBBounds;\n    } else if (\n      this.role === 'body' ||\n      this.role === 'row-header' ||\n      this.role === 'col-header' ||\n      this.role === 'right-frozen' ||\n      this.role === 'bottom-frozen' ||\n      this.role === 'corner-header' ||\n      this.role === 'corner-right-top-header' ||\n      this.role === 'corner-right-bottom-header' ||\n      this.role === 'corner-left-bottom-header'\n    ) {\n      // Infinity bounds for manual clip group\n      this._AABBBounds.setValue(-Infinity, -Infinity, Infinity, Infinity);\n      // 更新bounds之后需要设置父节点，否则tag丢失\n      this.parent && this.parent.addChildUpdateBoundTag();\n      this.clearUpdateBoundTag();\n\n      if (this.shadowRoot) {\n        // this.shadowRoot.clearUpdateBoundTag();\n        this.shadowRoot.tryUpdateAABBBounds();\n      }\n      return this._AABBBounds;\n    }\n    return super.doUpdateAABBBounds();\n    // _AABBBounds\n    // const bounds = graphicService.updateGroupAABBBounds(\n    //   attribute,\n    //   getTheme(this).group,\n    //   this._AABBBounds,\n    //   this\n    // ) as AABBBounds;\n\n    // const { boundsPadding = groupTheme.boundsPadding } = attribute;\n    // const paddingArray = parsePadding(boundsPadding);\n    // if (paddingArray) {\n    //   bounds.expand(paddingArray);\n    // }\n    // // 更新bounds之后需要设置父节点，否则tag丢失\n    // this.parent && this.parent.addChildUpdateBoundTag();\n    // this.clearUpdateBoundTag();\n\n    // this.emit('AAABBBoundsChange');\n  }\n\n  // update column group row number\n  updateColumnRowNumber(row: number) {\n    if (!this.rowNumber) {\n      this.rowNumber = row;\n    } else {\n      this.rowNumber = Math.max(this.rowNumber, row);\n    }\n  }\n\n  // update column height\n  updateColumnHeight(cellHeight: number) {\n    if (!this.colHeight) {\n      this.colHeight = cellHeight;\n    } else {\n      this.colHeight += cellHeight;\n    }\n  }\n\n  // doUpdateLocalMatrix() {\n  //   const oldX = this.attribute.x;\n  //   const oldY = this.attribute.y;\n  //   this.attribute.x = Math.floor(this.attribute.x);\n  //   this.attribute.y = Math.floor(this.attribute.y);\n  //   super.doUpdateLocalMatrix();\n  //   this.attribute.x = oldX;\n  //   this.attribute.y = oldY;\n  // }\n}\n\nfunction after(group: Group, selfChange: boolean) {\n  if (!group.stage || !group.stage.dirtyBounds || !group.stage.renderCount) {\n    return;\n  }\n  // group的子元素导致的bounds更新不用做dirtyBounds\n  if (group.isContainer && !selfChange) {\n    return;\n  }\n  group.stage.dirty(group.globalAABBBounds);\n}\n\n// function dealWidthSize(values: any, attributes: any) {\n//   const x = values.x ?? attributes.oldx ?? attributes.x ?? 0 + values.dx ?? attributes.dx ?? 0;\n//   const y = values.y ?? attributes.oldy ?? attributes.y ?? 0 + values.dy ?? attributes.dy ?? 0;\n//   const width = values.width ?? attributes.oldwidth ?? attributes.width ?? 0;\n//   const height = values.height ?? attributes.oldheight ?? attributes.height ?? 0;\n//   isNumber(values.width) && (values.oldwidth = values.width);\n//   isNumber(values.height) && (values.oldheight = values.height);\n//   isNumber(values.x) && (values.oldx = values.x);\n//   isNumber(values.y) && (values.oldy = values.y);\n\n//   if (Math.floor(x + width) > Math.floor(width) + Math.floor(x)) {\n//     values.width = Math.ceil(width);\n//   } else {\n//     values.width = Math.floor(width);\n//   }\n\n//   if (Math.floor(y + height) > Math.floor(height) + Math.floor(y)) {\n//     values.height = Math.ceil(height);\n//   } else {\n//     values.height = Math.floor(height);\n//   }\n//   isNumber(values.x) && (values.x = Math.floor(values.x));\n//   isNumber(values.y) && (values.y = Math.floor(values.y));\n// }\n"]}