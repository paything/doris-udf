{"version":3,"sources":["../src/scenegraph/group-creater/progress/update-position/dynamic-set-x.ts"],"names":[],"mappings":"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","file":"dynamic-set-x.js","sourcesContent":["import type { ColumnInfo } from '../../../../ts-types';\nimport type { BaseTableAPI } from '../../../../ts-types/base-table';\nimport type { IRect } from '../../../../vrender';\nimport type { Group } from '../../../graphic/group';\nimport { computeColsWidth } from '../../../layout/compute-col-width';\nimport type { SceneProxy } from '../proxy';\nimport { updateAutoColumn } from './update-auto-column';\nimport { checkFirstColMerge, getFirstChild, getLastChild } from './util';\n\nexport async function dynamicSetX(x: number, screenLeft: ColumnInfo | null, isEnd: boolean, proxy: SceneProxy) {\n  if (!screenLeft) {\n    return;\n  }\n  const screenLeftCol = screenLeft.col;\n  const screenLeftX = screenLeft.left;\n\n  let deltaCol;\n  if (isEnd) {\n    deltaCol = proxy.bodyRightCol - proxy.colEnd;\n  } else {\n    deltaCol = proxy.screenLeftCol - proxy.referenceCol;\n  }\n  // const deltaCol = proxy.screenLeftCol - proxy.referenceCol;\n  move(deltaCol, screenLeftCol, screenLeftX, x, proxy);\n\n  if (isEnd) {\n    const colGroup = proxy.table.scenegraph.getColGroup(proxy.colEnd);\n    if (colGroup) {\n      const deltaX =\n        colGroup.attribute.x +\n        colGroup.attribute.width -\n        (proxy.table.tableNoFrameWidth - proxy.table.getFrozenColsWidth() - proxy.table.getRightFrozenColsWidth()) -\n        x;\n      proxy.deltaX = -deltaX;\n      proxy.table.scenegraph.setBodyAndColHeaderX(-x + proxy.deltaX);\n    }\n  }\n\n  proxy.table.scenegraph.updateNextFrame();\n}\n\nfunction move(deltaCol: number, screenLeftCol: number, screenLeftX: number, x: number, proxy: SceneProxy) {\n  if (deltaCol > 0) {\n    // 向右滚动，左部column group移到右部\n    moveColumn(deltaCol, 'left', proxy.screenLeftCol, screenLeftX, x, proxy);\n    proxy.updateDeltaX(x, screenLeftX, screenLeftCol);\n    proxy.table.scenegraph.setBodyAndColHeaderX(-x + proxy.deltaX);\n  } else if (deltaCol < 0) {\n    // 向左滚动，右部cell group移到左部\n    moveColumn(-deltaCol, 'right', proxy.screenLeftCol, screenLeftX, x, proxy);\n    proxy.updateDeltaX(x, screenLeftX, screenLeftCol);\n    proxy.table.scenegraph.setBodyAndColHeaderX(-x + proxy.deltaX);\n  } else {\n    // 不改变row，更新body group范围\n    proxy.updateDeltaX(x, screenLeftX, screenLeftCol);\n    proxy.table.scenegraph.setBodyAndColHeaderX(-x + proxy.deltaX);\n  }\n}\n\nasync function moveColumn(\n  count: number,\n  direction: 'left' | 'right',\n  screenLeftCol: number,\n  screenLeftX: number,\n  x: number,\n  proxy: SceneProxy\n) {\n  // 限制count范围\n  if (direction === 'left' && proxy.colEnd + count > proxy.bodyRightCol) {\n    count = proxy.bodyRightCol - proxy.colEnd;\n  } else if (direction === 'right' && proxy.colStart - count < proxy.bodyLeftCol) {\n    count = proxy.colStart - proxy.bodyLeftCol;\n  }\n  if (count === 0) {\n    return;\n  }\n  if (count < 0) {\n    direction = direction === 'left' ? 'right' : 'left';\n    count = -count;\n  }\n  // 两种更新模式\n  // 1. count < colEnd - colStart：从顶/底部移动count数量的单元格到底/顶部\n  // 2. count >= colEnd - colStart：整体移动到目标位置\n  if (count < proxy.colEnd - proxy.colStart) {\n    // 计算更新区域\n    const startCol = direction === 'left' ? proxy.colStart : proxy.colEnd - count + 1;\n    const endCol = direction === 'left' ? proxy.colStart + count - 1 : proxy.colEnd;\n    const distStartCol = direction === 'left' ? proxy.colEnd + 1 : proxy.colStart - count;\n    const distEndCol = direction === 'left' ? proxy.colEnd + count : proxy.colStart - 1;\n    // update column width\n    computeColsWidth(proxy.table, distStartCol, distEndCol);\n    updatePartColPosition(startCol, endCol, direction, proxy);\n\n    const syncLeftCol = distStartCol;\n    const syncRightCol = distEndCol;\n\n    proxy.colStart = direction === 'left' ? proxy.colStart + count : proxy.colStart - count;\n    proxy.colEnd = direction === 'left' ? proxy.colEnd + count : proxy.colEnd - count;\n\n    updateColContent(syncLeftCol, syncRightCol, proxy);\n\n    updateAutoColumn(\n      syncLeftCol, // colStart\n      syncRightCol, // colEnd\n      proxy.table,\n      direction\n    );\n\n    const colGroup =\n      proxy.table.scenegraph.getColGroup(screenLeftCol) || proxy.table.scenegraph.getColGroup(screenLeftCol, true);\n    const deltaX =\n      screenLeftX - (colGroup.attribute.x + proxy.table.getFrozenColsWidth() + proxy.table.scenegraph.proxy.deltaX);\n    proxy.table.scenegraph.proxy.deltaX += deltaX;\n\n    proxy.currentCol = direction === 'left' ? proxy.currentCol + count : proxy.currentCol - count;\n    proxy.totalCol = Math.max(\n      0,\n      Math.min(proxy.table.colCount - 1, direction === 'left' ? proxy.totalCol + count : proxy.totalCol - count)\n    );\n\n    proxy.referenceCol = proxy.colStart + Math.floor((proxy.colEnd - proxy.colStart) / 2);\n    proxy.colUpdatePos = distStartCol;\n    proxy.colUpdateDirection = direction;\n\n    proxy.table.scenegraph.updateNextFrame();\n\n    // 开始异步任务\n    // await proxy.progress();\n  } else {\n    const distStartCol = direction === 'left' ? proxy.colStart + count : proxy.colStart - count;\n    const distEndCol = direction === 'left' ? proxy.colEnd + count : proxy.colEnd - count;\n\n    // update column width\n    computeColsWidth(proxy.table, distStartCol, distEndCol);\n    const distStartColY = proxy.table.getColsWidth(proxy.bodyLeftCol, distStartCol - 1);\n\n    // 更新同步范围\n    updateAllColPosition(distStartColY, count, direction, proxy);\n    const syncLeftCol = distStartCol;\n    const syncRightCol = distEndCol;\n\n    proxy.colStart = distStartCol;\n    proxy.colEnd = distEndCol;\n    updateColContent(syncLeftCol, syncRightCol, proxy);\n\n    updateAutoColumn(\n      syncLeftCol, // colStart\n      syncRightCol, // colEnd\n      proxy.table,\n      distEndCol > proxy.bodyRightCol - (proxy.colEnd - proxy.colStart + 1) ? 'right' : 'left' // 跳转到右侧时，从右向左对齐\n    );\n    // // update body position when click scroll bar\n    // if (syncLeftCol === proxy.bodyLeftCol) {\n    //   const colGroup = proxy.table.scenegraph.getColGroup(syncLeftCol);\n    //   const deltaX = colGroup.attribute.x - x;\n    //   proxy.table.scenegraph.proxy.deltaX = deltaX;\n    // } else if (syncRightCol === proxy.bodyRightCol) {\n    //   const colGroup = proxy.table.scenegraph.getColGroup(syncRightCol);\n    //   const deltaX =\n    //     colGroup.attribute.x +\n    //     colGroup.attribute.width -\n    //     (proxy.table.tableNoFrameWidth - proxy.table.getFrozenColsWidth()) -\n    //     x;\n    //   proxy.table.scenegraph.proxy.deltaX = -deltaX;\n    // } else {\n    //   // proxy.table.scenegraph.proxy.deltaX = 0;\n    //   const colGroup =\n    //     proxy.table.scenegraph.getColGroup(screenLeftCol) || proxy.table.scenegraph.getColGroup(screenLeftCol, true);\n    //   const deltaX =\n    //     screenLeftX - (colGroup.attribute.x + proxy.table.getFrozenColsWidth() + proxy.table.scenegraph.proxy.deltaX);\n    //   proxy.table.scenegraph.proxy.deltaX = deltaX;\n    // }\n\n    proxy.currentCol = direction === 'left' ? proxy.currentCol + count : proxy.currentCol - count;\n    proxy.totalCol = Math.max(\n      0,\n      Math.min(proxy.table.colCount - 1, direction === 'left' ? proxy.totalCol + count : proxy.totalCol - count)\n    );\n    proxy.referenceCol = proxy.colStart + Math.floor((proxy.colEnd - proxy.colStart) / 2);\n    proxy.colUpdatePos = proxy.colStart;\n    proxy.colUpdateDirection = distEndCol > proxy.bodyRightCol - (proxy.colEnd - proxy.colStart + 1) ? 'right' : 'left';\n\n    proxy.table.scenegraph.updateNextFrame();\n    // await proxy.progress();\n  }\n}\n\nfunction updateColGroupPosition(colGroup: Group, newCol: number, x: number) {\n  // 更新位置&col\n  colGroup.col = newCol;\n  colGroup.forEachChildren((cellGroup: Group) => {\n    cellGroup.col = newCol;\n    cellGroup.needUpdate = true;\n  });\n  colGroup.setAttribute('x', x);\n  colGroup.needUpdate = true;\n}\n\nfunction updateColGroupContent(colGroup: Group, proxy: SceneProxy) {\n  if (!colGroup) {\n    return;\n  }\n  let cellGroup = colGroup.firstChild;\n  while (cellGroup) {\n    const newCellGroup = proxy.updateCellGroupContent(cellGroup as Group);\n    cellGroup = newCellGroup._next;\n  }\n  colGroup.needUpdate = false;\n  colGroup.setAttribute('width', proxy.table.getColWidth(colGroup.col));\n}\n\n// update cells async\nfunction updateColGroupContentAsync(colGroup: Group, proxy: SceneProxy) {\n  if (!colGroup) {\n    return;\n  }\n  const screenTopRow = proxy.screenTopRow;\n  const topRow = Math.max(proxy.bodyTopRow, screenTopRow - proxy.screenRowCount * 1);\n  const bottomRow = Math.min(proxy.bodyBottomRow, screenTopRow + proxy.screenRowCount * 2, proxy.table.rowCount - 1);\n\n  for (let row = topRow; row <= bottomRow; row++) {\n    // const cellGroup = proxy.table.scenegraph.getCell(col, row);\n    const cellGroup = proxy.highPerformanceGetCell(colGroup.col, row, true);\n    proxy.updateCellGroupContent(cellGroup);\n  }\n  proxy.rowUpdatePos = proxy.rowStart;\n\n  colGroup.needUpdate = false;\n  colGroup.setAttribute('width', proxy.table.getColWidth(colGroup.col));\n}\n\nfunction updatePartColPosition(startCol: number, endCol: number, direction: 'left' | 'right', proxy: SceneProxy) {\n  for (let col = startCol; col <= endCol; col++) {\n    if (\n      proxy.table.scenegraph.bodyGroup.childrenCount > 0 &&\n      proxy.table.scenegraph.bodyGroup.firstChild.type === 'group'\n    ) {\n      updateColPosition(proxy.table.scenegraph.bodyGroup, direction, proxy);\n    }\n    if (\n      proxy.table.scenegraph.colHeaderGroup.childrenCount > 0 &&\n      proxy.table.scenegraph.colHeaderGroup.firstChild.type === 'group'\n    ) {\n      updateColPosition(proxy.table.scenegraph.colHeaderGroup, direction, proxy);\n    }\n    if (\n      proxy.table.scenegraph.bottomFrozenGroup.childrenCount > 0 &&\n      proxy.table.scenegraph.bottomFrozenGroup.firstChild.type === 'group'\n    ) {\n      updateColPosition(proxy.table.scenegraph.bottomFrozenGroup, direction, proxy);\n    }\n  }\n}\n\nfunction updateColPosition(containerGroup: Group, direction: 'left' | 'right', proxy: SceneProxy) {\n  if (direction === 'left') {\n    const colGroup = getFirstChild(containerGroup);\n    const lastChild = getLastChild(containerGroup);\n    updateColGroupPosition(colGroup, lastChild.col + 1, lastChild.attribute.x + proxy.table.getColWidth(lastChild.col));\n    containerGroup.appendChild(colGroup);\n    // console.log('after', colGroup.col, colGroup.attribute.x, containerGroup._uid);\n    if (containerGroup.border) {\n      containerGroup.appendChild(containerGroup.border);\n    }\n  } else {\n    const colGroup = getLastChild(containerGroup);\n    const firstChild = getFirstChild(containerGroup);\n    updateColGroupPosition(\n      colGroup,\n      firstChild.col - 1,\n      firstChild.attribute.x - proxy.table.getColWidth(firstChild.col - 1)\n    );\n    containerGroup.insertBefore(colGroup, containerGroup.firstChild);\n  }\n}\n\nexport function updateColContent(syncLeftCol: number, syncRightCol: number, proxy: SceneProxy) {\n  for (let col = syncLeftCol; col <= syncRightCol; col++) {\n    const colHeaderColGroup = proxy.table.scenegraph.getColGroup(col, true);\n    colHeaderColGroup && updateColGroupContent(colHeaderColGroup, proxy);\n\n    const bottomColGroup = proxy.table.scenegraph.getColGroupInBottom(col);\n    bottomColGroup && updateColGroupContent(bottomColGroup, proxy);\n\n    const rightTopColGroup = proxy.table.scenegraph.getColGroupInRightTopCorner(col);\n    rightTopColGroup && updateColGroupContent(rightTopColGroup, proxy);\n\n    const rightBottomColGroup = proxy.table.scenegraph.getColGroupInRightBottomCorner(col);\n    rightBottomColGroup && updateColGroupContent(rightBottomColGroup, proxy);\n\n    const colGroup = proxy.table.scenegraph.getColGroup(col);\n    colGroup && updateColGroupContentAsync(colGroup, proxy);\n  }\n\n  // update column container width\n  updateColumnContainerWidth(proxy.table.scenegraph.colHeaderGroup);\n  updateColumnContainerWidth(proxy.table.scenegraph.bottomFrozenGroup);\n  updateColumnContainerWidth(proxy.table.scenegraph.bodyGroup);\n\n  proxy.progress();\n}\n\nfunction updateAllColPosition(distStartColY: number, count: number, direction: 'left' | 'right', proxy: SceneProxy) {\n  proxy.table.scenegraph.colHeaderGroup.forEachChildren((colGroup: Group, index: number) => {\n    if (colGroup.type === 'group') {\n      updateColGroupPosition(\n        colGroup,\n        direction === 'left' ? colGroup.col + count : colGroup.col - count,\n        // (bodyGroup.lastChild as Group).attribute.x + (bodyGroup.lastChild as Group).attribute.width\n        index === 0 // row === proxy.rowStart\n          ? distStartColY\n          : (colGroup._prev as Group).attribute.x + proxy.table.getColWidth((colGroup._prev as Group).col)\n      );\n    }\n  });\n  proxy.table.scenegraph.bottomFrozenGroup.forEachChildren((colGroup: Group, index: number) => {\n    if (colGroup.type === 'group') {\n      updateColGroupPosition(\n        colGroup,\n        direction === 'left' ? colGroup.col + count : colGroup.col - count,\n        // (bodyGroup.lastChild as Group).attribute.x + (bodyGroup.lastChild as Group).attribute.width\n        index === 0 // row === proxy.rowStart\n          ? distStartColY\n          : (colGroup._prev as Group).attribute.x + proxy.table.getColWidth((colGroup._prev as Group).col)\n      );\n    }\n  });\n  proxy.table.scenegraph.bodyGroup.forEachChildren((colGroup: Group, index: number) => {\n    if (colGroup.type === 'group') {\n      updateColGroupPosition(\n        colGroup,\n        direction === 'left' ? colGroup.col + count : colGroup.col - count,\n        // (bodyGroup.lastChild as Group).attribute.x + (bodyGroup.lastChild as Group).attribute.width\n        index === 0 // row === proxy.rowStart\n          ? distStartColY\n          : (colGroup._prev as Group).attribute.x + proxy.table.getColWidth((colGroup._prev as Group).col)\n      );\n    }\n  });\n}\n\nfunction updateColumnContainerWidth(containerGroup: Group) {\n  // update column container width\n  const lastColGroup = getLastChild(containerGroup);\n  if (!lastColGroup) {\n    return;\n  }\n  containerGroup.setAttribute('width', lastColGroup.attribute.x + lastColGroup.attribute.width);\n  if (containerGroup.border) {\n    const border = containerGroup.border as IRect;\n    border.setAttribute(\n      'width',\n      lastColGroup.attribute.x +\n        lastColGroup.attribute.width -\n        ((border.attribute as any).borderLeft ?? 0) / 2 -\n        ((border.attribute as any).borderRight ?? 0) / 2\n    );\n  }\n}\n"]}