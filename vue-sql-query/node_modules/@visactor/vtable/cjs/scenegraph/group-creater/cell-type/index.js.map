{"version":3,"sources":["../src/scenegraph/group-creater/cell-type/index.ts"],"names":[],"mappings":";;;AAAA,mDAAgD;AAChD,6CAAoD;AACpD,mDAA0D;AAC1D,6CAAoD;AACpD,6CAAoD;AACpD,+CAAsD;AACtD,uDAA6D;AAC7D,6CAAoD;AACpD,2CAAqE;AACrE,2DAA4D;AAC5D,kFAA2F;AAC3F,+CAAsD;AAE/C,MAAM,iBAAiB,GAAG,GAAG,EAAE;IACpC,iBAAO,CAAC,gBAAgB,CAAC,sBAAsB,EAAE,iCAAoB,CAAC,CAAC;IACvE,iBAAO,CAAC,gBAAgB,CAAC,6BAA6B,EAAE,6CAA2B,CAAC,CAAC;AACvF,CAAC,CAAC;AAHW,QAAA,iBAAiB,qBAG5B;AAEK,MAAM,oBAAoB,GAAG,GAAG,EAAE;IACvC,iBAAO,CAAC,gBAAgB,CAAC,yBAAyB,EAAE,uCAAuB,CAAC,CAAC;AAC/E,CAAC,CAAC;AAFW,QAAA,oBAAoB,wBAE/B;AAEK,MAAM,iBAAiB,GAAG,GAAG,EAAE;IACpC,iBAAO,CAAC,gBAAgB,CAAC,sBAAsB,EAAE,iCAAoB,CAAC,CAAC;AACzE,CAAC,CAAC;AAFW,QAAA,iBAAiB,qBAE5B;AAEK,MAAM,uBAAuB,GAAG,GAAG,EAAE;IAC1C,iBAAO,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,yCAAqB,CAAC,CAAC;AAC3E,CAAC,CAAC;AAFW,QAAA,uBAAuB,2BAElC;AAEK,MAAM,iBAAiB,GAAG,GAAG,EAAE;IACpC,iBAAO,CAAC,gBAAgB,CAAC,sBAAsB,EAAE,iCAAoB,CAAC,CAAC;AACzE,CAAC,CAAC;AAFW,QAAA,iBAAiB,qBAE5B;AAEK,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,iBAAO,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,mCAAqB,CAAC,CAAC;AAC3E,CAAC,CAAC;AAFW,QAAA,kBAAkB,sBAE7B;AAEK,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,iBAAO,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,mCAAqB,CAAC,CAAC;AAC3E,CAAC,CAAC;AAFW,QAAA,kBAAkB,sBAE7B;AAEK,MAAM,qBAAqB,GAAG,GAAG,EAAE;IACxC,iBAAO,CAAC,gBAAgB,CAAC,0BAA0B,EAAE,0CAAwB,CAAC,CAAC;AACjF,CAAC,CAAC;AAFW,QAAA,qBAAqB,yBAEhC;AAEK,MAAM,gBAAgB,GAAG,GAAG,EAAE;IACnC,iBAAO,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,2BAAmB,CAAC,CAAC;AACvE,CAAC,CAAC;AAFW,QAAA,gBAAgB,oBAE3B;AAEK,MAAM,iBAAiB,GAAG,GAAG,EAAE;IACpC,iBAAO,CAAC,gBAAgB,CAAC,sBAAsB,EAAE,iCAAoB,CAAC,CAAC;AACzE,CAAC,CAAC;AAFW,QAAA,iBAAiB,qBAE5B","file":"index.js","sourcesContent":["import { Factory } from '../../../core/factory';\nimport { createChartCellGroup } from './chart-cell';\nimport { createCheckboxCellGroup } from './checkbox-cell';\nimport { createImageCellGroup } from './image-cell';\nimport { createRadioCellGroup } from './radio-cell';\nimport { createSwitchCellGroup } from './switch-cell';\nimport { createSparkLineCellGroup } from './spark-line-cell';\nimport { createVideoCellGroup } from './video-cell';\nimport { createCellGroup as createTextCellGroup } from './text-cell';\nimport { createProgressBarCell } from './progress-bar-cell';\nimport { getAxisDomainRangeAndLabels } from '../../../layout/chart-helper/get-axis-domain';\nimport { createButtonCellGroup } from './button-cell';\n\nexport const registerChartCell = () => {\n  Factory.registerFunction('createChartCellGroup', createChartCellGroup);\n  Factory.registerFunction('getAxisDomainRangeAndLabels', getAxisDomainRangeAndLabels);\n};\n\nexport const registerCheckboxCell = () => {\n  Factory.registerFunction('createCheckboxCellGroup', createCheckboxCellGroup);\n};\n\nexport const registerImageCell = () => {\n  Factory.registerFunction('createImageCellGroup', createImageCellGroup);\n};\n\nexport const registerProgressBarCell = () => {\n  Factory.registerFunction('createProgressBarCell', createProgressBarCell);\n};\n\nexport const registerRadioCell = () => {\n  Factory.registerFunction('createRadioCellGroup', createRadioCellGroup);\n};\n\nexport const registerSwitchCell = () => {\n  Factory.registerFunction('createSwitchCellGroup', createSwitchCellGroup);\n};\n\nexport const registerButtonCell = () => {\n  Factory.registerFunction('createButtonCellGroup', createButtonCellGroup);\n};\n\nexport const registerSparkLineCell = () => {\n  Factory.registerFunction('createSparkLineCellGroup', createSparkLineCellGroup);\n};\n\nexport const registerTextCell = () => {\n  Factory.registerFunction('createTextCellGroup', createTextCellGroup);\n};\n\nexport const registerVideoCell = () => {\n  Factory.registerFunction('createVideoCellGroup', createVideoCellGroup);\n};\n"]}