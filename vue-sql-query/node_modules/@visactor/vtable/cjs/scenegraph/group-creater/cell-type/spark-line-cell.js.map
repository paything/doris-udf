{"version":3,"sources":["../src/scenegraph/group-creater/cell-type/spark-line-cell.ts"],"names":[],"mappings":"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","file":"spark-line-cell.js","sourcesContent":["import type { ILine, ISymbol, IThemeSpec } from './../../../vrender';\nimport { createLine, createSymbol } from './../../../vrender';\nimport { PointScale, LinearScale } from '@visactor/vscale';\nimport { isNumber, isValid } from '@visactor/vutils';\nimport { Group } from '../../graphic/group';\nimport type { CellInfo, SparklineSpec } from '../../../ts-types';\nimport type { BaseTableAPI } from '../../../ts-types/base-table';\nimport type { ColumnData } from '../../../ts-types/list-table/layout-map/api';\nimport { getCellBorderStrokeWidth } from '../../utils/cell-border-stroke-width';\n\nconst xScale: PointScale = new PointScale();\nconst yScale: LinearScale = new LinearScale();\n\nexport function createSparkLineCellGroup(\n  cellGroup: Group | null,\n  columnGroup: Group,\n  xOrigin: number,\n  yOrigin: number,\n  col: number,\n  row: number,\n  width: number,\n  height: number,\n  padding: number[],\n  table: BaseTableAPI,\n  cellTheme: IThemeSpec,\n  isAsync: boolean\n) {\n  // cell\n  if (!cellGroup) {\n    const strokeArrayWidth = getCellBorderStrokeWidth(col, row, cellTheme, table);\n\n    if (isAsync) {\n      cellGroup = table.scenegraph.highPerformanceGetCell(col, row, true);\n      if (cellGroup && cellGroup.role === 'cell') {\n        cellGroup.setAttributes({\n          x: xOrigin,\n          y: yOrigin,\n          width,\n          height,\n          // 背景相关，cell背景由cellGroup绘制\n          lineWidth: cellTheme?.group?.lineWidth ?? undefined,\n          fill: cellTheme?.group?.fill ?? undefined,\n          stroke: cellTheme?.group?.stroke ?? undefined,\n          strokeArrayWidth: strokeArrayWidth,\n          strokeArrayColor: (cellTheme?.group as any)?.strokeArrayColor ?? undefined,\n          cursor: (cellTheme?.group as any)?.cursor ?? undefined,\n          lineDash: cellTheme?.group?.lineDash ?? undefined,\n          lineCap: 'butt',\n          clip: true,\n          cornerRadius: cellTheme.group.cornerRadius\n        } as any);\n      }\n    }\n    if (!cellGroup || cellGroup.role !== 'cell') {\n      cellGroup = new Group({\n        x: xOrigin,\n        y: yOrigin,\n        width,\n        height,\n        // 背景相关，cell背景由cellGroup绘制\n        lineWidth: cellTheme?.group?.lineWidth ?? undefined,\n        fill: cellTheme?.group?.fill ?? undefined,\n        stroke: cellTheme?.group?.stroke ?? undefined,\n        strokeArrayWidth: strokeArrayWidth,\n        strokeArrayColor: (cellTheme?.group as any)?.strokeArrayColor ?? undefined,\n        cursor: (cellTheme?.group as any)?.cursor ?? undefined,\n        lineDash: cellTheme?.group?.lineDash ?? undefined,\n        lineCap: 'butt',\n        clip: true,\n        cornerRadius: cellTheme.group.cornerRadius\n      } as any);\n      cellGroup.role = 'cell';\n      cellGroup.col = col;\n      cellGroup.row = row;\n      columnGroup?.addCellGroup(cellGroup);\n    }\n  }\n\n  // chart\n  const chartGroup = createSparkLine(col, row, width, height, padding, table);\n  if (chartGroup) {\n    cellGroup.appendChild(chartGroup);\n  }\n\n  return cellGroup;\n}\n\nexport type CreateSparkLineCellGroup = typeof createSparkLineCellGroup;\n\nfunction createSparkLine(\n  col: number,\n  row: number,\n  width: number,\n  height: number,\n  padding: number[],\n  table: BaseTableAPI\n): Group | undefined {\n  //获取场景树对象，根据当前单元格位置更改其位置\n  //待定 TODO group需要设置shape属性吗\n  let sparklineSpec: SparklineSpec;\n  let chartGroup: Group;\n  const chartSpecRaw = (table.internalProps.layoutMap.getBody(col, row) as ColumnData).sparklineSpec;\n  const dataValue = table.getCellValue(col, row) as unknown as any[];\n\n  if (!Array.isArray(dataValue)) {\n    return undefined;\n  }\n\n  const x = padding[3];\n  const y = padding[0];\n  width -= padding[1] + padding[3];\n  height -= padding[0] + padding[2];\n  const left = 0;\n  // const top = y;\n  // const right = x + width;\n  const bottom = height;\n  if (typeof chartSpecRaw === 'function') {\n    // 动态组织spec\n    const arg = {\n      col,\n      row,\n      dataValue: table.getCellOriginValue(col, row) || '',\n      value: table.getCellValue(col, row) || '',\n      rect: table.getCellRangeRelativeRect(table.getCellRange(col, row)),\n      table\n    };\n    sparklineSpec = chartSpecRaw(arg);\n    chartGroup = createChartGroup(sparklineSpec, x, y, width, height);\n  } else {\n    sparklineSpec = chartSpecRaw;\n    chartGroup = createChartGroup(chartSpecRaw, x, y, width, height);\n  }\n\n  // #region scale对x y轴映射\n  const items: { x: number; y: number; defined?: boolean }[] = [];\n  const dataItems: any[] = [];\n\n  let xField;\n  let yField;\n  if (typeof sparklineSpec.xField === 'object') {\n    xScale.domain(sparklineSpec.xField.domain);\n    xField = sparklineSpec.xField.field;\n  } else if (typeof sparklineSpec.xField === 'string') {\n    const indexValues = dataValue.map((value: any) => value[sparklineSpec.xField as string]);\n    xScale.domain(indexValues);\n    xField = sparklineSpec.xField;\n  } else {\n    // xField未配置 data为数值数组的情况\n    if (Array.isArray(dataValue)) {\n      xScale.domain(Array.from({ length: dataValue.length }, (_, i) => i));\n      xField = sparklineSpec.xField;\n    }\n  }\n  xScale.range([0, width]);\n\n  if (typeof sparklineSpec.yField === 'object') {\n    yScale.domain(sparklineSpec.yField.domain);\n    yField = sparklineSpec.yField.field;\n  } else if (typeof sparklineSpec.yField === 'string') {\n    // string类型 自动计算出domain\n    // const values = dataValue.map((value: any) => value[sparklineSpec.yField as string]);\n    const values = getYNumbers(dataValue, sparklineSpec.yField as string);\n    yScale.domain([Math.min(...values), Math.max(...values)]);\n    yField = sparklineSpec.yField;\n  } else {\n    // yField未配置 检查data是否为数值数组\n    if (Array.isArray(dataValue)) {\n      const values = getYNumbers(dataValue);\n      yScale.domain([Math.min(...values), Math.max(...values)]);\n      yField = sparklineSpec.yField;\n    }\n  }\n  yScale.range([0, height]);\n\n  if (typeof sparklineSpec.xField === 'object' && Array.isArray(sparklineSpec.xField.domain)) {\n    // 如果xField.domain合法，需要按需补充null值点\n    const values = dataValue.map((value: any) => value[(sparklineSpec.xField as any).field]);\n    const domain = sparklineSpec.xField.domain;\n    for (let i = 0; i < domain.length; i++) {\n      let valid = false;\n      for (let j = 0; j < values.length; j++) {\n        // eslint-disable-next-line eqeqeq\n        if (domain[i] === values[j]) {\n          const data: any = dataValue[j];\n          // 无效数据不进行scale，避免null被解析为0\n          if (!isValid(data[xField]) || !isValid(data[yField])) {\n            break;\n          }\n          items.push({\n            x: left + xScale.scale(data[xField]),\n            y: bottom - yScale.scale(data[yField]),\n            defined: isValid(data[yField])\n          });\n          dataItems.push(data); //收集原始数据\n          valid = true;\n          break;\n        }\n      }\n\n      if (!valid) {\n        // 该domain的index没有在数据中，补充无效点\n        items.push({\n          x: left + xScale.scale(domain[i]),\n          y: 0,\n          defined: false\n        });\n        dataItems.push({ [xField]: domain[i], [yField]: null });\n      }\n    }\n  } else {\n    for (let i = 0; i < dataValue.length; i++) {\n      const data: any = dataValue[i];\n      items.push({\n        x: left + xScale.scale(xField ? data[xField] : i),\n        y: bottom - yScale.scale(yField ? data[yField] : data),\n        defined: isValid(yField ? data[yField] : data),\n        rawData: data\n      } as any);\n      dataItems.push(data);\n    }\n  }\n  // #endregion\n\n  // 更新线节点属性\n  const line = chartGroup.getChildByName('sparkline-line') as ILine;\n  if (line) {\n    line.setAttribute('points', items);\n  }\n  (line as any).bandwidth = xScale.step();\n  (line as any).min = yScale.range()[0];\n  (line as any).max = yScale.range()[1];\n\n  // 更新symbol节点属性\n  const symbolGroup = chartGroup.getChildByName('sparkline-symbol-group') as ILine;\n  if (symbolGroup) {\n    const isShowIsolatedPoint = sparklineSpec.pointShowRule === 'isolatedPoint';\n    if (sparklineSpec.pointShowRule === 'all') {\n      for (let i = 0; i < items.length; i++) {\n        const { x, y, defined } = items[i];\n        if (defined) {\n          const symbol: ISymbol = createSymbol({ x, y });\n          symbolGroup.appendChild(symbol);\n        }\n      }\n    } else if (isShowIsolatedPoint) {\n      // 处理孤立点显示\n      for (let i = 0; i < items.length; i++) {\n        const { x, y, defined } = items[i];\n        if (defined && (!items[i - 1] || !items[i - 1].defined) && (!items[i + 1] || !items[i + 1].defined)) {\n          // 规范孤立数据显示Symbol的spec api\n          const symbol: ISymbol = createSymbol({ x, y });\n          symbolGroup.appendChild(symbol);\n        }\n      }\n    }\n  }\n  return chartGroup;\n}\n\nfunction createChartGroup(\n  spec: SparklineSpec | ((arg: CellInfo) => SparklineSpec),\n  x: number,\n  y: number,\n  width: number,\n  height: number\n): Group {\n  let specObj: SparklineSpec;\n  if (typeof spec === 'function') {\n    // specObj = spec.apply(null, null);\n    specObj = spec(null);\n  } else {\n    specObj = spec;\n  }\n  // 生成根节点\n  const group = new Group({\n    x,\n    y,\n    width,\n    height,\n    stroke: false,\n    fill: false\n  });\n  group.name = 'sparkline';\n\n  if (specObj.type === 'line') {\n    // 生成line\n    const line = createLine({\n      x: 0,\n      y: 0,\n      curveType: specObj.smooth ? 'monotoneX' : 'linear',\n      stroke: specObj.line?.style?.stroke ?? 'blue',\n      lineWidth: specObj.line?.style?.strokeWidth ?? 2\n    });\n    line.name = 'sparkline-line';\n    group.addChild(line);\n    if (specObj.crosshair) {\n      (line as any).hover = specObj.crosshair?.style ?? {\n        stroke: '#000',\n        interpolate: 'linear'\n      };\n    }\n\n    // 生成symbol\n    const symbolGroup = new Group({\n      x: 0,\n      y: 0,\n      width,\n      height,\n      stroke: false,\n      fill: false\n    });\n    symbolGroup.name = 'sparkline-symbol-group';\n    symbolGroup.setTheme({\n      symbol: {\n        stroke: specObj.point?.style?.stroke ?? '#000',\n        lineWidth: specObj.point?.style?.strokeWidth ?? 1,\n        fill: specObj.point?.style?.fill ?? '#000',\n        size: (specObj.point?.style?.size ?? 3) * 2, // 之前配置的是圆半径\n        symbolType: 'circle'\n      }\n    });\n    group.addChild(symbolGroup);\n    (symbolGroup as any).hover = specObj.point?.hover ?? false;\n  }\n  return group;\n}\n\nfunction getYNumbers(data: any[], field?: string): number[] {\n  // return data.map((item) => item[field]).filter((item) => isValid(item));\n  const numbers = [];\n  for (let i = 0; i < data.length; i++) {\n    const item = data[i];\n    if (isValid(field) && isValid(item[field])) {\n      numbers.push(item[field]);\n    } else if (!isValid(field) && isValid(item)) {\n      numbers.push(item);\n    }\n  }\n\n  return numbers;\n}\n"]}