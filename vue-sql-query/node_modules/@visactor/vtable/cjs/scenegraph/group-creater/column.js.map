{"version":3,"sources":["../src/scenegraph/group-creater/column.ts"],"names":[],"mappings":";;;AAAA,6CAA4C;AAG5C,4CAAyC;AACzC,mDAAsD;AA4GtD,SAAgB,cAAc,CAC5B,cAAqB,EACrB,OAAe,EACf,OAAe,EACf,QAAgB,EAChB,MAAc,EACd,QAAgB,EAChB,MAAc,EACd,YAA0B,EAC1B,KAAmB,EACnB,QAAiB;IAEjB,IAAI,QAAQ,GAAG,MAAM,IAAI,QAAQ,GAAG,MAAM,EAAE;QAC1C,OAAO;KACR;IACD,MAAM,EAAE,SAAS,EAAE,sBAAsB,EAAE,eAAe,EAAE,GAAG,KAAK,CAAC,aAAa,CAAC;IACnF,MAAM,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;IAChD,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,KAAK,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE;QACvC,MAAM,GAAG,GAAG,CAAC,CAAC;QACd,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAExC,MAAM,WAAW,GAAG,IAAI,aAAK,CAAC;YAC5B,CAAC,EAAE,OAAO,GAAG,CAAC;YACd,CAAC,EAAE,OAAO;YACV,KAAK,EAAE,QAAQ;YACf,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,KAAK;YACX,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;QACH,WAAW,CAAC,IAAI,GAAG,QAAQ,CAAC;QAC5B,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;QACpB,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACrC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,IAAA,mCAAmB,EAC1E,WAAW,EACX,GAAG,EACH,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,KAAK,CAAC,UAAU,CAAC,QAAQ,EACzB,YAAY,KAAK,cAAc,IAAI,IAAA,iBAAQ,EAAC,sBAAsB,CAAC;YACjE,CAAC,CAAE,sBAAiC;YACpC,CAAC,CAAC,gBAAgB,EACpB,KAAK,EAEL,QAAQ,CACT,CAAC;QACF,CAAC,IAAI,aAAa,CAAC;QACnB,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;KACjD;IAED,cAAc,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACxC,cAAc,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AACnD,CAAC;AAtDD,wCAsDC","file":"column.js","sourcesContent":["import { isNumber } from '@visactor/vutils';\nimport type { CellLocation } from '../../ts-types';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport { Group } from '../graphic/group';\nimport { createComplexColumn } from './column-helper';\n\n// /**\n//  * @description: 处理全部角表头\n//  * @param {Group} colHeaderGroup 列表头容器Group\n//  * @param {number} xOrigin x起始坐标\n//  * @param {number} yOrigin y起始坐标\n//  * @param {BaseTableAPI} table\n//  * @return {*}\n//  */\n// export function createCornerHeaderColGroup(\n//   cornerHeaderGroup: Group,\n//   xOrigin: number,\n//   yOrigin: number,\n//   table: BaseTableAPI\n// ) {\n//   createColGroup(\n//     cornerHeaderGroup,\n//     xOrigin,\n//     yOrigin,\n//     0, // colStart\n//     table.rowHeaderLevelCount - 1, // colEnd\n//     0, // rowStart\n//     table.columnHeaderLevelCount - 1, // rowEnd\n//     'cornerHeader', // CellType\n//     table\n//   );\n// }\n\n// /**\n//  * @description: 处理全部列表头\n//  * @param {Group} colHeaderGroup 列表头容器Group\n//  * @param {number} xOrigin x起始坐标\n//  * @param {number} yOrigin y起始坐标\n//  * @param {BaseTableAPI} table\n//  * @return {*}\n//  */\n// export function createColHeaderColGroup(colHeaderGroup: Group, xOrigin: number, yOrigin: number, table: BaseTableAPI) {\n//   createColGroup(\n//     colHeaderGroup,\n//     xOrigin,\n//     yOrigin,\n//     table.rowHeaderLevelCount, // colStart\n//     table.colCount - 1, // colEnd\n//     0, // rowStart\n//     table.columnHeaderLevelCount - 1, // rowEnd\n//     'columnHeader', // isHeader\n//     table\n//   );\n// }\n\n// /**\n//  * @description: 处理全部行表头\n//  * @param {Group} rowHeaderGroup 行表头容器Group\n//  * @param {number} xOrigin x起始坐标\n//  * @param {number} yOrigin y起始坐标\n//  * @param {BaseTableAPI} table\n//  * @return {*}\n//  */\n// export function createRowHeaderColGroup(rowHeaderGroup: Group, xOrigin: number, yOrigin: number, table: BaseTableAPI) {\n//   createColGroup(\n//     rowHeaderGroup,\n//     xOrigin,\n//     yOrigin,\n//     0, // colStart\n//     table.rowHeaderLevelCount - 1, // colEnd\n//     table.columnHeaderLevelCount, // rowStart\n//     table.rowCount - 1, // rowEnd\n//     'rowHeader', // isHeader\n//     table\n//   );\n// }\n\n// /**\n//  * @description: 处理内容单元格\n//  * @param {Group} bodyGroup 内容容器Group\n//  * @param {number} xOrigin x起始坐标\n//  * @param {number} yOrigin y起始坐标\n//  * @param {BaseTableAPI} table\n//  * @return {*}\n//  */\n// export function createBodyColGroup(bodyGroup: Group, xOrigin: number, yOrigin: number, table: BaseTableAPI) {\n//   createColGroup(\n//     bodyGroup,\n//     xOrigin,\n//     yOrigin,\n//     table.rowHeaderLevelCount, // colStart\n//     table.colCount - 1, // colEnd\n//     table.columnHeaderLevelCount, // rowStart\n//     table.rowCount - 1, // rowEnd\n//     'body', // isHeader\n//     table\n//   );\n// }\n\n/**\n * @description: 生成一个列的场景节点\n * @param {Group} containerGroup 列容器Group\n * @param {number} xOrigin x起始坐标\n * @param {number} yOrigin y起始坐标\n * @param {number} colStart 起始col\n * @param {number} colEnd 结束col\n * @param {number} rowStart 起始row\n * @param {number} rowEnd 结束row\n * @param {boolean} isHeader 是否是表头\n * @param {BaseTableAPI} table\n * @return {*}\n */\nexport function createColGroup(\n  containerGroup: Group,\n  xOrigin: number,\n  yOrigin: number,\n  colStart: number,\n  colEnd: number,\n  rowStart: number,\n  rowEnd: number,\n  cellLocation: CellLocation,\n  table: BaseTableAPI,\n  rowLimit?: number\n) {\n  if (colStart > colEnd || rowStart > rowEnd) {\n    return;\n  }\n  const { layoutMap, defaultHeaderRowHeight, defaultColWidth } = table.internalProps;\n  const defaultRowHeight = table.defaultRowHeight;\n  let x = 0;\n  let heightMax = 0;\n  for (let i = colStart; i <= colEnd; i++) {\n    const col = i;\n    const colWidth = table.getColWidth(col);\n\n    const columnGroup = new Group({\n      x: xOrigin + x,\n      y: yOrigin,\n      width: colWidth,\n      height: 0,\n      clip: false,\n      pickable: false\n    });\n    columnGroup.role = 'column';\n    columnGroup.col = i;\n    containerGroup.addChild(columnGroup);\n    const { width: default2Width, height: default2Height } = createComplexColumn(\n      columnGroup,\n      col,\n      colWidth,\n      rowStart,\n      rowEnd,\n      table.scenegraph.mergeMap,\n      cellLocation === 'columnHeader' && isNumber(defaultHeaderRowHeight)\n        ? (defaultHeaderRowHeight as number)\n        : defaultRowHeight,\n      table,\n      // cellLocation,\n      rowLimit\n    );\n    x += default2Width;\n    heightMax = Math.max(heightMax, default2Height);\n  }\n  // 更新containerGroup尺寸\n  containerGroup.setAttribute('width', x);\n  containerGroup.setAttribute('height', heightMax);\n}\n"]}