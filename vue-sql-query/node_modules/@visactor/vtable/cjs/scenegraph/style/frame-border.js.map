{"version":3,"sources":["../src/scenegraph/style/frame-border.ts"],"names":[],"mappings":"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","file":"frame-border.js","sourcesContent":["import type { IGroupGraphicAttribute, IRect, IRectGraphicAttribute } from './../../vrender';\nimport { createGroup, createRect } from './../../vrender';\nimport type { TableFrameStyle } from '../../ts-types';\nimport type { Group } from '../graphic/group';\nimport { isArray } from '@visactor/vutils';\nimport { getQuadProps } from '../utils/padding';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport { toBoxArray } from '../../tools/helper';\n\n/**\n * @description: create frame border\n * @param {Group} group\n * @param {TableFrameStyle} frameTheme\n * @param {string} role\n * @param {[boolean, boolean, boolean, boolean]} strokeArray\n * @return {*}\n */\nexport function createFrameBorder(\n  group: Group,\n  frameTheme: TableFrameStyle | undefined,\n  role: string,\n  strokeArray: [boolean, boolean, boolean, boolean] | undefined, // to do 处理成0b001111形式\n  justForXYPosition?: boolean\n) {\n  if (!frameTheme) {\n    return;\n  }\n\n  const isTableGroup = role === 'table';\n\n  const {\n    shadowBlur,\n    shadowOffsetX,\n    shadowOffsetY,\n    shadowColor,\n    cornerRadius,\n    borderColor,\n    borderLineWidth,\n    borderLineDash\n  } = frameTheme;\n  let hasShadow = false;\n  const groupAttributes: IGroupGraphicAttribute = {};\n  const rectAttributes: IRectGraphicAttribute = {\n    pickable: false\n  };\n  // 处理shadow\n  if (shadowBlur && isTableGroup) {\n    // 只有table才能配置shadow\n    rectAttributes.shadowBlur = shadowBlur;\n    rectAttributes.shadowOffsetX = shadowOffsetX;\n    rectAttributes.shadowOffsetY = shadowOffsetY;\n    rectAttributes.shadowColor = shadowColor;\n    rectAttributes.stroke = true;\n    rectAttributes.stroke = shadowColor;\n    rectAttributes.lineWidth = 1;\n    hasShadow = true;\n\n    // rectAttributes.fill = true;\n    // rectAttributes.fillOpacity = 0.01;\n  }\n\n  // 处理边框\n  if (borderLineWidth) {\n    rectAttributes.stroke = true;\n    rectAttributes.fill = false;\n    rectAttributes.stroke = getStroke(borderColor ?? '#E1E4E8', strokeArray, borderLineWidth);\n    rectAttributes.lineWidth = borderLineWidth as number;\n    borderLineDash && (rectAttributes.lineDash = borderLineDash as number[]);\n    rectAttributes.lineCap = 'butt';\n  }\n\n  if (Array.isArray(borderColor)) {\n    (rectAttributes as any).strokeArrayColor = getQuadProps(borderColor as any);\n  }\n\n  if (Array.isArray(borderLineWidth)) {\n    (rectAttributes as any).strokeArrayWidth = getQuadProps(borderLineWidth);\n    (rectAttributes as any).lineWidth = 1;\n  }\n\n  if (cornerRadius) {\n    rectAttributes.cornerRadius = cornerRadius;\n    groupAttributes.cornerRadius = cornerRadius;\n  }\n\n  const borderTop = (rectAttributes as any).strokeArrayWidth\n    ? (rectAttributes as any).strokeArrayWidth[0]\n    : (rectAttributes.lineWidth as number) ?? 0;\n  const borderRight = (rectAttributes as any).strokeArrayWidth\n    ? (rectAttributes as any).strokeArrayWidth[1]\n    : (rectAttributes.lineWidth as number) ?? 0;\n  const borderBottom = (rectAttributes as any).strokeArrayWidth\n    ? (rectAttributes as any).strokeArrayWidth[2]\n    : (rectAttributes.lineWidth as number) ?? 0;\n  const borderLeft = (rectAttributes as any).strokeArrayWidth\n    ? (rectAttributes as any).strokeArrayWidth[3]\n    : (rectAttributes.lineWidth as number) ?? 0;\n\n  // // 处理边框引起的宽度高度变化（只对最外层tableGroup生效）\n  // if (isTableGroup && (rectAttributes.shadowBlur || rectAttributes.lineWidth)) {\n  //   const deltaX = (rectAttributes.shadowBlur ?? 0) + (borderLeft + borderRight) / 2;\n  //   const deltaY = (rectAttributes.shadowBlur ?? 0) + (borderTop + borderBottom) / 2;\n\n  //   groupAttributes.x = deltaX;\n  //   groupAttributes.y = deltaY;\n  //   // 宽度高度在tableNoFrameWidth&tableNoFrameHeight中处理\n  //   // groupAttributes.width = group.attribute.width - deltaX - deltaX;\n  //   // groupAttributes.height = group.attribute.height - deltaY - deltaY;\n  // }\n  group.setAttributes(groupAttributes);\n\n  if (justForXYPosition) {\n    return;\n  }\n\n  if (rectAttributes.stroke) {\n    rectAttributes.x = borderLeft / 2;\n    rectAttributes.y = borderTop / 2;\n    rectAttributes.pickable = false;\n    if (isTableGroup) {\n      if (cornerRadius) {\n        if (Array.isArray(cornerRadius)) {\n          const cornerRadiusArr = getQuadProps(cornerRadius);\n          rectAttributes.cornerRadius = cornerRadiusArr;\n          groupAttributes.cornerRadius = cornerRadiusArr;\n          cornerRadiusArr[0] && (cornerRadiusArr[0] = cornerRadiusArr[0] + Math.min(borderLeft, borderTop) / 2);\n          cornerRadiusArr[1] && (cornerRadiusArr[1] = cornerRadiusArr[1] + Math.min(borderTop, borderRight) / 2);\n          cornerRadiusArr[2] && (cornerRadiusArr[2] = cornerRadiusArr[2] + Math.min(borderRight, borderBottom) / 2);\n          cornerRadiusArr[3] && (cornerRadiusArr[3] = cornerRadiusArr[3] + Math.min(borderBottom, borderLeft) / 2);\n        } else if (isArray(borderLineWidth)) {\n          const cornerRadiusArr: number[] = [];\n          rectAttributes.cornerRadius = cornerRadiusArr;\n          groupAttributes.cornerRadius = cornerRadiusArr;\n          cornerRadiusArr[0] = cornerRadius + Math.min(borderLeft, borderTop) / 2;\n          cornerRadiusArr[1] = cornerRadius + Math.min(borderTop, borderRight) / 2;\n          cornerRadiusArr[2] = cornerRadius + Math.min(borderRight, borderBottom) / 2;\n          cornerRadiusArr[3] = cornerRadius + Math.min(borderBottom, borderLeft) / 2;\n        } else {\n          rectAttributes.cornerRadius = cornerRadius + (rectAttributes.lineWidth ?? 0) / 2;\n          groupAttributes.cornerRadius = cornerRadius + (rectAttributes.lineWidth ?? 0) / 2;\n        }\n      }\n      if (frameTheme.innerBorder) {\n        rectAttributes.x = group.attribute.x + borderLeft / 2;\n        rectAttributes.y = group.attribute.y + borderTop / 2;\n        rectAttributes.width = group.attribute.width - borderLeft / 2 - borderRight / 2;\n        rectAttributes.height = group.attribute.height - borderTop / 2 - borderBottom / 2;\n      } else {\n        rectAttributes.x = group.attribute.x - borderLeft / 2;\n        rectAttributes.y = group.attribute.y - borderTop / 2;\n        rectAttributes.width = group.attribute.width + borderLeft / 2 + borderRight / 2;\n        rectAttributes.height = group.attribute.height + borderTop / 2 + borderBottom / 2;\n      }\n\n      let shadowRect;\n      let borderRect;\n      if (hasShadow) {\n        rectAttributes.fill = 'white';\n        (rectAttributes as any).notAdjustPos = true;\n        // rectAttributes.globalCompositeOperation = 'source-over';\n\n        // first draw group\n        borderRect = createGroup(rectAttributes);\n        borderRect.name = 'table-border-rect';\n\n        // second draw rect\n        shadowRect = createRect({\n          x: borderLeft / 2,\n          y: borderTop / 2,\n          width: group.attribute.width,\n          height: group.attribute.height,\n          fill: 'red',\n          cornerRadius: group.attribute.cornerRadius,\n          globalCompositeOperation: 'destination-out'\n        });\n        borderRect.addChild(shadowRect);\n\n        // hack for vrender globalCompositeOperation&clip render problem\n        const hackRect = createRect({\n          x: borderLeft / 2,\n          y: borderTop / 2,\n          width: group.attribute.width,\n          height: group.attribute.height,\n          fill: 'transparent',\n          pickable: false,\n          globalCompositeOperation: 'source-over'\n        });\n        borderRect.addChild(hackRect);\n      } else {\n        borderRect = createRect(rectAttributes);\n        borderRect.name = 'table-border-rect';\n      }\n\n      // to be fixed: border index in shadow mode\n      if (frameTheme.innerBorder && !hasShadow) {\n        group.parent.insertAfter(borderRect, group);\n      } else {\n        group.parent.insertBefore(borderRect, group);\n      }\n      (group as any).border = borderRect;\n    } else {\n      // rectAttributes.x = rectAttributes.lineWidth / 2;\n      // rectAttributes.y = rectAttributes.lineWidth / 2;\n      rectAttributes.width = group.attribute.width - borderLeft / 2 - borderRight / 2;\n      rectAttributes.height = group.attribute.height - borderTop / 2 - borderBottom / 2;\n      const borderRect = createRect(rectAttributes);\n      borderRect.name = 'border-rect';\n      group.addChild(borderRect);\n      (group as any).border = borderRect;\n    }\n  } else {\n    const borderRect = createRect({\n      fill: false,\n      stroke: false,\n      pickable: false,\n      lineWidth: 0\n    });\n    borderRect.name = 'border-rect';\n    group.addChild(borderRect);\n    (group as any).border = borderRect;\n  }\n}\n\n/**\n * @description: update frame border stroke atrribute\n * @param {Group} group\n * @param {TableFrameStyle} frameTheme\n * @param {array} strokeArray stroke boolean array\n * @return {*}\n */\nexport function updateFrameBorder(\n  group: Group,\n  frameTheme: TableFrameStyle | undefined,\n  strokeArray?: [boolean, boolean, boolean, boolean] // to do 处理成0b001111形式\n) {\n  if (!frameTheme) {\n    return;\n  }\n  const { borderColor } = frameTheme;\n  group.border?.setAttribute('stroke', getStroke(borderColor, strokeArray));\n}\n\nexport function getStroke(\n  borderColor: string | string[],\n  strokeArray: boolean[] | undefined,\n  strokeLineWidth?: number | number[]\n) {\n  let stroke: boolean | string | (boolean | string)[] = true;\n  if ((strokeArray || isArray(strokeLineWidth)) && !isArray(borderColor)) {\n    stroke = (strokeArray ?? (strokeLineWidth as number[])).map(stroke => {\n      if (stroke) {\n        return borderColor;\n      }\n      return false;\n    });\n  } else if (strokeArray) {\n    stroke = strokeArray;\n  } else if (!strokeArray && !isArray(borderColor)) {\n    stroke = borderColor;\n  } else if (isArray(borderColor)) {\n    stroke = true;\n  }\n  return stroke;\n}\n\n/**\n * @description: update frame border size when group size change\n * @param {Group} group\n * @return {*}\n */\nexport function updateFrameBorderSize(group: Group) {\n  if (!group.border) {\n    return;\n  }\n  const borderTop = (group.border.attribute as any).strokeArrayWidth\n    ? (group.border.attribute as any).strokeArrayWidth[0]\n    : (group.border.attribute.lineWidth as number) ?? 0;\n  const borderRight = (group.border.attribute as any).strokeArrayWidth\n    ? (group.border.attribute as any).strokeArrayWidth[1]\n    : (group.border.attribute.lineWidth as number) ?? 0;\n  const borderBottom = (group.border.attribute as any).strokeArrayWidth\n    ? (group.border.attribute as any).strokeArrayWidth[2]\n    : (group.border.attribute.lineWidth as number) ?? 0;\n  const borderLeft = (group.border.attribute as any).strokeArrayWidth\n    ? (group.border.attribute as any).strokeArrayWidth[3]\n    : (group.border.attribute.lineWidth as number) ?? 0;\n\n  group.border.setAttributes({\n    borderLeft,\n    borderTop,\n    borderRight,\n    borderBottom,\n    width: group.attribute.width - borderLeft / 2 - borderRight / 2,\n    height: group.attribute.height - borderTop / 2 - borderBottom / 2\n  } as any);\n\n  if (group.border.type === 'group') {\n    (group.border.firstChild as IRect).setAttributes({\n      width: group.attribute.width,\n      height: group.attribute.height\n    });\n  }\n}\n\nexport function updateCornerRadius(table: BaseTableAPI) {\n  if (!table.theme.frameStyle.cornerRadius) {\n    return;\n  }\n  const cornerRadius = table.theme.frameStyle.cornerRadius;\n  const {\n    cornerHeaderGroup,\n    colHeaderGroup,\n    rowHeaderGroup,\n    bodyGroup,\n    rightTopCornerGroup,\n    leftBottomCornerGroup,\n    rightBottomCornerGroup,\n    rightFrozenGroup,\n    bottomFrozenGroup\n  } = table.scenegraph;\n\n  // reset corner radius\n  cornerHeaderGroup.setAttribute('cornerRadius', 0);\n  colHeaderGroup.setAttribute('cornerRadius', 0);\n  rowHeaderGroup.setAttribute('cornerRadius', 0);\n  bodyGroup.setAttribute('cornerRadius', 0);\n  rightTopCornerGroup.setAttribute('cornerRadius', 0);\n  leftBottomCornerGroup.setAttribute('cornerRadius', 0);\n  rightBottomCornerGroup.setAttribute('cornerRadius', 0);\n  rightFrozenGroup.setAttribute('cornerRadius', 0);\n  bottomFrozenGroup.setAttribute('cornerRadius', 0);\n\n  const cornerRadiusArray = toBoxArray(cornerRadius);\n  // left top\n  if (cornerHeaderGroup.attribute.width > 0 && cornerHeaderGroup.attribute.height > 0) {\n    setCornerRadius(cornerHeaderGroup, [cornerRadiusArray[0], 0, 0, 0]);\n  } else if (colHeaderGroup.attribute.height > 0) {\n    setCornerRadius(colHeaderGroup, [cornerRadiusArray[0], 0, 0, 0]);\n  } else if (rowHeaderGroup.attribute.width > 0) {\n    setCornerRadius(rowHeaderGroup, [cornerRadiusArray[0], 0, 0, 0]);\n  } else {\n    setCornerRadius(bodyGroup, [cornerRadiusArray[0], 0, 0, 0]);\n  }\n\n  // left bottom\n  if (leftBottomCornerGroup.attribute.width > 0 && leftBottomCornerGroup.attribute.height > 0) {\n    setCornerRadius(leftBottomCornerGroup, [0, 0, 0, cornerRadiusArray[3]]);\n  } else if (bottomFrozenGroup.attribute.height > 0) {\n    setCornerRadius(bottomFrozenGroup, [0, 0, 0, cornerRadiusArray[3]]);\n  } else if (rowHeaderGroup.attribute.width > 0) {\n    setCornerRadius(rowHeaderGroup, [0, 0, 0, cornerRadiusArray[3]]);\n  } else {\n    setCornerRadius(bodyGroup, [0, 0, 0, cornerRadiusArray[3]]);\n  }\n\n  // right top\n  if (rightTopCornerGroup.attribute.width > 0 && rightTopCornerGroup.attribute.height > 0) {\n    setCornerRadius(rightTopCornerGroup, [0, cornerRadiusArray[1], 0, 0]);\n  } else if (colHeaderGroup.attribute.height > 0) {\n    setCornerRadius(colHeaderGroup, [0, cornerRadiusArray[1], 0, 0]);\n  } else if (rightFrozenGroup.attribute.width > 0) {\n    setCornerRadius(rightFrozenGroup, [0, cornerRadiusArray[1], 0, 0]);\n  } else {\n    setCornerRadius(bodyGroup, [0, cornerRadiusArray[1], 0, 0]);\n  }\n\n  // right bottom\n  if (rightBottomCornerGroup.attribute.width > 0 && rightBottomCornerGroup.attribute.height > 0) {\n    setCornerRadius(rightBottomCornerGroup, [0, 0, cornerRadiusArray[2], 0]);\n  } else if (rightFrozenGroup.attribute.width > 0) {\n    setCornerRadius(rightFrozenGroup, [0, 0, cornerRadiusArray[2], 0]);\n  } else if (bottomFrozenGroup.attribute.height > 0) {\n    setCornerRadius(bottomFrozenGroup, [0, 0, cornerRadiusArray[2], 0]);\n  } else {\n    setCornerRadius(bodyGroup, [0, 0, cornerRadiusArray[2], 0]);\n  }\n}\n\nfunction setCornerRadius(group: Group, cornerRadius: number[]) {\n  group.setAttribute('cornerRadius', cornerRadius);\n  if (group.border) {\n    group.border.setAttribute('cornerRadius', cornerRadius);\n  }\n}\n"]}