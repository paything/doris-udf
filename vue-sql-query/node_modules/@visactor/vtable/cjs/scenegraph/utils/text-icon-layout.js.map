{"version":3,"sources":["../src/scenegraph/utils/text-icon-layout.ts"],"names":[],"mappings":"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","file":"text-icon-layout.js","sourcesContent":["/* eslint-disable no-undef */\nimport type { IThemeSpec } from './../../vrender';\nimport { RichText, Text } from './../../vrender';\nimport { convertInternal } from '../../tools/util';\nimport type { CellRange, ColumnIconOption } from '../../ts-types';\nimport { IconFuncTypeEnum, IconPosition } from '../../ts-types';\nimport { CellContent } from '../component/cell-content';\nimport type { Group } from '../graphic/group';\nimport { Icon, TextIcon } from '../graphic/icon';\nimport type { Scenegraph } from '../scenegraph';\nimport { getCellMergeInfo } from './get-cell-merge';\nimport { getHierarchyOffset } from './get-hierarchy-offset';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport { isNil, isNumber, isValid, isValidNumber, merge } from '@visactor/vutils';\nimport { isMergeCellGroup } from './is-merge-cell-group';\nimport { breakString } from './break-string';\nimport { CUSTOM_CONTAINER_NAME } from '../component/custom';\nimport { getTargetCell } from '../../event/util';\n// import { createLine } from '@src/vrender';\n\n/**\n * @description: 创建单元格内容\n * cellGroup\n * |-- content\n *      |-- leftContentIcons\n *      |-- rightContentIcons\n *      |-- wrapText / richtext\n * |-- leftIcons\n * |-- rightIcons\n * |-- absoluteIcons\n * @param {ColumnIconOption} icons\n * @param {string} textStr\n * @param {array} padding\n * @param {boolean} autoColWidth\n * @param {boolean} autoRowHeight\n * @param {boolean} autoWrapText\n * @param {number} cellWidth\n * @param {number} cellHeight\n * @param {CanvasTextAlign} textAlign\n * @param {CanvasTextBaseline} textBaseline\n * @return {*}\n */\nexport function createCellContent(\n  cellGroup: Group,\n  icons: ColumnIconOption[] | null,\n  textStr: string,\n  padding: [number, number, number, number],\n  autoColWidth: boolean,\n  autoRowHeight: boolean,\n  autoWrapText: boolean,\n  lineClamp: number | undefined,\n  cellWidth: number,\n  cellHeight: number,\n  textAlign: CanvasTextAlign,\n  textBaseline: CanvasTextBaseline,\n  table: BaseTableAPI,\n  cellTheme: IThemeSpec,\n  range: CellRange | undefined\n) {\n  // const leftIcons: ColumnIconOption[] = [];\n  // const rightIcons: ColumnIconOption[] = [];\n  // const contentLeftIcons: ColumnIconOption[] = [];\n  // const contentRightIcons: ColumnIconOption[] = [];\n  // const inlineFrontIcons: ColumnIconOption[] = [];\n  // const inlineEndIcons: ColumnIconOption[] = [];\n  // const absoluteLeftIcons: ColumnIconOption[] = [];\n  // const absoluteRightIcons: ColumnIconOption[] = [];\n\n  let contentWidth: number;\n  let contentHeight: number;\n  let leftIconWidth = 0;\n  // let leftIconHeight = 0;\n  let rightIconWidth = 0;\n  // let rightIconHeight = 0;\n  // let absoluteLeftIconWidth = 0;\n  let absoluteRightIconWidth = 0;\n\n  if (!Array.isArray(icons) || icons.length === 0) {\n    if (isValid(textStr)) {\n      // 没有icon，cellGroup只添加WrapText\n      const { text, moreThanMaxCharacters } = breakString(textStr, table);\n\n      const hierarchyOffset = range\n        ? getHierarchyOffset(range.start.col, range.start.row, table)\n        : getHierarchyOffset(cellGroup.col, cellGroup.row, table);\n\n      let _contentOffset = 0;\n      if (isNumber(table.theme._contentOffset)) {\n        if (textAlign === 'left') {\n          _contentOffset = table.theme._contentOffset;\n        } else if (textAlign === 'right') {\n          _contentOffset = -table.theme._contentOffset;\n        }\n      }\n      const attribute = {\n        text: text.length === 1 ? text[0] : text,\n        moreThanMaxCharacters,\n        maxLineWidth: autoColWidth ? Infinity : cellWidth - (padding[1] + padding[3] + hierarchyOffset),\n        // fill: true,\n        // textAlign: 'left',\n        textBaseline: 'top',\n        autoWrapText,\n        lineClamp,\n        wordBreak: 'break-word',\n        // widthLimit: autoColWidth ? -1 : colWidth - (padding[1] + padding[3]),\n        heightLimit:\n          table.options.customConfig?.limitContentHeight === false\n            ? -1\n            : autoRowHeight && !table.options.customConfig?.multilinesForXTable\n            ? -1\n            : cellHeight - Math.floor(padding[0] + padding[2]),\n        pickable: false,\n        dx: (textAlign === 'left' ? hierarchyOffset : 0) + _contentOffset,\n        // dy: -1,\n        whiteSpace:\n          table.options.customConfig?.limitContentHeight === false\n            ? 'normal'\n            : text.length === 1 && !autoWrapText\n            ? 'no-wrap'\n            : 'normal',\n        keepCenterInLine: true\n        // _debug_bounds: true\n      };\n      const wrapText = new Text(cellTheme.text ? (Object.assign({}, cellTheme.text, attribute) as any) : attribute);\n      wrapText.name = 'text';\n      (wrapText as any).textBaseline = textBaseline;\n\n      // const height = cellHeight - (padding[0] + padding[2]);\n      // const line = createLine({\n      //   x: 0,\n      //   // y: 0,\n      //   y: padding[0] + (height - 18) / 2,\n      //   points: [\n      //     {\n      //       x: 0,\n      //       y: 0\n      //     },\n      //     {\n      //       x: 100,\n      //       y: 0\n      //     }\n      //   ],\n      //   stroke: 'red'\n      // });\n      // line.name = 'line';\n\n      // const line1 = createLine({\n      //   x: 0,\n      //   // y: 0,\n      //   y: padding[0] + (height - 18) / 2 + 18,\n      //   points: [\n      //     {\n      //       x: 0,\n      //       y: 0\n      //     },\n      //     {\n      //       x: 100,\n      //       y: 0\n      //     }\n      //   ],\n      //   stroke: 'red'\n      // });\n      // line1.name = 'line';\n\n      cellGroup.appendChild(wrapText);\n      // cellGroup.appendChild(line);\n      // cellGroup.appendChild(line1);\n\n      contentWidth = wrapText.AABBBounds.width();\n      contentHeight = wrapText.AABBBounds.height();\n    }\n  } else {\n    // // icon分类\n    // icons.forEach(icon => {\n    //   switch (icon.positionType) {\n    //     case IconPosition.left:\n    //       leftIcons.push(icon);\n    //       break;\n    //     case IconPosition.right:\n    //       rightIcons.push(icon);\n    //       break;\n    //     case IconPosition.contentLeft:\n    //       contentLeftIcons.push(icon);\n    //       break;\n    //     case IconPosition.contentRight:\n    //       contentRightIcons.push(icon);\n    //       break;\n    //     // case IconPosition.absoluteLeft:\n    //     //   absoluteLeftIcons.push(icon);\n    //     //   break;\n    //     case IconPosition.absoluteRight:\n    //       absoluteRightIcons.push(icon);\n    //       break;\n    //     case IconPosition.inlineFront:\n    //       inlineFrontIcons.push(icon);\n    //       break;\n    //     case IconPosition.inlineEnd:\n    //       inlineEndIcons.push(icon);\n    //       break;\n    //   }\n    // });\n\n    // // 添加非cell icon & absolute icon\n    // leftIcons.forEach(icon => {\n    //   const iconMark = dealWithIcon(icon, undefined, cellGroup.col, cellGroup.row, range, table);\n    //   iconMark.role = 'icon-left';\n    //   iconMark.name = icon.name;\n    //   iconMark.setAttribute('x', leftIconWidth + (iconMark.attribute.marginLeft ?? 0));\n    //   leftIconWidth +=\n    //     iconMark.AABBBounds.width() + (iconMark.attribute.marginLeft ?? 0) + (iconMark.attribute.marginRight ?? 0);\n    //   leftIconHeight = Math.max(leftIconHeight, iconMark.AABBBounds.height());\n    //   cellGroup.appendChild(iconMark);\n    // });\n\n    // rightIcons.forEach(icon => {\n    //   const iconMark = dealWithIcon(icon, undefined, cellGroup.col, cellGroup.row, range, table);\n    //   iconMark.role = 'icon-right';\n    //   iconMark.name = icon.name;\n    //   iconMark.setAttribute('x', rightIconWidth + (iconMark.attribute.marginLeft ?? 0));\n    //   rightIconWidth +=\n    //     iconMark.AABBBounds.width() + (iconMark.attribute.marginLeft ?? 0) + (iconMark.attribute.marginRight ?? 0);\n    //   rightIconHeight = Math.max(rightIconHeight, iconMark.AABBBounds.height());\n    //   cellGroup.appendChild(iconMark);\n    // });\n\n    // absoluteLeftIcons.forEach(icon => {\n    //   const iconMark = dealWithIcon(icon, undefined, cellGroup.col, cellGroup.row, range, table);\n    //   iconMark.role = 'icon-absolute-left';\n    //   iconMark.name = icon.name;\n    //   iconMark.setAttribute('x', absoluteLeftIconWidth + (iconMark.attribute.marginLeft ?? 0));\n    //   absoluteLeftIconWidth +=\n    //     iconMark.AABBBounds.width() + (iconMark.attribute.marginLeft ?? 0) + (iconMark.attribute.marginRight ?? 0);\n    //   cellGroup.appendChild(iconMark);\n    // });\n\n    // absoluteRightIcons.forEach(icon => {\n    //   const iconMark = dealWithIcon(icon, undefined, cellGroup.col, cellGroup.row, range, table);\n    //   iconMark.role = 'icon-absolute-right';\n    //   iconMark.name = icon.name;\n    //   iconMark.setAttribute('x', absoluteRightIconWidth + (iconMark.attribute.marginLeft ?? 0));\n    //   absoluteRightIconWidth +=\n    //     iconMark.AABBBounds.width() + (iconMark.attribute.marginLeft ?? 0) + (iconMark.attribute.marginRight ?? 0);\n    //   cellGroup.appendChild(iconMark);\n    // });\n\n    const {\n      inlineFrontIcons,\n      inlineEndIcons,\n      contentLeftIcons,\n      contentRightIcons,\n      leftIconWidth: layoutLeftIconWidth,\n      // leftIconHeight: layoutLeftIconHeight,\n      rightIconWidth: layoutRightIconWidth,\n      // rightIconHeight: layoutRightIconHeight,\n      // absoluteLeftIconWidth: layoutAbsoluteLeftIconWidth,\n      absoluteRightIconWidth: layoutAbsoluteRightIconWidth\n    } = dealWithIconLayout(icons, cellGroup, range, table);\n\n    leftIconWidth = layoutLeftIconWidth;\n    // leftIconHeight = layoutLeftIconHeight;\n    rightIconWidth = layoutRightIconWidth;\n    // rightIconHeight = layoutRightIconHeight;\n    // absoluteLeftIconWidth = layoutAbsoluteLeftIconWidth;\n    absoluteRightIconWidth = layoutAbsoluteRightIconWidth;\n\n    // 添加text & content icon & inline icon\n    let textMark;\n    // 直接添加richtext / wrapText\n    if (inlineFrontIcons.length === 0 && inlineEndIcons.length === 0) {\n      let _contentOffset = 0;\n      if (isNumber(table.theme._contentOffset)) {\n        if (textAlign === 'left') {\n          _contentOffset = table.theme._contentOffset;\n        } else if (textAlign === 'right') {\n          _contentOffset = -table.theme._contentOffset;\n        }\n      }\n      const hierarchyOffset = range\n        ? getHierarchyOffset(range.start.col, range.start.row, table)\n        : getHierarchyOffset(cellGroup.col, cellGroup.row, table);\n      const { text, moreThanMaxCharacters } = breakString(textStr, table);\n\n      const attribute = {\n        text: text.length === 1 ? text[0] : text,\n        moreThanMaxCharacters,\n        maxLineWidth: autoColWidth\n          ? Infinity\n          : cellWidth - (padding[1] + padding[3]) - leftIconWidth - rightIconWidth - hierarchyOffset,\n        // fill: true,\n        // textAlign: 'left',\n        textBaseline: 'top',\n        // widthLimit: autoColWidth ? -1 : colWidth - (padding[1] + padding[3]),\n        heightLimit:\n          table.options.customConfig?.limitContentHeight === false\n            ? -1\n            : autoRowHeight && !table.options.customConfig?.multilinesForXTable\n            ? -1\n            : cellHeight - Math.floor(padding[0] + padding[2]),\n        pickable: false,\n        autoWrapText,\n        lineClamp,\n        wordBreak: 'break-word',\n        whiteSpace:\n          table.options.customConfig?.limitContentHeight === false\n            ? 'normal'\n            : text.length === 1 && !autoWrapText\n            ? 'no-wrap'\n            : 'normal',\n        dx: (textAlign === 'left' ? (!contentLeftIcons.length ? hierarchyOffset : 0) : 0) + _contentOffset,\n        keepCenterInLine: true\n      };\n      const wrapText = new Text(cellTheme.text ? (Object.assign({}, cellTheme.text, attribute) as any) : attribute);\n      wrapText.name = 'text';\n      textMark = wrapText;\n    } else {\n      const textOption = Object.assign(\n        {\n          text: textStr?.toString()\n        },\n        (cellGroup.parent as Group)?.theme?.userTheme?.text || {}\n      );\n      if (cellTheme.text) {\n        Object.assign(textOption, cellTheme.text);\n      }\n      textOption.textBaseline = 'middle';\n      const textConfig = [\n        ...inlineFrontIcons.map(icon => dealWithRichTextIcon(icon)),\n        textOption,\n        ...inlineEndIcons.map(icon => dealWithRichTextIcon(icon))\n      ];\n      textConfig[0].textAlign = textAlign;\n      const text = new RichText({\n        width: autoColWidth ? 0 : cellWidth - (padding[1] + padding[3]) - leftIconWidth - rightIconWidth,\n        height: autoRowHeight && autoWrapText ? 0 : Math.ceil(cellHeight - (padding[0] + padding[2])),\n        textConfig,\n        verticalDirection: autoRowHeight && autoWrapText ? 'top' : (textBaseline as any),\n\n        ellipsis: textOption.ellipsis\n        // verticalDirection: textBaseline as any\n        // textAlign: textAlign as any,\n        // textBaseline: textBaseline as any,\n      });\n      text.name = 'text';\n      textMark = text;\n      text.bindIconEvent();\n\n      if (range && (range.start.col !== range.end.col || range.start.row !== range.end.row)) {\n        text.onBeforeAttributeUpdate = onBeforeAttributeUpdate as any;\n      }\n    }\n\n    if (contentLeftIcons.length !== 0 || contentRightIcons.length !== 0) {\n      // 创建CellContent处理conten icon；有content icon，cellGroup: CellIcons + cellContent\n\n      const cellContent = new CellContent({\n        // x: padding[3] + leftIconWidth,\n        // y: padding[0],\n        x: 0,\n        y: 0,\n        fill: false,\n        stroke: false,\n        pickable: false\n      });\n      cellContent.name = 'content';\n\n      cellContent.setCellContentOption({\n        autoWidth: autoColWidth,\n        autoHeight: autoRowHeight,\n        cellWidth: cellWidth - (padding[1] + padding[3]) - leftIconWidth - rightIconWidth,\n        cellHeight: cellHeight - (padding[0] + padding[2]),\n        align: textAlign,\n        baseline: textBaseline\n      });\n      const dealWithIconComputeVar = {\n        addedHierarchyOffset: 0\n      }; //为了只增加一次indent的缩进值，如果有两个icon都dealWithIcon的话\n      contentLeftIcons.forEach(icon => {\n        const iconMark = dealWithIcon(\n          icon,\n          undefined,\n          cellGroup.col,\n          cellGroup.row,\n          range,\n          table,\n          dealWithIconComputeVar\n        );\n        iconMark.role = 'icon-content-left';\n        iconMark.name = icon.name;\n        cellContent.addLeftOccupyingIcon(iconMark);\n      });\n      contentRightIcons.forEach(icon => {\n        const iconMark = dealWithIcon(\n          icon,\n          undefined,\n          cellGroup.col,\n          cellGroup.row,\n          range,\n          table,\n          dealWithIconComputeVar\n        );\n        iconMark.role = 'icon-content-right';\n        iconMark.name = icon.name;\n        cellContent.addRightOccupyingIcon(iconMark);\n      });\n      cellContent.addContent(textMark);\n\n      cellGroup.appendChild(cellContent);\n      cellContent.layout();\n\n      contentWidth = cellContent.AABBBounds.width();\n      contentHeight = cellContent.AABBBounds.height();\n    } else {\n      // 没有content icon，cellGroup: CellIcons + wrapText/richtext\n      // cellGroup.appendChild(textMark);\n      if (cellGroup.firstChild) {\n        cellGroup.insertBefore(textMark, cellGroup.firstChild);\n      } else {\n        cellGroup.appendChild(textMark);\n      }\n      contentWidth = textMark.AABBBounds.width();\n      contentHeight = textMark.AABBBounds.height();\n    }\n  }\n\n  // 内容添加后单元格的宽高\n  const width = autoColWidth\n    ? leftIconWidth + contentWidth + rightIconWidth // + padding[1] + padding[3]\n    : cellWidth - (padding[1] + padding[3]);\n  // const height = autoRowHeight\n  //   ? Math.max(leftIconHeight, contentHeight, rightIconHeight) // + padding[0] + padding[2]\n  //   : cellHeight - (padding[0] + padding[2]);\n  const height = cellHeight - (padding[0] + padding[2]);\n\n  // 更新各个部分横向位置\n  cellGroup.forEachChildren((child: any) => {\n    if (child.role === 'icon-left') {\n      child.setAttribute('x', child.attribute.x + padding[3]);\n    } else if (child.role === 'icon-right') {\n      child.setAttribute('x', child.attribute.x + width - rightIconWidth + padding[3]);\n    } else if (child.role === 'icon-absolute-right') {\n      child.setAttribute('x', child.attribute.x + width - absoluteRightIconWidth + padding[3] + padding[1]);\n    } else if (child.name === 'content' || child.name === 'text') {\n      if (textAlign === 'center' && child.type !== 'richtext') {\n        child.setAttribute('x', padding[3] + leftIconWidth + (width - leftIconWidth - rightIconWidth) / 2);\n      } else if (textAlign === 'right' && child.type !== 'richtext') {\n        child.setAttribute('x', padding[3] + width - rightIconWidth);\n      } else {\n        child.setAttribute('x', padding[3] + leftIconWidth);\n      }\n    }\n  });\n\n  // 更新各个部分纵向位置\n  cellGroup.forEachChildren((child: any) => {\n    if (child.name === CUSTOM_CONTAINER_NAME) {\n      return;\n    }\n    if (textBaseline === 'middle') {\n      child.setAttribute('y', padding[0] + (height - child.AABBBounds.height()) / 2);\n    } else if (textBaseline === 'bottom') {\n      child.setAttribute('y', padding[0] + height - child.AABBBounds.height());\n    } else {\n      child.setAttribute('y', padding[0]);\n    }\n  });\n\n  // 更新cell Group宽高\n  cellGroup.setAttributes({\n    width: width + padding[1] + padding[3],\n    height: height + padding[0] + padding[2]\n  } as any);\n}\n\n/**\n * @description: icon option生成icon mark\n * @param {ColumnIconOption} icon\n * @return {*}\n */\nexport function dealWithIcon(\n  icon: ColumnIconOption,\n  mark?: Icon,\n  col?: number,\n  row?: number,\n  range?: CellRange,\n  table?: BaseTableAPI,\n  dealWithIconComputeVar?: {\n    addedHierarchyOffset: number;\n  }\n): Icon | TextIcon {\n  // positionType在外部处理\n  const iconAttribute = {} as any;\n\n  // 图片内容\n  if (icon.type === 'image') {\n    if (icon.isGif) {\n      iconAttribute.gif = icon.src;\n      iconAttribute.image = icon.src;\n    } else {\n      iconAttribute.image = icon.src;\n    }\n  } else if (icon.type === 'svg' || 'svg' in icon) {\n    iconAttribute.image = icon.svg;\n    // } else if (icon.type === 'path') {\n    //   // to do: 暂不支持\n    // } else if (icon.type === 'font') {\n    //   // to do: 暂不支持\n  }\n\n  // name\n  // iconAttribute.name = icon.name;\n  iconAttribute.width = icon.width;\n  iconAttribute.height = icon.height;\n  iconAttribute.visibleTime = icon.visibleTime ?? 'always';\n  iconAttribute.funcType = icon.funcType;\n  iconAttribute.interactive = icon.interactive;\n  iconAttribute.isGif = (icon as any).isGif;\n\n  let hierarchyOffset = 0;\n  if (\n    (!dealWithIconComputeVar || dealWithIconComputeVar?.addedHierarchyOffset === 0) &&\n    isNumber(col) &&\n    isNumber(row) &&\n    table &&\n    (icon.funcType === IconFuncTypeEnum.collapse ||\n      icon.funcType === IconFuncTypeEnum.expand ||\n      icon.positionType === IconPosition.contentLeft ||\n      icon.positionType === IconPosition.contentRight)\n  ) {\n    // compute hierarchy offset\n    // hierarchyOffset = getHierarchyOffset(col, row, table);\n    hierarchyOffset = range\n      ? getHierarchyOffset(range.start.col, range.start.row, table)\n      : getHierarchyOffset(col, row, table);\n    if (dealWithIconComputeVar) {\n      dealWithIconComputeVar.addedHierarchyOffset = 1;\n    }\n  }\n\n  iconAttribute.marginLeft = (icon.marginLeft ?? 0) + hierarchyOffset;\n  iconAttribute.marginRight = icon.marginRight ?? 0;\n\n  if (icon.interactive === false) {\n    iconAttribute.pickable = false;\n  }\n\n  if (icon.hover) {\n    iconAttribute.backgroundWidth = icon.hover.width ?? icon.width;\n    iconAttribute.backgroundHeight = icon.hover.width ?? icon.width;\n    iconAttribute.backgroundColor = icon.hover.bgColor ?? 'rgba(22,44,66,0.2)';\n    iconAttribute.hoverImage = icon.hover.image;\n  }\n\n  if (icon.cursor) {\n    iconAttribute.cursor = icon.cursor;\n  }\n\n  if ('shape' in icon && icon.shape === 'circle') {\n    iconAttribute.shape = icon.shape;\n  }\n\n  if (mark) {\n    mark.setAttributes(iconAttribute);\n    mark.loadImage(iconAttribute.image);\n    mark.tooltip = icon.tooltip;\n    mark.name = icon.name;\n    return mark;\n  }\n  // funcType, cursor, tooltip, hover在事件响应阶段处理\n\n  let iconMark: Icon | TextIcon;\n  if (icon.type === 'text') {\n    iconAttribute.text = icon.content;\n    merge(iconAttribute, icon.style);\n    iconMark = new TextIcon(iconAttribute);\n    iconMark.tooltip = icon.tooltip;\n    iconMark.name = icon.name;\n  } else {\n    iconMark = new Icon(iconAttribute);\n    iconMark.tooltip = icon.tooltip;\n    iconMark.name = icon.name;\n  }\n\n  return iconMark;\n}\n\n/**\n * @description: icon option生成richtext icon config\n * @param {ColumnIconOption} icon\n * @return {*}\n */\nexport function dealWithRichTextIcon(icon: ColumnIconOption) {\n  // positionType在外部处理\n  const config = {} as any;\n\n  // 图片内容\n  if (icon.type === 'image') {\n    config.image = icon.src;\n  } else if (icon.type === 'svg' || 'svg' in icon) {\n    config.image = icon.svg;\n    // } else if (icon.type === 'path') {\n    //   // to do: 暂不支持\n    // } else if (icon.type === 'font') {\n    //   // to do: 暂不支持\n  }\n\n  // name\n  config.visibleTime = icon.visibleTime ?? 'always';\n  config.funcType = icon.funcType;\n  config.id = icon.name;\n  config.width = icon.width;\n  config.height = icon.height;\n\n  if (icon.marginRight || icon.marginLeft) {\n    config.margin = [0, icon.marginRight ?? 0, 0, icon.marginLeft ?? 0];\n  }\n\n  if (icon.hover) {\n    config.backgroundWidth = icon.hover.width ?? icon.width;\n    config.backgroundHeight = icon.hover.height ?? icon.height;\n    config.backgroundShowMode = 'hover';\n    config.hoverImage = icon.hover.image;\n    config.backgroundStroke = false;\n    config.backgroundFill = icon.hover.bgColor ?? 'rgba(22,44,66,0.2)';\n  }\n\n  if (icon.cursor) {\n    config.cursor = icon.cursor;\n  }\n\n  config.tooltip = icon.tooltip;\n\n  // funcType, cursor, tooltip在事件响应阶段处理\n  return config;\n}\n\n/**\n * @description: 更新单元格内容宽度\n * @param {Group} cellGroup\n * @param {number} distWidth\n * @param {boolean} autoRowHeight\n * @return {*}\n */\nexport function updateCellContentWidth(\n  cellGroup: Group,\n  distWidth: number,\n  cellHeight: number,\n  detaX: number,\n  autoRowHeight: boolean,\n  padding: [number, number, number, number],\n  textAlign: CanvasTextAlign,\n  textBaseline: CanvasTextBaseline,\n  scene: Scenegraph\n): boolean {\n  if (isValidNumber(cellGroup.contentWidth)) {\n    detaX = distWidth - (cellGroup.contentWidth ?? cellGroup.attribute.width);\n  }\n  let leftIconWidth = 0;\n  let leftIconHeight = 0;\n  let rightIconWidth = 0;\n  let rightIconHeight = 0;\n  // let hasIcon = false;\n  cellGroup.forEachChildren((iconMark: Icon) => {\n    if (iconMark.role === 'icon-left') {\n      leftIconWidth +=\n        iconMark.AABBBounds.width() + (iconMark.attribute.marginLeft ?? 0) + (iconMark.attribute.marginRight ?? 0);\n      leftIconHeight = Math.max(leftIconHeight, iconMark.AABBBounds.height());\n    } else if (iconMark.role === 'icon-right') {\n      rightIconWidth +=\n        iconMark.AABBBounds.width() + (iconMark.attribute.marginLeft ?? 0) + (iconMark.attribute.marginRight ?? 0);\n      rightIconHeight = Math.max(rightIconHeight, iconMark.AABBBounds.height());\n    }\n  });\n\n  // 记录原始内容高度\n  let oldTextHeight;\n  const textMark = cellGroup.getChildByName('text');\n  const cellContent = cellGroup.getChildByName('content') as CellContent;\n  let contentHeight: number;\n  if (textMark instanceof Text) {\n    oldTextHeight = textMark.AABBBounds.height();\n    textMark.setAttribute(\n      'maxLineWidth',\n      distWidth -\n        leftIconWidth -\n        rightIconWidth -\n        (padding[1] + padding[3]) -\n        (textMark.attribute.dx ?? 0) -\n        (scene.table.theme._contentOffset ?? 0)\n    );\n    // contentWidth = textMark.AABBBounds.width();\n    contentHeight = textMark.AABBBounds.height();\n  } else if (textMark instanceof RichText) {\n    oldTextHeight = textMark.AABBBounds.height();\n    textMark.setAttribute('width', distWidth - leftIconWidth - rightIconWidth - (padding[1] + padding[3]));\n    // contentWidth = textMark.AABBBounds.width();\n    contentHeight = textMark.AABBBounds.height();\n  } else if (cellContent) {\n    oldTextHeight = cellContent.AABBBounds.height();\n    cellContent.updateWidth(distWidth - leftIconWidth - rightIconWidth - (padding[1] + padding[3]));\n    // contentWidth = cellContent.AABBBounds.width();\n    contentHeight = cellContent.AABBBounds.height();\n  }\n\n  const oldCellHeight = Math.round(Math.max(leftIconHeight, rightIconHeight, oldTextHeight) + padding[0] + padding[2]);\n\n  // 更新x方向位置\n  cellGroup.forEachChildren((child: any) => {\n    if (child.role === 'icon-left') {\n      // do nothing\n    } else if (child.role === 'icon-right') {\n      child.setAttribute('x', child.attribute.x + detaX);\n    } else if (child.role === 'icon-absolute-right') {\n      child.setAttribute('x', child.attribute.x + detaX);\n    } else if (child.name === 'content' || (child.name === 'text' && child.type !== 'richtext')) {\n      const childTextAlign = child.attribute.textAlign ?? textAlign;\n      if (childTextAlign === 'center') {\n        child.setAttribute(\n          'x',\n          padding[3] + leftIconWidth + (distWidth - (padding[1] + padding[3]) - leftIconWidth - rightIconWidth) / 2\n        );\n      } else if (childTextAlign === 'right') {\n        child.setAttribute('x', padding[3] + distWidth - (padding[1] + padding[3]) - rightIconWidth);\n      } else {\n        // left: do nothing\n      }\n    } else if (child.name === 'mark') {\n      child.setAttribute('x', cellGroup.attribute.width);\n    }\n  });\n\n  // 如果autoRowHeight && 高度改变 更新y方向位置\n  if (autoRowHeight) {\n    let newHeight = Math.max(leftIconHeight, contentHeight, rightIconHeight); // + padding[0] + padding[2]\n\n    if (isCellHeightUpdate(scene, cellGroup, Math.round(newHeight + padding[0] + padding[2]), oldCellHeight)) {\n      // cellGroup.setAttribute('height', newHeight + padding[0] + padding[2]);\n      return true;\n    }\n\n    newHeight = (cellGroup.contentHeight ?? cellHeight) - (padding[0] + padding[2]);\n\n    cellGroup.forEachChildren((child: any) => {\n      if (child.type === 'rect' || child.type === 'chart' || child.name === CUSTOM_CONTAINER_NAME) {\n        return;\n      }\n      if (child.name === 'mark') {\n        child.setAttribute('y', 0);\n      } else if (textBaseline === 'middle') {\n        child.setAttribute('y', padding[0] + (newHeight - child.AABBBounds.height()) / 2);\n      } else if (textBaseline === 'bottom') {\n        child.setAttribute('y', padding[0] + newHeight - child.AABBBounds.height());\n      } else {\n        child.setAttribute('y', padding[0]);\n      }\n    });\n  } else if (textBaseline === 'middle' || textBaseline === 'bottom') {\n    cellGroup.forEachChildren((child: any) => {\n      if (child.type === 'rect' || child.type === 'chart' || child.name === CUSTOM_CONTAINER_NAME) {\n        return;\n      }\n      if (child.name === 'mark') {\n        child.setAttribute('y', 0);\n      } else if (textBaseline === 'middle') {\n        child.setAttribute('y', (cellHeight - padding[2] + padding[0] - child.AABBBounds.height()) / 2);\n      } else if (textBaseline === 'bottom') {\n        child.setAttribute('y', cellHeight - child.AABBBounds.height() - padding[2]);\n      } else {\n        child.setAttribute('y', padding[0]);\n      }\n    });\n  }\n  return false;\n}\n\n/**\n * @description: 更新单元格内容宽度\n */\nexport function updateCellContentHeight(\n  cellGroup: Group,\n  distHeight: number,\n  detaY: number,\n  autoRowHeight: boolean,\n  padding: [number, number, number, number],\n  textAlign: CanvasTextAlign,\n  textBaseline: CanvasTextBaseline,\n  table: BaseTableAPI\n) {\n  const newHeight = distHeight - Math.floor(padding[0] + padding[2]);\n\n  const textMark = cellGroup.getChildByName('text');\n\n  if (textMark instanceof Text && !autoRowHeight) {\n    textMark.setAttributes({\n      heightLimit: table.options.customConfig?.limitContentHeight === false ? -1 : newHeight\n    } as any);\n  } else if (textMark instanceof RichText && !autoRowHeight) {\n    textMark.setAttributes({\n      height: newHeight\n    });\n  } else if (cellGroup.getChildByName('content')) {\n    const cellContent = cellGroup.getChildByName('content') as CellContent;\n    cellContent.updateHeight(newHeight);\n  }\n\n  // 更新y方向位置\n  cellGroup.forEachChildren((child: any) => {\n    child.setAttribute('dy', 0);\n    if (child.type === 'rect' || child.type === 'chart' || child.name === CUSTOM_CONTAINER_NAME) {\n      // do nothing\n    } else if (child.name === 'mark') {\n      child.setAttribute('y', 0);\n    } else if (textBaseline === 'middle') {\n      child.setAttribute('y', padding[0] + (newHeight - child.AABBBounds.height()) / 2);\n    } else if (textBaseline === 'bottom') {\n      child.setAttribute('y', padding[0] + newHeight - child.AABBBounds.height());\n    } else {\n      child.setAttribute('y', padding[0]);\n    }\n  });\n}\n\n/**\n * @description: 自适应行高模式下，判断当前单元格是否需要更新行高\n * @param {Scenegraph} scene\n * @param {Group} cellGroup\n * @param {number} newHeight\n * @param {number} oldHeight\n * @return {*}\n */\nfunction isCellHeightUpdate(scene: Scenegraph, cellGroup: Group, newHeight: number, oldHeight: number): boolean {\n  const table = scene.table;\n  const mergeInfo = getCellMergeInfo(table, cellGroup.col, cellGroup.row);\n\n  // let rowHeight: number = 0;\n  if (mergeInfo && mergeInfo.end.row - mergeInfo.start.row) {\n    oldHeight = oldHeight / (mergeInfo.end.row - mergeInfo.start.row + 1);\n    newHeight = newHeight / (mergeInfo.end.row - mergeInfo.start.row + 1);\n    for (let rowIndex = mergeInfo.start.row; rowIndex <= mergeInfo.end.row; rowIndex++) {\n      const rowHeight = table.getRowHeight(rowIndex);\n\n      if (rowHeight === oldHeight && newHeight !== rowHeight) {\n        // 当前行的自适应行高，是由本单元格撑起；如果当前单元格高度发生变化，则更新行高\n        return true;\n      } else if (newHeight > rowHeight) {\n        // 如果当前单元格高度超过目前所在行的行高，则更新行高\n        return true;\n      }\n    }\n  } else {\n    const rowHeight = table.getRowHeight(cellGroup.row);\n\n    if (rowHeight === oldHeight && newHeight !== rowHeight) {\n      // 当前行的自适应行高，是由本单元格撑起；如果当前单元格高度发生变化，则更新行高\n      return true;\n    } else if (newHeight > rowHeight) {\n      // 如果当前单元格高度超过目前所在行的行高，则更新行高\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function dealWithIconLayout(\n  icons: ColumnIconOption[],\n  cellGroup: Group,\n  range: CellRange | undefined,\n  table: BaseTableAPI\n) {\n  const leftIcons: ColumnIconOption[] = [];\n  const rightIcons: ColumnIconOption[] = [];\n  const contentLeftIcons: ColumnIconOption[] = [];\n  const contentRightIcons: ColumnIconOption[] = [];\n  const inlineFrontIcons: ColumnIconOption[] = [];\n  const inlineEndIcons: ColumnIconOption[] = [];\n  const absoluteLeftIcons: ColumnIconOption[] = [];\n  const absoluteRightIcons: ColumnIconOption[] = [];\n\n  let leftIconWidth = 0;\n  let leftIconHeight = 0;\n  let rightIconWidth = 0;\n  let rightIconHeight = 0;\n  let absoluteLeftIconWidth = 0;\n  let absoluteRightIconWidth = 0;\n\n  // icon分类\n  icons.forEach(icon => {\n    switch (icon.positionType) {\n      case IconPosition.left:\n        leftIcons.push(icon);\n        break;\n      case IconPosition.right:\n        rightIcons.push(icon);\n        break;\n      case IconPosition.contentLeft:\n        contentLeftIcons.push(icon);\n        break;\n      case IconPosition.contentRight:\n        contentRightIcons.push(icon);\n        break;\n      // case IconPosition.absoluteLeft:\n      //   absoluteLeftIcons.push(icon);\n      //   break;\n      case IconPosition.absoluteRight:\n        absoluteRightIcons.push(icon);\n        break;\n      case IconPosition.inlineFront:\n        inlineFrontIcons.push(icon);\n        break;\n      case IconPosition.inlineEnd:\n        inlineEndIcons.push(icon);\n        break;\n    }\n  });\n\n  // 添加非cell icon & absolute icon\n  leftIcons.forEach(icon => {\n    const iconMark = dealWithIcon(icon, undefined, cellGroup.col, cellGroup.row, range, table);\n    iconMark.role = 'icon-left';\n    iconMark.name = icon.name;\n    iconMark.setAttribute('x', leftIconWidth + (iconMark.attribute.marginLeft ?? 0));\n    leftIconWidth +=\n      iconMark.AABBBounds.width() + (iconMark.attribute.marginLeft ?? 0) + (iconMark.attribute.marginRight ?? 0);\n    leftIconHeight = Math.max(leftIconHeight, iconMark.AABBBounds.height());\n    cellGroup.appendChild(iconMark);\n  });\n\n  rightIcons.forEach(icon => {\n    const iconMark = dealWithIcon(icon, undefined, cellGroup.col, cellGroup.row, range, table);\n    iconMark.role = 'icon-right';\n    iconMark.name = icon.name;\n    iconMark.setAttribute('x', rightIconWidth + (iconMark.attribute.marginLeft ?? 0));\n    rightIconWidth +=\n      iconMark.AABBBounds.width() + (iconMark.attribute.marginLeft ?? 0) + (iconMark.attribute.marginRight ?? 0);\n    rightIconHeight = Math.max(rightIconHeight, iconMark.AABBBounds.height());\n    cellGroup.appendChild(iconMark);\n  });\n\n  absoluteLeftIcons.forEach(icon => {\n    const iconMark = dealWithIcon(icon, undefined, cellGroup.col, cellGroup.row, range, table);\n    iconMark.role = 'icon-absolute-left';\n    iconMark.name = icon.name;\n    iconMark.setAttribute('x', absoluteLeftIconWidth + (iconMark.attribute.marginLeft ?? 0));\n    absoluteLeftIconWidth +=\n      iconMark.AABBBounds.width() + (iconMark.attribute.marginLeft ?? 0) + (iconMark.attribute.marginRight ?? 0);\n    cellGroup.appendChild(iconMark);\n  });\n\n  absoluteRightIcons.forEach(icon => {\n    const iconMark = dealWithIcon(icon, undefined, cellGroup.col, cellGroup.row, range, table);\n    iconMark.role = 'icon-absolute-right';\n    iconMark.name = icon.name;\n    iconMark.setAttribute('x', absoluteRightIconWidth + (iconMark.attribute.marginLeft ?? 0));\n    absoluteRightIconWidth +=\n      iconMark.AABBBounds.width() + (iconMark.attribute.marginLeft ?? 0) + (iconMark.attribute.marginRight ?? 0);\n    cellGroup.appendChild(iconMark);\n  });\n\n  return {\n    leftIcons,\n    rightIcons,\n    contentLeftIcons,\n    contentRightIcons,\n    inlineFrontIcons,\n    inlineEndIcons,\n    absoluteLeftIcons,\n    absoluteRightIcons,\n    leftIconWidth,\n    leftIconHeight,\n    rightIconWidth,\n    rightIconHeight,\n    absoluteLeftIconWidth,\n    absoluteRightIconWidth\n  };\n}\n\nfunction onBeforeAttributeUpdate(val: Record<string, any>, attribute: any) {\n  if (val.hasOwnProperty('hoverIconId')) {\n    // @ts-ignore\n    const graphic = this as any;\n    if (graphic.skipMergeUpdate) {\n      return;\n    }\n\n    const cellGroup = getTargetCell(graphic) as Group;\n    if (!cellGroup || !cellGroup.stage) {\n      return;\n    }\n    const table = ((cellGroup as any).stage as any).table as BaseTableAPI;\n    graphic.skipAttributeUpdate = true;\n    const { mergeStartCol, mergeEndCol, mergeStartRow, mergeEndRow } = cellGroup;\n    if (\n      isValid(mergeStartCol) &&\n      isValid(mergeEndCol) &&\n      isValid(mergeStartRow) &&\n      isValid(mergeEndRow) &&\n      (mergeStartCol !== mergeEndCol || mergeStartRow !== mergeEndRow)\n    ) {\n      for (let col = mergeStartCol; col <= mergeEndCol; col++) {\n        for (let row = mergeStartRow; row <= mergeEndRow; row++) {\n          if (col === cellGroup.col && row === cellGroup.row) {\n            // update icon state\n            if (val.hoverIconId !== graphic.attribute.hoverIconId) {\n              const icon = graphic._frameCache.icons.get(val.hoverIconId);\n              graphic.updateHoverIconState(icon);\n            }\n            continue;\n          }\n          // const cell = table.scenegraph.getCell(col, row);\n          const cell = table.scenegraph.highPerformanceGetCell(col, row);\n          if (cell.role === 'cell') {\n            const target = cell.getChildByName(graphic.name, true);\n            if (!target || target.skipAttributeUpdate) {\n              continue;\n            }\n            if (val.hoverIconId !== target.attribute.hoverIconId) {\n              target.setAttribute('hoverIconId', val.hoverIconId);\n              cell.addUpdateBoundTag();\n            }\n          }\n        }\n      }\n      graphic.skipAttributeUpdate = undefined;\n    }\n  }\n}\n"]}