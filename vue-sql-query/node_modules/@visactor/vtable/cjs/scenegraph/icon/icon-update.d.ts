import type { Group } from '../graphic/group';
import type { Scenegraph } from '../scenegraph';
import type { ColumnIconOption, SortOrder } from '../../ts-types';
import type { Icon } from '../graphic/icon';
export declare function hideHoverIcon(col: number, row: number, scene: Scenegraph): void;
export declare function showHoverIcon(col: number, row: number, scene: Scenegraph): void;
export declare function hideClickIcon(col: number, row: number, scene: Scenegraph): void;
export declare function showClickIcon(col: number, row: number, scene: Scenegraph): void;
export declare function getIconByXY(col: number, row: number, x: number, y: number, scene: Scenegraph): Icon | undefined;
export declare function setIconHoverStyle(baseIcon: Icon, col: number, row: number, cellGroup: Group, scene: Scenegraph): void;
export declare function setIconNormalStyle(baseIcon: Icon, col: number, row: number, scene: Scenegraph): void;
export declare function updateIcon(baseIcon: Icon, iconConfig: ColumnIconOption, col: number, row: number, scene: Scenegraph): void;
export declare function updateSortIcon(options: {
    col: number;
    row: number;
    iconMark: Icon;
    order: SortOrder;
    oldSortCol: number;
    oldSortRow: number;
    oldIconMark: Icon | undefined;
    scene: Scenegraph;
}): void;
export declare function updateFrozenIcon(scene: Scenegraph): void;
export declare function updateHierarchyIcon(col: number, row: number, scene: Scenegraph): void;
export declare function updateCellGroupIcon(cellGroup: Group, filter: (icon: Icon) => boolean, dealer: (icon: Icon) => void): void;
export declare function updateCellRangeIcon(col: number, row: number, filter: (icon: Icon) => boolean, dealer: (icon: Icon) => void, scene: Scenegraph): void;
export declare function residentHoverIcon(col: number, row: number, scene: Scenegraph): void;
export declare function resetResidentHoverIcon(col: number, row: number, scene: Scenegraph): void;
