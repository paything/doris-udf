import type { ColumnIconOption, SvgIcon } from '../ts-types';
import { Style } from './style/Style';
import type { BaseTableAPI } from '../ts-types/base-table';
import { CheckboxStyle } from './style/CheckboxStyle';
import { RadioStyle } from './style/RadioStyle';
import { SwitchStyle } from './style/SwitchStyle';
import { ButtonStyle } from './style/ButtonStyle';
export declare class BodyHelper {
    expandIcon: SvgIcon;
    collapseIcon: SvgIcon;
    _table: BaseTableAPI;
    constructor(_table: BaseTableAPI);
    getIcons(col: number, row: number, cellValue: any, dataValue: any, context: CanvasRenderingContext2D): ColumnIconOption[];
    getStyleClass(cellType: 'text' | 'link' | 'image' | 'video' | 'chart' | 'sparkline' | 'progressbar' | 'chart' | 'checkbox' | 'radio' | 'switch' | 'button'): typeof Style | typeof RadioStyle | typeof SwitchStyle | typeof ButtonStyle | typeof CheckboxStyle;
    getCellIconFromRecordValue(icon: ColumnIconOption, col: number, row: number): ColumnIconOption;
    getCellIconFromRecordValue(icon: ColumnIconOption[], col: number, row: number): ColumnIconOption[];
    getCellIconFromRecordValue(icon: ColumnIconOption | ColumnIconOption[], col: number, row: number): ColumnIconOption | ColumnIconOption[];
    getHierarchyIcon(col: number, row: number): SvgIcon;
    getHierarchyIconWidth(): number;
}
