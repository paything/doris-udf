{"version":3,"sources":["../src/ts-types/theme.ts"],"names":[],"mappings":"","file":"theme.js","sourcesContent":["/* eslint-disable sort-imports */\nimport type { ColorsDef, LineDashsDef, LineWidthsDef, LineWidthsPropertyDefine, LineDashsPropertyDefine } from '.';\nimport type { ButtonStyle, CheckboxStyle, ITextStyleOption, RadioStyle, SwitchStyle } from './column/style';\nimport type { ColorPropertyDefine, ColorsPropertyDefine } from './style-define';\nimport type { ICellAxisOption } from './component/axis';\nimport type { PopTipAttributes } from './../vrender';\n// ****** Custom Theme *******\nexport type PartialTableThemeDefine = Partial<ITableThemeDefine>;\nexport type ThemeStyle = ITextStyleOption & {\n  hover?: Omit<InteractionStyle, 'cellBorderColor' | 'cellBorderLineWidth'>; //鼠标hover到某个单元格\n  select?: {\n    inlineRowBgColor?: ColorPropertyDefine; //交互所在整行的背景颜色\n    inlineColumnBgColor?: ColorPropertyDefine; //交互所在整列的背景颜色\n    cellBgColor?: ColorPropertyDefine; //交互所在单元格的背景颜色\n  };\n  frameStyle?: FrameStyle;\n};\nexport type InteractionStyle = {\n  cellBorderColor?: ColorsPropertyDefine; //交互所在单元格的边框颜色\n  cellBorderLineWidth?: LineWidthsPropertyDefine;\n  // cellBorderLineDash?:LineDashsPropertyDefine,//用到的场景应该不多\n  cellBgColor?: ColorPropertyDefine; //交互所在单元格的背景颜色\n  // inlineRowBorderColor?: ColorsPropertyDefine,//交互所在整行的边框颜色\n  inlineRowBgColor?: ColorPropertyDefine; //交互所在整行的背景颜色\n  // inlineColBorderColor?: ColorsPropertyDefine,//交互所在整列的边框颜色\n  inlineColumnBgColor?: ColorPropertyDefine; //交互所在整列的背景颜色\n  // headerHighlightBorderColor?:ColorPropertyDefine,//表头底部高亮线\n};\nexport type FrameStyle = {\n  borderColor?: ColorsDef;\n  borderLineWidth?: LineWidthsDef;\n  borderLineDash?: LineDashsDef;\n  innerBorder?: boolean;\n};\nexport type TableFrameStyle = FrameStyle & {\n  shadowBlur?: number; //阴影宽度\n  shadowOffsetX?: number; //x方向偏移\n  shadowOffsetY?: number; //Y方向偏移\n  shadowColor?: string; //阴影颜色\n  cornerRadius?: number | [number, number, number, number]; //边框圆角半径\n};\nexport type menuStyle = {\n  color?: string;\n  highlightColor?: string;\n  fontSize?: number;\n  fontFamily?: string;\n  highlightFontSize?: number;\n  highlightFontFamily?: string;\n  hoverBgColor?: string;\n};\nexport type ScrollStyle = {\n  /**滚动条滚动的颜色 */\n  scrollRailColor?: string;\n  /**滚动条滑块的颜色 */\n  scrollSliderColor?: string;\n  /**滚动条滑块的圆角半径 */\n  scrollSliderCornerRadius?: number;\n  /**滚动条宽度大小 */\n  width?: number;\n  /**滚动条是否可见  'always' | 'scrolling' | 'none' | 'focus',常驻|滚动时|不显示|聚焦在画布上时 。默认'scrolling'*/\n  visible?: 'always' | 'scrolling' | 'none' | 'focus';\n  horizontalVisible?: 'always' | 'scrolling' | 'none' | 'focus';\n  verticalVisible?: 'always' | 'scrolling' | 'none' | 'focus';\n  /*** 悬浮与容器上，还是独立于容器外 */\n  hoverOn?: boolean;\n  /** 是否显示到容器的边缘 尽管内容没有撑满的情况下 默认false */\n  barToSide?: boolean;\n  /** 横向滚动条 padding */\n  horizontalPadding?: number | [number, number, number, number];\n  /** 竖向滚动条 padding */\n  verticalPadding?: number | [number, number, number, number];\n};\n/**\n * 气泡框，按钮的的解释信息\n */\nexport type TooltipStyle = {\n  fontFamily?: string;\n  fontSize?: number;\n  color?: string;\n  padding?: number[];\n  bgColor?: string;\n  maxWidth?: number;\n  maxHeight?: number;\n  /** !目前未实现该逻辑。触发行为：hover or click */\n  // trigger?: string | string[];\n  /**气泡框位置，可选 top left right bottom */\n  // placement?: Placement;\n};\nexport interface ITableThemeDefine {\n  /** 表格绘制范围外的canvas上填充的颜色 */\n  underlayBackgroundColor?: string;\n  // selectionBgColor?: ColorPropertyDefine; //多选单元格背景色 手动设置的多选 非框选\n  defaultStyle?: ThemeStyle;\n  cornerHeaderStyle?: ThemeStyle; //角头样式\n  cornerRightTopCellStyle?: ThemeStyle; // 右上角占位单元格样式\n  cornerLeftBottomCellStyle?: ThemeStyle; // 左下角占位单元格样式\n  cornerRightBottomCellStyle?: ThemeStyle; // 右下角占位单元格样式\n  rightFrozenStyle?: ThemeStyle; // 右侧冻结单元格样式\n  bottomFrozenStyle?: ThemeStyle; // 下部冻结单元格样式\n  headerStyle?: ThemeStyle;\n  rowHeaderStyle?: ThemeStyle;\n  bodyStyle?: ThemeStyle;\n  groupTitleStyle?: ThemeStyle;\n  frameStyle?: TableFrameStyle;\n  //列调整宽度的直线\n  columnResize?: {\n    visibleOnHover?: boolean; //是否在hover时显示\n    lineColor?: ColorPropertyDefine; //上面线的颜色\n    bgColor?: ColorPropertyDefine; //背景线的颜色\n    lineWidth?: number; //上面线的宽度\n    width?: number; //背景线的宽度\n    resizeHotSpotSize?: number; //响应调整行高列宽交互行为热区的大小\n    labelVisible?: boolean; //是否显示label\n    labelColor?: string; //label的颜色\n    labelFontSize?: number; //label的字体大小\n    labelFontFamily?: string; //label的字体\n    labelBackgroundFill?: string; //label的背景填充\n    labelBackgroundCornerRadius?: number; //label的背景圆角\n  };\n  //拖拽表格换位分割线的样式\n  dragHeaderSplitLine?: {\n    lineColor: ColorPropertyDefine; //上面线的颜色\n    lineWidth: number; //上面线的宽度\n    shadowBlockColor?: string; //拖拽时阴影区域的颜色\n  };\n  //冻结列后面的效果\n  frozenColumnLine?: {\n    shadow?: {\n      //默认效果 会有阴影配置\n      width: number; //阴影整体宽度\n      startColor: string; //开始颜色\n      endColor: string; //结束颜色\n      /**滚动条是否可见  'always' | 'scrolling' | 'none' | 'focus',常驻|滚动时|不显示|聚焦在画布上时 。默认'scrolling'*/\n      visible?: 'always' | 'scrolling';\n    };\n    /** TODO  暂未生效 */\n    border?: {\n      //有些需求要两种效果 这里配置滚动前的边框效果（实现方式是两条线叠加产生），滚动后按上面的阴影效果\n      lineColor: ColorPropertyDefine; //上面线的颜色\n      bgColor?: ColorPropertyDefine; //背景线的颜色\n      lineWidth: number; //上面线的宽度\n      width?: number; //背景线的宽度\n    };\n  };\n\n  // menuStyle?: menuStyle;\n  scrollStyle?: ScrollStyle;\n  tooltipStyle?: TooltipStyle;\n  // selectHeaderHighlight?: boolean;\n  /** 选择框样式 */\n  selectionStyle?: //Omit<InteractionStyle, 'inlineRowBgColor' | 'inlineColumnBgColor'>; //鼠标点击到某个单元格\n  {\n    cellBorderColor?: string; //边框颜色\n    cellBorderLineWidth?: number; //边框线宽度\n    cellBgColor?: string; //选择框背景颜色\n    inlineRowBgColor?: string; //交互所在整行的背景颜色\n    inlineColumnBgColor?: string; //交互所在整列的背景颜色\n    selectionFillMode?: 'overlay' | 'replace'; //选择框填充模式，overlay表示选择框背景色覆盖在表格上（需要配饰透明度），replace表示背景色替换原有单元格的背景色\n    dynamicUpdateSelectionSize?: boolean; // 选择框大小随滚动动态变化，用于冻结并且背景透明的场景，默认false，开启后性能会有一定影响\n  };\n\n  // style for axis\n  axisStyle?: {\n    defaultAxisStyle?: Omit<ICellAxisOption, 'type' | 'domain' | 'range' | 'orient' | '__ticksForVTable'>;\n    leftAxisStyle?: Omit<ICellAxisOption, 'type' | 'domain' | 'range' | 'orient' | '__ticksForVTable'>;\n    rightAxisStyle?: Omit<ICellAxisOption, 'type' | 'domain' | 'range' | 'orient' | '__ticksForVTable'>;\n    topAxisStyle?: Omit<ICellAxisOption, 'type' | 'domain' | 'range' | 'orient' | '__ticksForVTable'>;\n    bottomAxisStyle?: Omit<ICellAxisOption, 'type' | 'domain' | 'range' | 'orient' | '__ticksForVTable'>;\n  };\n\n  checkboxStyle?: CheckboxStyle;\n  radioStyle?: RadioStyle;\n  switchStyle?: SwitchStyle;\n  buttonStyle?: ButtonStyle;\n\n  // style for text pop tip\n  textPopTipStyle?: PopTipAttributes;\n\n  // senior config for fs\n  // 表格四侧单元格，靠近边缘的border是否需要再绘制；如配置false的话，当表格左侧frame未设置情况下左侧单元格不显示左边框，其他方向同理\n  cellInnerBorder?: boolean;\n  // cell border clip direction\n  cellBorderClipDirection?: 'top-left' | 'bottom-right'; // default is 'top-left'\n  // text offset, hack for fs\n  _contentOffset?: number;\n  /** 内部功能性按钮图标颜色及尺寸配置 */\n  functionalIconsStyle?: {\n    sort_color?: string;\n    sort_color_opacity?: string;\n    sort_color_2?: string;\n    sort_color_opacity_2?: string;\n    sort_size?: number;\n    sort_size_2?: number;\n    frozen_color?: string;\n    frozen_color_opacity?: string;\n    frozen_color_2?: string;\n    frozen_color_opacity_2?: string;\n    frozen_size?: number;\n    frozen_size_2?: number;\n    collapse_color?: string;\n    collapse_color_opacity?: string;\n    collapse_size?: number;\n    collapse_size_2?: number;\n    expand_color?: string;\n    expand_color_opacity?: string;\n    expand_size?: number;\n    expand_size_2?: number;\n    dragReorder_color?: string;\n    dragReorder_color_opacity?: string;\n    dragReorder_size?: number;\n  };\n}\n\nexport type RequiredTableThemeDefine = Required<ITableThemeDefine>;\n"]}