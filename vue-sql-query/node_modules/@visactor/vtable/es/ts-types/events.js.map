{"version":3,"sources":["../src/ts-types/events.ts"],"names":[],"mappings":"","file":"events.js","sourcesContent":["import type {\n  CellAddress,\n  CellRange,\n  CellLocation,\n  FieldDef,\n  CellAddressWithBound,\n  ListTableConstructorOptions,\n  PivotTableConstructorOptions\n} from './table-engine';\nimport type { DropDownMenuEventArgs, MenuListItem, PivotInfo } from './menu';\n\nimport type { IDimensionInfo, MergeCellInfo, RectProps, SortOrder } from './common';\nimport type { IconFuncTypeEnum, CellInfo, HierarchyState } from '.';\nimport type { Icon } from '../scenegraph/graphic/icon';\nimport type { FederatedPointerEvent, IEventTarget } from './../vrender';\nimport type { BaseTableConstructorOptions } from './base-table';\n\nexport type KeyboardEventListener = (e: KeyboardEvent) => void;\nexport type TableEventListener<TYPE extends keyof TableEventHandlersEventArgumentMap> = (\n  args: TableEventHandlersEventArgumentMap[TYPE]\n) => TableEventHandlersReturnMap[TYPE]; //AnyFunction;\nexport type EventListenerId = number;\n\nexport type SelectedCellEvent = CellAddress & {\n  ranges: CellRange[];\n};\n\n// export type MouseCellEvent = CellAddress & {\n//   event: MouseEvent | PointerEvent | TouchEvent;\n// };\n\nexport type MenuEvent = CellAddress & {\n  dropDownMenu: MenuListItem[];\n  pivotInfo: PivotInfo;\n};\n\nexport type TouchCellEvent = CellAddress & {\n  event: TouchEvent;\n};\n\nexport type KeydownEvent = {\n  keyCode: number;\n  code: string;\n  event: KeyboardEvent;\n  stopCellMoving?: () => void;\n  scaleRatio?: number;\n};\n\nexport type MousePointerCellEvent = CellAddressWithBound &\n  CellInfo & {\n    scaleRatio?: number;\n    targetIcon?: { name: string; position: RectProps; funcType: string };\n    event?: MouseEvent | PointerEvent | TouchEvent;\n    federatedEvent?: FederatedPointerEvent;\n    target: IEventTarget | undefined;\n\n    mergeCellInfo?: MergeCellInfo;\n  };\n// 多单元格的事件传出参数 需要将当前鼠标处的单元格的信息FocusedCellInfo也带着\nexport type MousePointerMultiCellEvent = MousePointerCellEvent & {\n  cells: CellInfo[][];\n  // menuKey?: string;\n};\n\nexport type MousePointerSparklineEvent = MousePointerCellEvent & {\n  sparkline: {\n    pointData: any;\n  };\n};\n\nexport interface TableEventHandlersEventArgumentMap {\n  selected_cell: SelectedCellEvent;\n  selected_clear: {};\n  click_cell: MousePointerCellEvent;\n  dblclick_cell: MousePointerCellEvent;\n  mouseenter_table: { event?: MouseEvent | PointerEvent | TouchEvent };\n  mouseleave_table: { event?: MouseEvent | PointerEvent | TouchEvent };\n  mousedown_table: { event?: MouseEvent | PointerEvent | TouchEvent };\n  mousemove_table: MousePointerCellEvent;\n  mouseenter_cell: MousePointerCellEvent;\n  mouseleave_cell: MousePointerCellEvent;\n  mousemove_cell: MousePointerCellEvent;\n  mousedown_cell: MousePointerCellEvent;\n  mouseup_cell: MousePointerCellEvent;\n  contextmenu_cell: MousePointerMultiCellEvent;\n  before_keydown: KeydownEvent;\n  keydown: KeydownEvent;\n  scroll: {\n    event: WheelEvent;\n    scrollLeft: number;\n    scrollTop: number;\n    scrollWidth: number;\n    scrollHeight: number;\n    viewWidth: number;\n    viewHeight: number;\n    scrollDirection: 'horizontal' | 'vertical';\n    scrollRatioX?: number;\n    scrollRatioY?: number;\n    dx?: number;\n    dy?: number;\n  };\n  can_scroll: {\n    event: WheelEvent;\n    scrollLeft: number;\n    scrollTop: number;\n    scrollWidth: number;\n    scrollHeight: number;\n    viewWidth: number;\n    viewHeight: number;\n    scrollDirection: 'horizontal' | 'vertical';\n    scrollRatioX?: number;\n    scrollRatioY?: number;\n    dx?: number;\n    dy?: number;\n  };\n  scroll_vertical_end: {\n    scrollLeft: number;\n    scrollTop: number;\n    scrollWidth: number;\n    scrollHeight: number;\n    viewWidth: number;\n    viewHeight: number;\n  };\n  scroll_horizontal_end: {\n    scrollLeft: number;\n    scrollTop: number;\n    scrollWidth: number;\n    scrollHeight: number;\n    viewWidth: number;\n    viewHeight: number;\n  };\n  resize_column: { col: number; colWidth: number };\n  resize_column_end: { col: number; colWidths: number[] };\n  resize_row: { row: number; rowHeight: number };\n  resize_row_end: { row: number; rowHeight: number };\n  change_header_position: { source: CellAddress; target: CellAddress; event: Event };\n  change_header_position_start: {\n    col: number;\n    row: number;\n    x: number;\n    y: number;\n    backX: number;\n    lineX: number;\n    backY: number;\n    lineY: number;\n    event: Event;\n  };\n  changing_header_position: {\n    col: number;\n    row: number;\n    x: number;\n    y: number;\n    backX: number;\n    lineX: number;\n    backY: number;\n    lineY: number;\n    event: Event;\n  };\n  change_header_position_fail: { source: CellAddress; target: CellAddress; event: Event };\n  sort_click: {\n    field: FieldDef;\n    order: SortOrder;\n    event: Event;\n  };\n  after_sort: {\n    field: FieldDef;\n    order: SortOrder;\n    event: Event;\n  };\n  freeze_click: { col: number; row: number; fields: FieldDef[]; colCount: number };\n  dropdown_menu_click: DropDownMenuEventArgs;\n\n  mouseover_chart_symbol: MousePointerSparklineEvent;\n\n  drag_select_end: MousePointerMultiCellEvent;\n  copy_data: { cellRange: CellRange[]; copyData: string };\n  drillmenu_click: DrillMenuEventInfo;\n\n  dropdown_icon_click: CellAddress & { event: Event };\n  dropdown_menu_clear: CellAddress;\n\n  show_menu: {\n    x: number;\n    y: number;\n    col: number;\n    row: number;\n    type: 'dropDown' | 'contextmenu' | 'custom';\n  };\n  hide_menu: [];\n  icon_click: {\n    name: string;\n    col: number;\n    row: number;\n    x: number;\n    y: number;\n    funcType?: IconFuncTypeEnum | string;\n    icon: Icon;\n    event: Event;\n  };\n\n  pivot_sort_click: {\n    col: number;\n    row: number;\n    order: SortOrder;\n    dimensionInfo: IDimensionInfo[];\n    cellLocation: CellLocation;\n    event: Event;\n  };\n  tree_hierarchy_state_change: {\n    col: number;\n    row: number;\n    hierarchyState: HierarchyState;\n    dimensionInfo?: IDimensionInfo[];\n    /**整条数据-原始数据 */\n    originData?: any;\n    cellLocation?: CellLocation;\n  };\n  vchart_event_type: {\n    eventName: string;\n    col: number;\n    row: number;\n    chartEventArguments: any;\n  };\n  //datasource部分的事件\n  change_order: [];\n  source_length_update: number;\n\n  legend_item_click: { model: any; value: any; event: PointerEvent };\n  legend_item_hover: { model: any; value: any; event: PointerEvent };\n  legend_item_unHover: { model: any; value: any; event: PointerEvent };\n  legend_change: { model: any; value: any; event: PointerEvent };\n\n  mouseenter_axis: MousePointerCellEvent & { axisPosition: 'left' | 'right' | 'top' | 'bottom' };\n  mouseleave_axis: MousePointerCellEvent & { axisPosition: 'left' | 'right' | 'top' | 'bottom' };\n\n  checkbox_state_change: MousePointerCellEvent & { checked: boolean };\n  radio_state_change: MousePointerCellEvent & { radioIndexInCell: number | undefined };\n  switch_state_change: MousePointerCellEvent & { checked: boolean };\n  before_init: { options: BaseTableConstructorOptions; container: HTMLElement | null };\n  before_set_size: { width: number; height: number };\n  after_render: null;\n  initialized: null;\n\n  change_cell_value: {\n    col: number;\n    row: number;\n    rawValue: string | number;\n    currentValue: string | number;\n    changedValue: string | number;\n  };\n\n  mousedown_fill_handle: {};\n  drag_fill_handle_end: { direction?: 'top' | 'bottom' | 'left' | 'right' };\n  dblclick_fill_handle: {};\n\n  empty_tip_click: {};\n  empty_tip_dblclick: {};\n\n  button_click: {\n    col: number;\n    row: number;\n    event: Event;\n  };\n  before_cache_chart_image: { chartInstance: any };\n}\nexport interface DrillMenuEventInfo {\n  dimensionKey: string | number;\n  title: string;\n  drillDown: boolean;\n  drillUp: boolean;\n  col: number;\n  row: number;\n  event: Event;\n}\nexport interface TableEventHandlersReturnMap {\n  selected_cell: void;\n  selected_clear: void;\n  click_cell: void;\n  dblclick_cell: void;\n  mouseenter_table: void;\n  mouseleave_table: void;\n  mousedown_table: void;\n  mousemove_table: void;\n  mouseenter_cell: void;\n  mouseleave_cell: void;\n  // mouseover_cell: void;\n  mouseout_cell: void;\n  mousemove_cell: void;\n  mousedown_cell: boolean;\n  mouseup_cell: void;\n  contextmenu_cell: void;\n  before_keydown: void;\n  keydown: void;\n  scroll: void;\n  can_scroll: void | boolean;\n  focus_table: void;\n  blur_table: void;\n  resize_column: void;\n  resize_column_end: void;\n  resize_row: void;\n  resize_row_end: void;\n  change_header_position: void;\n  change_header_position_start: void;\n  changing_header_position: void;\n  change_header_position_fail: void;\n  sort_click: boolean;\n  after_sort: void;\n  freeze_click: void;\n  dropdown_menu_click: void;\n\n  mouseover_chart_symbol: void;\n  drag_select_end: void;\n  copy_data: void;\n  drillmenu_click: void;\n\n  dropdown_icon_click: void;\n  dropdown_menu_clear: void;\n\n  show_menu: void;\n  hide_menu: void;\n  icon_click: void;\n\n  pivot_sort_click: void;\n\n  tree_hierarchy_state_change: void;\n\n  vchart_event_type: void;\n  //datasource部分的事件\n  change_order: void;\n  source_length_update: void;\n  legend_item_click: void;\n  legend_item_hover: void;\n  legend_item_unHover: void;\n  legend_change: void;\n\n  mouseenter_axis: void;\n  mouseleave_axis: void;\n\n  checkbox_state_change: void;\n  radio_state_change: void;\n  switch_state_change: void;\n  before_init: void;\n  before_set_size: void;\n  after_render: void;\n  initialized: void;\n\n  change_cell_value: void;\n  mousedown_fill_handle: void;\n  drag_fill_handle_end: void;\n  dblclick_fill_handle: void;\n\n  scroll_vertical_end: void;\n\n  scroll_horizontal_end: void;\n\n  empty_tip_click: void;\n  empty_tip_dblclick: void;\n\n  button_click: void;\n  before_cache_chart_image: void;\n}\n"]}