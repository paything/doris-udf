{"version":3,"sources":["../src/components/react/react-custom-layout.ts"],"names":[],"mappings":"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","file":"react-custom-layout.js","sourcesContent":["import { Group } from './../../vrender';\nimport type { CustomRenderFunctionArg, ICustomLayoutFuc } from '../../ts-types';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport type { PivotHeaderLayoutMap } from '../../layout/pivot-header-layout';\nimport type { SimpleHeaderLayoutMap } from '../../layout';\n\nexport function emptyCustomLayout(args: CustomRenderFunctionArg) {\n  const group = new Group({});\n  return {\n    rootContainer: group,\n    renderDefault: true\n  };\n}\n\nexport class ReactCustomLayout {\n  removeAllContainer: () => void;\n  table: BaseTableAPI;\n  customLayoutFuncCache: Map<string, ICustomLayoutFuc>;\n  reactRemoveGraphicCache: Map<string, (col: number, row: number) => void>;\n  reactRemoveAllGraphicCache: Map<string, () => void>;\n  headerCustomLayoutFuncCache: Map<string, ICustomLayoutFuc>;\n  headerReactRemoveGraphicCache: Map<string, (col: number, row: number) => void>;\n  headerReactRemoveAllGraphicCache: Map<string, () => void>;\n  // reactContainerCache: Map<number, Map<string, any>>;\n  constructor(table: BaseTableAPI) {\n    // this.removeAllContainer = removeAllContainer;\n    this.table = table;\n    this.customLayoutFuncCache = new Map();\n    // this.reactContainerCache = new Map();\n    this.reactRemoveGraphicCache = new Map();\n    this.reactRemoveAllGraphicCache = new Map();\n    this.headerCustomLayoutFuncCache = new Map();\n    // this.headerCeactContainerCache = new Map();\n    this.headerReactRemoveGraphicCache = new Map();\n    this.headerReactRemoveAllGraphicCache = new Map();\n  }\n\n  hasReactCreateGraphic(componentId: string, isHeaderCustomLayout?: boolean) {\n    if (isHeaderCustomLayout) {\n      return this.headerCustomLayoutFuncCache.has(componentId);\n    }\n    return this.customLayoutFuncCache.has(componentId);\n  }\n\n  setReactCreateGraphic(\n    componentId: string,\n    createGraphic: ICustomLayoutFuc,\n    // containerCache: Map<string, any>,\n    isHeaderCustomLayout?: boolean\n  ) {\n    if (isHeaderCustomLayout) {\n      this.headerCustomLayoutFuncCache.set(componentId, createGraphic);\n    } else {\n      this.customLayoutFuncCache.set(componentId, createGraphic);\n    }\n    // this.reactContainerCache.set(componentId, containerCache);\n  }\n\n  setReactRemoveGraphic(\n    componentId: string,\n    removeGraphic: (col: number, row: number) => void,\n    isHeaderCustomLayout?: boolean\n  ) {\n    if (isHeaderCustomLayout) {\n      this.headerReactRemoveGraphicCache.set(componentId, removeGraphic);\n    } else {\n      this.reactRemoveGraphicCache.set(componentId, removeGraphic);\n    }\n  }\n\n  setReactRemoveAllGraphic(componentId: string, removeGraphic: () => void, isHeaderCustomLayout?: boolean) {\n    if (isHeaderCustomLayout) {\n      this.headerReactRemoveAllGraphicCache.set(componentId, removeGraphic);\n    } else {\n      this.reactRemoveAllGraphicCache.set(componentId, removeGraphic);\n    }\n  }\n\n  updateCustomCell(componentId: string, isHeaderCustomLayout?: boolean) {\n    const table = this.table;\n    // const col = componentId;\n    // // to do: deal with transpose table\n    // if (isHeaderCustomLayout) {\n    //   for (let row = 0; row < table.columnHeaderLevelCount; row++) {\n    //     table.scenegraph.updateCellContent(col, row);\n    //   }\n    // } else {\n    //   for (let row = table.columnHeaderLevelCount; row < table.rowCount; row++) {\n    //     table.scenegraph.updateCellContent(col, row);\n    //   }\n    // }\n\n    if (table.widthMode === 'autoWidth') {\n      table.scenegraph.recalculateColWidths();\n    }\n    if (\n      table.isAutoRowHeight() ||\n      (table.internalProps.defaultRowHeight === 'auto' && !isHeaderCustomLayout) ||\n      (table.internalProps.defaultHeaderRowHeight === 'auto' && isHeaderCustomLayout)\n    ) {\n      table.scenegraph.recalculateRowHeights();\n    }\n\n    if (table.isPivotTable()) {\n      const ranges = getUpdateCustomCellRangeInPivotTable(componentId, table, isHeaderCustomLayout);\n      for (let i = 0; i < ranges.length; i++) {\n        const range = ranges[i];\n        for (let col = range.start.col; col <= range.end.col; col++) {\n          for (let row = range.start.row; row <= range.end.row; row++) {\n            table.scenegraph.updateCellContent(col, row);\n          }\n        }\n      }\n    } else {\n      const range = getUpdateCustomCellRangeInListTable(componentId, table, isHeaderCustomLayout);\n      for (let col = range.start.col; col <= range.end.col; col++) {\n        for (let row = range.start.row; row <= range.end.row; row++) {\n          table.scenegraph.updateCellContent(col, row);\n        }\n      }\n    }\n\n    // table.scenegraph.updateNextFrame();\n    table.scenegraph.renderSceneGraph(); // use sync render for faster update\n  }\n\n  getCustomLayoutFunc(col: number, row: number) {\n    const isHeader = this.table.isHeader(col, row);\n    if (isHeader) {\n      const { componentId } = this.table.getHeaderDefine(col, row) as any;\n      return this.headerCustomLayoutFuncCache.get(componentId) ?? emptyCustomLayout;\n    }\n    const { componentId } = this.table.getBodyColumnDefine(col, row) as any;\n    return this.customLayoutFuncCache.get(componentId) || emptyCustomLayout;\n  }\n\n  removeCustomCell(col: number, row: number) {\n    // const { startInTotal } = this.table.getBodyColumnDefine(col, row) as any;\n    const isHeader = this.table.isHeader(col, row);\n    let removeFun;\n    if (isHeader) {\n      const define = this.table.getHeaderDefine(col, row);\n      const { componentId } = define as any;\n      removeFun = this.headerReactRemoveGraphicCache.get(componentId);\n    } else {\n      const define = this.table.getBodyColumnDefine(col, row);\n      const { componentId } = define as any;\n      removeFun = this.reactRemoveGraphicCache.get(componentId);\n    }\n    if (removeFun) {\n      removeFun(col, row);\n    }\n  }\n\n  clearCache() {\n    this.reactRemoveAllGraphicCache.forEach(removeFun => {\n      removeFun();\n    });\n    this.headerReactRemoveAllGraphicCache.forEach(removeFun => {\n      removeFun();\n    });\n  }\n\n  updateAllCustomCell() {\n    this.customLayoutFuncCache.forEach((createFun, componentId) => {\n      this.updateCustomCell(componentId);\n    });\n    this.headerCustomLayoutFuncCache.forEach((createFun, componentId) => {\n      this.updateCustomCell(componentId, true);\n    });\n  }\n}\n\nfunction getUpdateCustomCellRangeInListTable(componentId: string, table: BaseTableAPI, isHeaderCustomLayout?: boolean) {\n  const rowSeriesNumber = table.internalProps.rowSeriesNumber ? 1 : 0;\n  if (isHeaderCustomLayout) {\n    const layoutMap = table.internalProps.layoutMap as SimpleHeaderLayoutMap;\n    const { headerObjects } = table.internalProps.layoutMap;\n    let headerId: number;\n    for (let i = 0; i < headerObjects.length; i++) {\n      const headerObject = headerObjects[i];\n      if ((headerObject.define as any).componentId === componentId) {\n        headerId = headerObject.id as number;\n        break;\n      }\n    }\n\n    const startCell = layoutMap.getHeaderCellAdressById(headerId);\n    const range = layoutMap.getCellRange(startCell.col, startCell.row);\n    return range;\n\n    // let startCol = -1;\n    // let endCol = -1;\n    // let startRow = -1;\n    // let endRow = -1;\n    // for (let i = 0; i < _headerCellIds.length; i++) {\n    //   const row = _headerCellIds[i];\n    //   let rowHasObject = false;\n    //   for (let j = 0; j < row.length; j++) {\n    //     if (row[j] === headerId) {\n    //       rowHasObject = true;\n    //       if (transpose) {\n    //         // return { col: i, row: j };\n    //         startCol === -1 && (startCol = i);\n    //         startRow === -1 && (startRow = j);\n    //       } else {\n    //         // return { col: j + this.leftRowSeriesNumberColumnCount, row: i };\n    //         startCol === -1 && (startCol = j);\n    //         startRow === -1 && (startRow = i);\n    //       }\n    //     } else {\n    //       if (transpose) {\n    //         // endCol === -1 && startCol !== -1 && (endCol = i);\n    //         endRow === -1 && startRow !== -1 && (endRow = j - 1);\n    //       } else {\n    //         endCol === -1 && startCol !== -1 && (endCol = j - 1);\n    //         // endRow === -1 && startRow !== -1 && (endRow = i);\n    //       }\n    //     }\n\n    //     if (startCol !== -1 && endCol !== -1 && startRow !== -1 && endRow !== -1) {\n    //       break;\n    //     }\n    //   }\n\n    //   if (!rowHasObject) {\n    //     if (transpose) {\n    //       endCol === -1 && startCol !== -1 && (endCol = i - 1);\n    //     } else {\n    //       endRow === -1 && startRow !== -1 && (endRow = i - 1);\n    //     }\n    //   }\n\n    //   if (startCol !== -1 && endCol !== -1 && startRow !== -1 && endRow !== -1) {\n    //     break;\n    //   }\n    // }\n\n    // return {\n    //   startCol: startCol + rowSeriesNumber,\n    //   endCol: endCol + rowSeriesNumber,\n    //   startRow,\n    //   endRow\n    // };\n  }\n  const { columnObjects } = table.internalProps.layoutMap;\n  for (let i = 0; i < columnObjects.length; i++) {\n    const columnObject = columnObjects[i];\n    if ((columnObject.define as any).componentId === componentId) {\n      return {\n        start: {\n          col: rowSeriesNumber + i,\n          row: table.columnHeaderLevelCount\n        },\n        end: {\n          col: rowSeriesNumber + i,\n          row: table.rowCount - 1\n        }\n      };\n    }\n  }\n\n  return {\n    start: {\n      col: 0,\n      row: 0\n    },\n    end: {\n      col: table.colCount - 1,\n      row: table.rowCount - 1\n    }\n  };\n}\n\nfunction getUpdateCustomCellRangeInPivotTable(\n  componentId: string,\n  table: BaseTableAPI,\n  isHeaderCustomLayout?: boolean\n) {\n  const rowSeriesNumber = table.internalProps.rowSeriesNumber ? 1 : 0;\n  const ranges = [];\n  const layoutMap = table.internalProps.layoutMap as PivotHeaderLayoutMap;\n  if (isHeaderCustomLayout) {\n    const { headerObjects } = layoutMap;\n    const headerIds: number[] = [];\n    for (let i = 0; i < headerObjects.length; i++) {\n      const headerObject = headerObjects[i];\n      if (!headerObject) {\n        continue;\n      }\n      if ((headerObject.define as any).componentId === componentId) {\n        headerIds.push(headerObject.id as number);\n      }\n    }\n\n    for (let i = 0; i < headerIds.length; i++) {\n      const headerId = headerIds[i];\n      const startCell = layoutMap.getHeaderCellAdressById(headerId);\n      const range = layoutMap.getCellRange(startCell.col, startCell.row);\n      ranges.push(range);\n    }\n  } else {\n    let columnIndex: number;\n    const { columnObjects, indicatorsAsCol } = layoutMap;\n    for (let i = 0; i < columnObjects.length; i++) {\n      const columnObject = columnObjects[i];\n      if ((columnObject.define as any).componentId === componentId) {\n        columnIndex = i;\n        break;\n      }\n    }\n\n    if (indicatorsAsCol) {\n      for (\n        let column = layoutMap.rowHeaderLevelCount + columnIndex;\n        column < layoutMap.colCount;\n        column += columnObjects.length\n      ) {\n        const range = {\n          start: {\n            col: column + rowSeriesNumber,\n            row: layoutMap.columnHeaderLevelCount\n          },\n          end: {\n            col: column + rowSeriesNumber,\n            row: layoutMap.rowCount - 1\n          }\n        };\n        ranges.push(range);\n      }\n    } else {\n      for (\n        let row = layoutMap.columnHeaderLevelCount + columnIndex;\n        row < layoutMap.rowCount;\n        row += columnObjects.length\n      ) {\n        const range = {\n          start: {\n            col: layoutMap.rowHeaderLevelCount + rowSeriesNumber,\n            row: row\n          },\n          end: {\n            col: layoutMap.colCount - 1,\n            row: row\n          }\n        };\n        ranges.push(range);\n      }\n    }\n  }\n\n  return ranges;\n\n  // return {\n  //   startCol: 0,\n  //   endCol: table.colCount - 1,\n  //   startRow: 0,\n  //   endRow: table.rowCount - 1\n  // };\n}\n"]}