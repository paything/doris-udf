{"version":3,"sources":["../src/components/axis/band-scale.ts"],"names":[],"mappings":"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","file":"band-scale.js","sourcesContent":["import { BandScale } from '@visactor/vscale';\nimport { isArray } from '@visactor/vutils';\n\nexport class BandAxisScale {\n  _scale: BandScale;\n  _scales: BandScale[];\n  bandPadding?: number | number[];\n  paddingInner?: number | number[];\n  paddingOuter?: number | number[];\n\n  constructor() {\n    this._scale = new BandScale();\n    this._scales = [this._scale];\n  }\n\n  valueToPosition(value: any): number {\n    const bandStart = this._scale.scale(value);\n    return bandStart;\n  }\n\n  getPosition(values: any[]) {\n    let position = 0;\n    let bandScale = this._scale;\n    // 要不要性能优化？\n    // 优化有没有用？\n    if (this._scales.length === 1 || values.length === 1) {\n      position = this.valueToPosition(values[0]);\n    } else {\n      const max = Math.min(values.length, this._scales.length);\n      for (let i = 0; i < max; i++) {\n        position += this._scales[i].scale(values[i]);\n      }\n      bandScale = this._scales[max - 1];\n    }\n    return { position, bandScale };\n  }\n  calcScales(defalutBandInnerPadding: number, defalutBandOuterPadding: number) {\n    const { bandPadding, paddingInner, paddingOuter } = this;\n    const isBandPaddingArray = isArray(bandPadding);\n    const isPaddingInnerArray = isArray(paddingInner);\n    const isPaddingOuterArray = isArray(paddingOuter);\n    for (let i = 0; i < this._scales.length; i++) {\n      const _padding = isBandPaddingArray ? bandPadding[i] : bandPadding;\n      const _paddingInner = isPaddingInnerArray ? paddingInner[i] : paddingInner;\n      const _paddingOuter = isPaddingOuterArray ? paddingOuter[i] : paddingOuter;\n\n      this._scales[i]\n        .paddingInner(_paddingInner ?? _padding ?? defalutBandInnerPadding, true)\n        .paddingOuter(_paddingOuter ?? _padding ?? defalutBandOuterPadding);\n    }\n  }\n\n  dataToPosition(values: any[], cfg: any = {}): number {\n    if (values.length === 0 || this._scales.length === 0) {\n      return 0;\n    }\n    const { position, bandScale } = this.getPosition(values);\n\n    return position + bandScale.bandwidth() * (cfg.bandPosition ?? 0.5);\n  }\n\n  updateScaleDomain(domain: (number | string)[]) {\n    for (let i = 0; i < this._scales.length; i++) {\n      this._scales[i].domain(domain);\n    }\n    // this.transformScaleDomain();\n  }\n\n  updateRange(newRange: [number, number]) {\n    const [start, end] = this._scale.range();\n    if (newRange[0] !== start || newRange[1] !== end) {\n      this._scale.range(newRange);\n    }\n  }\n}\n"]}