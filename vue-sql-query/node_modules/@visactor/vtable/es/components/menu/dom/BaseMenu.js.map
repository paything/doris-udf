{"version":3,"sources":["../src/components/menu/dom/BaseMenu.ts"],"names":[],"mappings":"AAKA,MAAM,OAAgB,QAAQ;IAI5B,YAAY,KAAmB;QAC7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;SAC7B;QACD,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;IAChC,CAAC;IACO,eAAe;QACrB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAErD,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAGD,eAAe,CAAC,GAAW,EAAE,GAAW,EAAE,gBAAkC;QAC1E,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3C,OAAO,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,gBAAgB,CAAC,CAAC;IACzE,CAAC;IACD,iBAAiB;QACf,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3C,WAAW,CAAC,cAAc,EAAE,CAAC;IAC/B,CAAC;IAED,kBAAkB,CAAC,CAAS,EAAE,CAAS;QACrC,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3C,OAAO,WAAW,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9C,CAAC;IACD,cAAc;QACZ,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,WAAW,CAAC;IAC5C,CAAC;CACF","file":"BaseMenu.js","sourcesContent":["import type { MenuInstanceInfo } from '../../../ts-types';\nimport type { BaseTableAPI } from '../../../ts-types/base-table';\nimport type { MenuContainer } from './logic/MenuContainer';\nimport type { MenuElement } from './logic/MenuElement';\n\nexport abstract class BaseMenu {\n  protected _table: BaseTableAPI;\n  /** 弹出的菜单显示内容 */\n  private _menuElement?: MenuElement | MenuContainer;\n  constructor(table: BaseTableAPI) {\n    this._table = table;\n  }\n  release(): void {\n    this.unbindMenuElement();\n    if (this._menuElement) {\n      this._menuElement.release();\n    }\n    this._menuElement = undefined;\n  }\n  private _getMenuElement(): MenuElement | MenuContainer {\n    if (this._menuElement) {\n      return this._menuElement;\n    }\n    this._menuElement = this.createMenuElementInternal();\n\n    return this._menuElement;\n  }\n  /** 继承的具体类来实现 可以返回 MenuElement 或者 MenuContainer */\n  abstract createMenuElementInternal(): MenuElement | MenuContainer;\n  bindMenuElement(col: number, row: number, menuInstanceInfo: MenuInstanceInfo): boolean {\n    const menuElement = this._getMenuElement();\n    return menuElement.bindToCell(this._table, col, row, menuInstanceInfo);\n  }\n  unbindMenuElement(): void {\n    const menuElement = this._getMenuElement();\n    menuElement.unbindFromCell();\n  }\n  /** 鼠标坐标位置 是否位于下拉菜单内 */\n  pointInMenuElement(x: number, y: number): boolean {\n    const menuElement = this._getMenuElement();\n    return menuElement.pointInMenuElement(x, y);\n  }\n  getRootElement(): HTMLElement {\n    return this._getMenuElement().rootElement;\n  }\n}\n"]}