export class BaseTooltip {
    constructor(table) {
        this._table = table;
    }
    release() {
        var _a, _b;
        this.unbindTooltipElement(), this._tooltipElement && (null === (_b = (_a = this._tooltipElement).release) || void 0 === _b || _b.call(_a)), 
        this._tooltipElement = void 0;
    }
    _getTooltipElement() {
        return this._tooltipElement || (this._tooltipElement = this.createTooltipElementInternal()), 
        this._tooltipElement;
    }
    bindTooltipElement(col, row, tooltipInstanceInfo, confine) {
        return this._getTooltipElement().bindToCell(this._table, col, row, tooltipInstanceInfo, confine);
    }
    moveTooltipElement(col, row, tooltipOptions, confine) {
        this._getTooltipElement().move(this._table, col, row, tooltipOptions, confine);
    }
    unbindTooltipElement() {
        this._getTooltipElement().unbindFromCell();
    }
    locateTooltipElement(col, row, position, referencePosition, confine) {
        this._getTooltipElement()._locate(this._table, col, row, position, referencePosition, confine);
    }
}
//# sourceMappingURL=BaseTooltip.js.map
