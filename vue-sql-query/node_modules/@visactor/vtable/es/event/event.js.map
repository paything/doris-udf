{"version":3,"sources":["../src/event/event.ts"],"names":[],"mappings":"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","file":"event.js","sourcesContent":["// import { FederatedPointerEvent } from '@src/vrender';\nimport type { FederatedPointerEvent, Gesture, IEventTarget } from './../vrender';\nimport { RichText, vglobal } from './../vrender';\nimport type { ColumnDefine, ListTableConstructorOptions, MousePointerCellEvent } from '../ts-types';\nimport { IconFuncTypeEnum } from '../ts-types';\nimport type { StateManager } from '../state/state';\nimport type { Group } from '../scenegraph/graphic/group';\nimport { TABLE_EVENT_TYPE } from '../core/TABLE_EVENT_TYPE';\nimport type { Icon } from '../scenegraph/graphic/icon';\nimport { checkCellInSelect } from '../state/common/check-in-select';\nimport { bindMediaClick } from './media-click';\nimport { bindDrillEvent, checkHaveDrill, drillClick } from './drill';\nimport { bindSparklineHoverEvent } from './sparkline-event';\nimport type { BaseTableAPI } from '../ts-types/base-table';\nimport { checkHaveTextStick, handleTextStick } from '../scenegraph/stick-text';\nimport { bindGesture, bindTableGroupListener } from './listener/table-group';\nimport { bindScrollBarListener } from './listener/scroll-bar';\nimport { bindContainerDomListener } from './listener/container-dom';\nimport { bindTouchListener } from './listener/touch';\nimport { getCellEventArgsSet, type SceneEvent } from './util';\nimport { bindAxisClickEvent } from './self-event-listener/pivot-chart/axis-click';\nimport { bindAxisHoverEvent } from './self-event-listener/pivot-chart/axis-hover';\nimport type { PivotTable } from '../PivotTable';\nimport { Env } from '../tools/env';\nimport type { ListTable } from '../ListTable';\nimport { isValid } from '@visactor/vutils';\nimport { InertiaScroll } from './scroll';\nimport { isCellDisableSelect } from '../state/select/is-cell-select-highlight';\nimport { bindGroupTitleCheckboxChange, bindHeaderCheckboxChange } from './self-event-listener/list-table/checkbox';\nimport { bindButtonClickEvent } from './component/button';\nimport { bindIconClickEvent } from './self-event-listener/base-table/icon';\nimport { bindDropdownMenuClickEvent } from './self-event-listener/base-table/dropdown-menu';\nimport { bindDBClickAutoColumnWidthEvent } from './self-event-listener/base-table/dbclick-auto-column-width';\nimport { rightButtonClickEvent } from './self-event-listener/base-table/right-button-click';\n\nexport class EventManager {\n  table: BaseTableAPI;\n  // _col: number;\n  // _resizing: boolean = false;\n  // /** 为了能够判断canvas mousedown 事件 以阻止事件冒泡 */\n  // isPointerDownOnTable: boolean = false;\n  isTouchdown: boolean; // touch scrolling mode on\n  isTouchMove: boolean; // touchmove 事件中设置\n  touchMovePoints: {\n    x: number;\n    y: number;\n    timestamp: number;\n  }[]; // touch points record in touch scrolling mode\n  touchSetTimeout: any; // touch start timeout, use to distinguish touch scrolling mode and default touch event\n  touchEnd: boolean; // is touch event end when default touch event listener response\n  /** 是在touchSetTimeout中设置的true 延迟了500ms 如果在500ms内接入了touch事件 则取消touchSetTimeout逻辑 也就是不会将touchMode设置为true。这个是longTouch的逻辑 */\n  isLongTouch: boolean; // is touch listener working, use to disable document touch scrolling function\n  gesture: Gesture;\n  handleTextStickBindId: number[];\n\n  //鼠标事件记录。 PointerMove敏感度太高了 记录下上一个鼠标位置 在接收到PointerMove事件时做判断 是否到到触发框选或者移动表头操作的标准，防止误触\n  LastPointerXY: { x: number; y: number };\n  LastBodyPointerXY: { x: number; y: number };\n  isDown = false;\n  isDraging = false;\n  scrollYSpeed: number;\n  scrollXSpeed: number;\n  downIcon: IEventTarget; // 记录鼠标按下的sicon\n  //报错已绑定过的事件 后续清除绑定\n  globalEventListeners: {\n    name: string;\n    env: 'document' | 'body' | 'window' | 'vglobal';\n    callback: (e?: any) => void;\n  }[] = [];\n  inertiaScroll: InertiaScroll;\n\n  bindSparklineHoverEvent: boolean;\n\n  _enableTableScroll: boolean = true;\n  constructor(table: BaseTableAPI) {\n    this.table = table;\n    this.handleTextStickBindId = [];\n    this.inertiaScroll = new InertiaScroll(table.stateManager);\n    if (Env.mode === 'node' || table.options.disableInteraction) {\n      return;\n    }\n    this.bindOuterEvent();\n    setTimeout(() => {\n      this.bindSelfEvent();\n    }, 0);\n  }\n\n  // 绑定DOM事件\n  bindOuterEvent() {\n    bindTableGroupListener(this);\n    bindContainerDomListener(this);\n    bindScrollBarListener(this);\n    bindTouchListener(this);\n    bindGesture(this);\n  }\n  updateEventBinder() {\n    setTimeout(() => {\n      if (this.table.isReleased) {\n        return;\n      }\n\n      // 处理textStick 是否绑定SCROLL的判断\n      if (checkHaveTextStick(this.table) && this.handleTextStickBindId?.length === 0) {\n        this.handleTextStickBindId.push(\n          this.table.on(TABLE_EVENT_TYPE.SCROLL, e => {\n            handleTextStick(this.table);\n          })\n        );\n\n        this.handleTextStickBindId.push(\n          this.table.on(TABLE_EVENT_TYPE.RESIZE_COLUMN_END, e => {\n            handleTextStick(this.table);\n          })\n        );\n        this.handleTextStickBindId.push(\n          this.table.on(TABLE_EVENT_TYPE.RESIZE_ROW_END, e => {\n            handleTextStick(this.table);\n          })\n        );\n      } else if (!checkHaveTextStick(this.table) && this.handleTextStickBindId) {\n        this.handleTextStickBindId.forEach(id => {\n          this.table.off(id);\n        });\n        this.handleTextStickBindId = [];\n      }\n\n      // chart hover\n      bindSparklineHoverEvent(this.table);\n    }, 0);\n  }\n  bindSelfEvent() {\n    if (this.table.isReleased) {\n      return;\n    }\n\n    // 图标点击\n    bindIconClickEvent(this.table);\n\n    // 下拉菜单内容点击\n    bindDropdownMenuClickEvent(this.table);\n\n    // 处理textStick\n    // if (checkHaveTextStick(this.table)) {\n    //   this.handleTextStickBindId = this.table.on(TABLE_EVENT_TYPE.SCROLL, e => {\n    //     handleTextStick(this.table);\n    //   });\n    // }\n    this.updateEventBinder();\n\n    // link/image/video点击\n    bindMediaClick(this.table);\n\n    // 双击自动列宽\n    bindDBClickAutoColumnWidthEvent(this.table);\n\n    // drill icon\n    if (this.table.isPivotTable() && checkHaveDrill(this.table as PivotTable)) {\n      bindDrillEvent(this.table);\n    }\n\n    // chart hover\n    bindSparklineHoverEvent(this.table);\n\n    // axis click\n    bindAxisClickEvent(this.table);\n\n    // chart axis event\n    bindAxisHoverEvent(this.table);\n\n    // group title checkbox change\n    bindGroupTitleCheckboxChange(this.table);\n    // header checkbox change\n    bindHeaderCheckboxChange(this.table);\n\n    // button click\n    bindButtonClickEvent(this.table);\n\n    // right button click\n    rightButtonClickEvent(this.table);\n  }\n\n  dealTableHover(eventArgsSet?: SceneEvent) {\n    if (!eventArgsSet) {\n      this.table.stateManager.updateHoverPos(-1, -1);\n      return;\n    }\n    const { eventArgs } = eventArgsSet;\n\n    if (eventArgs) {\n      this.table.stateManager.updateHoverPos(eventArgs.col, eventArgs.row);\n    } else {\n      this.table.stateManager.updateHoverPos(-1, -1);\n    }\n  }\n\n  dealIconHover(eventArgsSet: SceneEvent) {\n    const { eventArgs } = eventArgsSet;\n\n    if (eventArgs) {\n      this.table.stateManager.updateHoverIcon(eventArgs.col, eventArgs.row, eventArgs.target, eventArgs.targetCell);\n    } else {\n      this.table.stateManager.updateHoverIcon(-1, -1, undefined, undefined);\n    }\n  }\n\n  dealMenuHover(eventArgsSet: SceneEvent) {\n    // menu自身状态实现\n  }\n\n  dealTableSelect(eventArgsSet?: SceneEvent, isSelectMoving?: boolean): boolean {\n    if (!eventArgsSet) {\n      this.table.stateManager.updateSelectPos(-1, -1);\n      return false;\n    }\n    const { eventArgs } = eventArgsSet;\n\n    if (eventArgs) {\n      if (\n        eventArgs.target.name === 'checkbox' ||\n        eventArgs.target.name === 'radio' ||\n        eventArgs.target.name === 'switch' ||\n        eventArgs.target.name === 'button'\n      ) {\n        return false;\n      }\n\n      // // 注意：如果启用下面这句代码逻辑 则在点击选中单元格时失效hover效果。但是会导致chart实例的click事件失效，所以先特殊处理这个逻辑\n      // if (\n      //   !this.table.isPivotChart() &&\n      //   eventArgsSet?.eventArgs?.target.type !== 'chart' &&\n      //   eventArgs.event.pointerType !== 'touch'\n      // ) {\n      //   this.table.stateManager.updateHoverPos(-1, -1);\n      // }\n\n      if (\n        this.table.isHeader(eventArgs.col, eventArgs.row) &&\n        isCellDisableSelect(this.table, eventArgs.col, eventArgs.row)\n      ) {\n        if (!isSelectMoving) {\n          // 如果是点击点表头 取消单元格选中状态\n          this.table.stateManager.updateSelectPos(-1, -1);\n        }\n        return false;\n      } else if (\n        !this.table.isHeader(eventArgs.col, eventArgs.row) &&\n        isCellDisableSelect(this.table, eventArgs.col, eventArgs.row)\n      ) {\n        if (!isSelectMoving) {\n          const isHasSelected = !!this.table.stateManager.select.ranges?.length;\n          this.table.stateManager.updateSelectPos(-1, -1);\n          if (isHasSelected) {\n            this.table.stateManager.endSelectCells(true, isHasSelected);\n          }\n        }\n        return false;\n      }\n\n      if (\n        this.table.isPivotChart() &&\n        (eventArgsSet?.eventArgs?.target.name === 'axis-label' || eventArgsSet?.eventArgs?.target.type === 'chart')\n      ) {\n        // 点击透视图坐标轴标签或图标内容，执行图表状态更新，不触发Select\n        this.table.stateManager.updateSelectPos(-1, -1);\n        return false;\n      }\n\n      this.table.stateManager.updateSelectPos(\n        eventArgs.col,\n        eventArgs.row,\n        eventArgs.event.shiftKey,\n        eventArgs.event.ctrlKey || eventArgs.event.metaKey,\n        false,\n        isSelectMoving ? false : this.table.options.select?.makeSelectCellVisible ?? true\n      );\n\n      return true;\n    }\n    // this.table.stateManager.updateSelectPos(-1, -1); 这句有问题 如drag框选鼠标超出表格范围 这里就直接情况是不对的\n    return false;\n  }\n  dealFillSelect(eventArgsSet?: SceneEvent, isSelectMoving?: boolean): boolean {\n    const { eventArgs } = eventArgsSet;\n\n    if (eventArgs) {\n      if (this.table.stateManager.select?.ranges?.length && this.table.stateManager.isFillHandle()) {\n        let updateRow;\n        let updateCol;\n        const currentRange = this.table.stateManager.select.ranges[this.table.stateManager.select.ranges.length - 1];\n        if (isSelectMoving) {\n          if (!isValid(this.table.stateManager.fillHandle.directionRow)) {\n            if (\n              Math.abs(this.table.stateManager.fillHandle.startY - eventArgsSet.abstractPos.y) >=\n              Math.abs(this.table.stateManager.fillHandle.startX - eventArgsSet.abstractPos.x)\n            ) {\n              this.table.stateManager.fillHandle.directionRow = true;\n            } else {\n              this.table.stateManager.fillHandle.directionRow = false;\n            }\n          }\n\n          if (\n            Math.abs(this.table.stateManager.fillHandle.startY - eventArgsSet.abstractPos.y) >=\n            Math.abs(this.table.stateManager.fillHandle.startX - eventArgsSet.abstractPos.x)\n          ) {\n            if (this.table.stateManager.fillHandle.startY - eventArgsSet.abstractPos.y > 0) {\n              this.table.stateManager.fillHandle.direction = 'top';\n            } else {\n              this.table.stateManager.fillHandle.direction = 'bottom';\n            }\n          } else {\n            if (this.table.stateManager.fillHandle.startX - eventArgsSet.abstractPos.x > 0) {\n              this.table.stateManager.fillHandle.direction = 'left';\n            } else {\n              this.table.stateManager.fillHandle.direction = 'right';\n            }\n          }\n          if (this.table.stateManager.fillHandle.directionRow) {\n            updateRow = eventArgs.row;\n            updateCol = currentRange.end.col;\n          } else {\n            updateRow = currentRange.end.row;\n            updateCol = eventArgs.col;\n          }\n        }\n\n        this.table.stateManager.updateSelectPos(\n          isSelectMoving ? updateCol : currentRange.end.col,\n          isSelectMoving ? updateRow : currentRange.end.row,\n          true,\n          eventArgs.event.ctrlKey || eventArgs.event.metaKey,\n          false,\n          !isSelectMoving\n        );\n      } else {\n        this.table.stateManager.updateSelectPos(\n          eventArgs.col,\n          eventArgs.row,\n          eventArgs.event.shiftKey,\n          eventArgs.event.ctrlKey || eventArgs.event.metaKey,\n          false,\n          !isSelectMoving\n        );\n      }\n      return true;\n    }\n    // this.table.stateManager.updateSelectPos(-1, -1); 这句有问题 如drag框选鼠标超出表格范围 这里就直接情况是不对的\n    return false;\n  }\n\n  // fillSelected(eventArgsSet?: SceneEvent, SelectCellRange?: any, SelectData?: any): any {\n  //   return;\n  //   if (!eventArgsSet) {\n  //     this.table.stateManager.updateSelectPos(-1, -1);\n  //     return;\n  //   }\n  //   const { eventArgs } = eventArgsSet;\n\n  //   if (eventArgs) {\n  //     if (eventArgs.target.name === 'checkbox') {\n  //       return;\n  //     }\n  //     let direction;\n\n  //     if (eventArgs.row >= SelectCellRange.start.row && eventArgs.row <= SelectCellRange.end.row) {\n  //       if (eventArgs.col > SelectCellRange.end.col) {\n  //         direction = 'right';\n  //       } else {\n  //         direction = 'left';\n  //       }\n  //     } else {\n  //       if (eventArgs.row > SelectCellRange.end.row) {\n  //         direction = 'down';\n  //       } else {\n  //         direction = 'up';\n  //       }\n  //     }\n  //     const values: (string | number)[][] = [];\n  //     const fillData: any[][] = [];\n  //     let updaterow;\n  //     let updatecol;\n  //     const rows = SelectData.split('\\n'); // 将数据拆分为行\n  //     rows.forEach(function (rowCells: any, rowIndex: number) {\n  //       const cells = rowCells.split('\\t'); // 将行数据拆分为单元格\n  //       const rowValues: (string | number)[] = [];\n  //       values.push(rowValues);\n  //       cells.forEach(function (cell: string, cellIndex: number) {\n  //         // 去掉单元格数据末尾的 '\\r'\n  //         if (cellIndex === cells.length - 1) {\n  //           cell = cell.trim();\n  //         }\n  //         rowValues.push(cell);\n  //       });\n  //     });\n\n  //     updaterow = SelectCellRange.start.row;\n  //     updatecol = SelectCellRange.start.col;\n  //     if (['up', 'left'].indexOf(direction) > -1) {\n  //       if (direction === 'up') {\n  //         updaterow = eventArgs.row;\n\n  //         const fillLength = SelectCellRange.start.row - updaterow;\n\n  //         for (let i = 0; i < fillLength; i++) {\n  //           const rowIndex = values.length - 1 - (i % values.length);\n  //           const newRow = values[rowIndex].slice(0); // 复制一行数据\n\n  //           fillData.unshift(newRow); // 在填充数据的开头插入新行\n  //         }\n  //       } else {\n  //         updatecol = eventArgs.col;\n  //         const fillLength = SelectCellRange.start.col - updatecol;\n\n  //         for (let i = 0; i < values.length; i++) {\n  //           const newRow = values[i].slice(0); // 复制一行数据\n  //           while (newRow.length < fillLength) {\n  //             newRow.unshift(newRow[0]); // 在新行开头向左填充元素\n  //           }\n  //           fillData.push(newRow);\n  //         }\n  //       }\n  //     } else {\n  //       if (direction === 'down') {\n  //         updaterow = SelectCellRange.end.row + 1;\n  //         const fillLength = eventArgs.row - SelectCellRange.end.row;\n\n  //         // 将原始数据添加到新数组中\n  //         for (let i = 0; i < fillLength; i++) {\n  //           const rowIndex = i % values.length;\n  //           const newRow = values[rowIndex]; // 复制一行数据\n  //           fillData.push(newRow);\n  //         }\n  //       } else {\n  //         const fillLength = eventArgs.col - SelectCellRange.end.col;\n  //         updatecol = SelectCellRange.end.col + 1;\n\n  //         values.forEach(function (rowCells: any[]) {\n  //           const newRow: any[] = [];\n  //           // 将原始数据按顺序填充到新行中\n  //           for (let i = 0; i < fillLength; i++) {\n  //             const dataIndex = i % rowCells.length;\n  //             newRow.push(rowCells[dataIndex]);\n  //           }\n\n  //           // 将新行添加到填充数据中\n  //           fillData.push(newRow);\n  //         });\n  //       }\n  //     }\n\n  //     (this.table as ListTableAPI).changeCellValues(updatecol, updaterow, fillData, false);\n  //   }\n  // }\n\n  deelTableSelectAll() {\n    this.table.stateManager.updateSelectPos(-1, -1, false, false, true);\n    this.table.fireListeners(TABLE_EVENT_TYPE.SELECTED_CELL, {\n      ranges: this.table.stateManager.select.ranges,\n      col: 0,\n      row: 0\n    });\n  }\n\n  dealMenuSelect(eventArgsSet: SceneEvent) {\n    // do nothing\n  }\n\n  checkColumnResize(eventArgsSet: SceneEvent, update?: boolean): boolean {\n    // return false;\n    const { eventArgs } = eventArgsSet;\n\n    if ((this.table.options as ListTableConstructorOptions).enableTreeStickCell && !eventArgs) {\n      return false;\n    }\n    // if (eventArgs) { // 如果是鼠标处理表格外部如最后一列的后面 也期望可以拖拽列宽\n    const resizeCol = this.table.scenegraph.getResizeColAt(\n      eventArgsSet.abstractPos.x,\n      eventArgsSet.abstractPos.y,\n      eventArgs?.targetCell\n    );\n    if (this.table._canResizeColumn(resizeCol.col, resizeCol.row) && resizeCol.col >= 0) {\n      if (update) {\n        this.table.stateManager.startResizeCol(\n          resizeCol.col,\n          eventArgsSet.abstractPos.x,\n          eventArgsSet.abstractPos.y,\n          resizeCol.rightFrozen\n        );\n      }\n      return true;\n    }\n    if (this.table.stateManager.isResizeCol()) {\n      // 结束列调整\n      this.table.stateManager.endResizeCol();\n    }\n\n    // }\n\n    return false;\n  }\n\n  checkRowResize(eventArgsSet: SceneEvent, update?: boolean): boolean {\n    const { eventArgs } = eventArgsSet;\n    if (eventArgs) {\n      const resizeRow = this.table.scenegraph.getResizeRowAt(\n        eventArgsSet.abstractPos.x,\n        eventArgsSet.abstractPos.y,\n        eventArgs.targetCell\n      );\n\n      if (this.table._canResizeRow(resizeRow.col, resizeRow.row) && resizeRow.row >= 0) {\n        if (update) {\n          this.table.stateManager.startResizeRow(\n            resizeRow.row,\n            eventArgsSet.abstractPos.x,\n            eventArgsSet.abstractPos.y,\n            resizeRow.bottomFrozen\n          );\n        }\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  cellIsHeaderCheck(eventArgsSet: SceneEvent, update?: boolean): boolean {\n    const { eventArgs } = eventArgsSet;\n    const { col, row, target } = eventArgs;\n    if (!this.table.isHeader(col, row)) {\n      return false;\n    }\n    const cellType = this.table.getCellType(eventArgs.col, eventArgs.row);\n    if (cellType === 'checkbox' && target.name === 'checkbox') {\n      return true;\n    }\n    return false;\n  }\n  checkCellFillhandle(eventArgsSet: SceneEvent, update?: boolean): boolean {\n    let isFillHandle = false;\n    if (typeof this.table.options.excelOptions?.fillHandle === 'function') {\n      isFillHandle = this.table.options.excelOptions.fillHandle({\n        selectRanges: this.table.stateManager.select.ranges,\n        table: this.table\n      });\n    } else {\n      isFillHandle = this.table.options.excelOptions?.fillHandle;\n    }\n    if (isFillHandle) {\n      const { eventArgs } = eventArgsSet;\n      if (eventArgs) {\n        if (this.table.stateManager.select?.ranges?.length) {\n          const lastCol = Math.max(\n            this.table.stateManager.select.ranges[this.table.stateManager.select.ranges.length - 1].start.col,\n            this.table.stateManager.select.ranges[this.table.stateManager.select.ranges.length - 1].end.col\n          );\n          const lastRow = Math.max(\n            this.table.stateManager.select.ranges[this.table.stateManager.select.ranges.length - 1].start.row,\n            this.table.stateManager.select.ranges[this.table.stateManager.select.ranges.length - 1].end.row\n          );\n          const startCol = Math.min(\n            this.table.stateManager.select.ranges[this.table.stateManager.select.ranges.length - 1].start.col,\n            this.table.stateManager.select.ranges[this.table.stateManager.select.ranges.length - 1].end.col\n          );\n          const startRow = Math.min(\n            this.table.stateManager.select.ranges[this.table.stateManager.select.ranges.length - 1].start.row,\n            this.table.stateManager.select.ranges[this.table.stateManager.select.ranges.length - 1].end.row\n          );\n          // 计算鼠标与fillhandle矩形中心之间的距离 distanceX 和 distanceY\n          // 考虑最后一行和最后一列的特殊情况\n          let lastCellBound;\n          if (lastCol < this.table.colCount - 1) {\n            lastCellBound = this.table.scenegraph.highPerformanceGetCell(lastCol, lastRow).globalAABBBounds;\n          } else {\n            lastCellBound = this.table.scenegraph.highPerformanceGetCell(startCol - 1, lastRow).globalAABBBounds;\n          }\n          const distanceX = Math.abs(eventArgsSet.abstractPos.x - lastCellBound.x2);\n\n          if (lastRow < this.table.rowCount - 1) {\n            lastCellBound = this.table.scenegraph.highPerformanceGetCell(lastCol, lastRow).globalAABBBounds;\n          } else {\n            lastCellBound = this.table.scenegraph.highPerformanceGetCell(lastCol, startRow - 1).globalAABBBounds;\n          }\n          const distanceY = Math.abs(eventArgsSet.abstractPos.y - lastCellBound.y2);\n\n          const squareSize = 6 * 3;\n          // 判断鼠标是否落在fillhandle矩形内\n          if (\n            this.table.stateManager.fillHandle?.isFilling ||\n            (distanceX <= squareSize / 2 && distanceY <= squareSize / 2)\n          ) {\n            if (update) {\n              this.table.stateManager.startFillSelect(eventArgsSet.abstractPos.x, eventArgsSet.abstractPos.y);\n            }\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  dealColumnResize(xInTable: number, yInTable: number) {\n    this.table.stateManager.updateResizeCol(xInTable, yInTable);\n  }\n\n  dealRowResize(xInTable: number, yInTable: number) {\n    this.table.stateManager.updateResizeRow(xInTable, yInTable);\n  }\n\n  checkColumnMover(eventArgsSet: SceneEvent): boolean {\n    // return false;\n    const { eventArgs } = eventArgsSet;\n    if (\n      eventArgs &&\n      // this.table.isHeader(eventArgs.col, eventArgs.row) &&\n      // (checkCellInSelect(eventArgs.col, eventArgs.row, this.table.stateManager.select.ranges) ||\n      //   this.table.options.select?.disableHeaderSelect ||\n      //   this.table.options.select?.disableSelect) &&\n      // this.table.stateManager.select.cellPosStart.col === eventArgs.col &&\n      // this.table.stateManager.select.cellPosStart.row === eventArgs.row &&\n      this.table._canDragHeaderPosition(eventArgs.col, eventArgs.row)\n    ) {\n      this.table.stateManager.startMoveCol(\n        eventArgs.col,\n        eventArgs.row,\n        eventArgsSet.abstractPos.x,\n        eventArgsSet.abstractPos.y,\n        eventArgs?.event?.nativeEvent\n      );\n      return true;\n    }\n\n    return false;\n  }\n\n  dealColumnMover(eventArgsSet: SceneEvent) {\n    const { eventArgs } = eventArgsSet;\n    if (isValid(eventArgs.col) && isValid(eventArgs.row)) {\n      this.table.stateManager.updateMoveCol(\n        eventArgs.col,\n        eventArgs.row,\n        eventArgsSet.abstractPos.x,\n        eventArgsSet.abstractPos.y,\n        eventArgs?.event?.nativeEvent\n      );\n    }\n  }\n\n  startColumnResize(eventArgsSet: SceneEvent) {\n    // do nothing\n  }\n\n  dealIconClick(e: FederatedPointerEvent, eventArgsSet: SceneEvent): boolean {\n    const { eventArgs } = eventArgsSet;\n    // if (!eventArgs) {\n    //   return false;\n    // }\n\n    const { target, event, col, row } = eventArgs || {\n      target: e.target,\n      event: e,\n      col: -1,\n      row: -1\n    };\n    const icon = target as unknown as Icon;\n\n    if (icon.role && icon.role.startsWith('icon-')) {\n      this.table.fireListeners(TABLE_EVENT_TYPE.ICON_CLICK, {\n        name: icon.name,\n        // 默认位置：icon中部正下方\n        x: (icon.globalAABBBounds.x1 + icon.globalAABBBounds.x2) / 2,\n        y: icon.globalAABBBounds.y2,\n        col,\n        row,\n        funcType: icon.attribute.funcType,\n        icon,\n        event\n      });\n\n      return true;\n    } else if (target instanceof RichText) {\n      const icon = target.pickIcon(event.global);\n      if (icon) {\n        this.table.fireListeners(TABLE_EVENT_TYPE.ICON_CLICK, {\n          name: icon.attribute.id,\n          // 默认位置：icon中部正下方\n          x: icon.globalX + icon.globalAABBBounds.width() / 2,\n          y: icon.globalY + icon.AABBBounds.height(),\n          col,\n          row,\n          funcType: (icon.attribute as any).funcType,\n          icon: icon as unknown as Icon,\n          event\n        });\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /** TODO 其他的事件并么有做remove */\n  release() {\n    this.gesture.release();\n\n    // remove global event listerner\n    this.globalEventListeners.forEach(item => {\n      if (item.env === 'document') {\n        document.removeEventListener(item.name, item.callback);\n      } else if (item.env === 'body') {\n        document.body.removeEventListener(item.name, item.callback);\n      } else if (item.env === 'window') {\n        window.removeEventListener(item.name, item.callback);\n      } else if (item.env === 'vglobal') {\n        vglobal.removeEventListener(item.name, item.callback);\n      }\n    });\n    this.globalEventListeners = [];\n  }\n\n  enableScroll() {\n    this._enableTableScroll = true;\n  }\n\n  disableScroll() {\n    this._enableTableScroll = false;\n  }\n}\n"]}