{"version":3,"sources":["../src/event/EventHandler.ts"],"names":[],"mappings":"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","file":"EventHandler.js","sourcesContent":["import type { AnyFunction, EventListenerId } from '../ts-types';\nimport type { EventTarget as CustomEventTarget } from './EventTarget';\nimport { debounce } from '../tools/debounce';\nimport { Env } from '../tools/env';\n\nlet idCount = 1;\ntype EventHandlerTarget = EventTarget | CustomEventTarget;\ntype Listener = AnyFunction;\ntype EventListenerObject = {\n  target: EventHandlerTarget;\n  type: string;\n  listener: Listener;\n  options: any[];\n};\n\nexport type ResizeObserverCallBack = ({\n  width,\n  height,\n  windowSizeNotChange\n}: {\n  width: number;\n  height: number;\n  windowSizeNotChange: boolean;\n}) => void;\n\nexport class ResizeObserver {\n  resizeTime = 100;\n  element: HTMLElement;\n  cb: ResizeObserverCallBack;\n  observer?: MutationObserver;\n  lastSize: {\n    width: number;\n    height: number;\n  } = {\n    width: 0,\n    height: 0\n  };\n  callBackDebounce: () => void;\n\n  constructor(element: HTMLElement, cb: ResizeObserverCallBack, resizeTime?: number) {\n    this.element = element;\n    this.cb = cb;\n    this.lastSize = this.getSize();\n    if (resizeTime) {\n      this.resizeTime = Math.max(resizeTime, 16);\n    }\n\n    this.callBackDebounce = debounce(this.callBack, this.resizeTime);\n    //TODO: 这个地方的 addEventListener resize 应该更改到下面的else逻辑中，兼容ResizeObserver不存在的情况\n    window?.addEventListener('resize', this.onResize);\n    // 优先使用 ResizeObserver\n    if ('ResizeObserver' in window) {\n      // @ts-ignore\n      const ResizeObserverWindow: any = window.ResizeObserver;\n      this.observer = new ResizeObserverWindow(this.mutationResize);\n      this.observer?.observe(this.element);\n    } else if ('MutationObserver' in window) {\n      this.observer = new MutationObserver(this.mutationResize);\n      this.observer.observe(this.element, {\n        attributes: true,\n        attributeFilter: ['style']\n      });\n    }\n  }\n\n  mutationResize = () => {\n    this.onResize();\n  };\n\n  disConnect() {\n    window.removeEventListener('resize', this.onResize);\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = undefined;\n    }\n  }\n\n  callBack = () => {\n    const newSize = this.getSize();\n    let windowSizeNotChange = false;\n    if (newSize.width === this.lastSize.width && newSize.height === this.lastSize.height) {\n      windowSizeNotChange = true;\n    }\n    this.lastSize = newSize;\n    this.cb && this.cb({ ...this.lastSize, windowSizeNotChange });\n  };\n\n  setSize(size: { width: number; height: number }) {\n    this.lastSize = size;\n  }\n\n  private onResize = () => {\n    // if (this.checkSize()) {\n    this.callBackDebounce();\n    // }\n  };\n\n  private checkSize() {\n    const newSize = this.getSize();\n    if (newSize.width === this.lastSize.width && newSize.height === this.lastSize.height) {\n      return false;\n    }\n    return true;\n  }\n\n  getSize() {\n    if (!this.element) {\n      return {\n        ...this.lastSize\n      };\n    }\n    return {\n      width: Math.floor(this.element.clientWidth),\n      height: Math.floor(this.element.clientHeight)\n    };\n  }\n}\n\nexport class EventHandler {\n  resizeTime?: number;\n\n  private listeners: {\n    [key: string]: EventListenerObject;\n  } = {};\n\n  private reseizeListeners: {\n    [key: string]: ResizeObserver;\n  } = {};\n\n  on(\n    target: HTMLElement | Window | EventHandlerTarget,\n    type: string,\n    listener: Listener,\n    ...options: any[]\n  ): EventListenerId {\n    if (Env.mode === 'node') {\n      return -1;\n    }\n    const id = idCount++;\n    if (target?.addEventListener) {\n      if (type !== 'resize' || (target as Window) === window) {\n        (target as EventTarget)?.addEventListener(type, listener, ...(options as []));\n      } else {\n        const resizeObserver = new ResizeObserver(target as HTMLElement, listener, this.resizeTime);\n        this.reseizeListeners[id] = resizeObserver;\n      }\n    }\n    const obj = { target, type, listener, options };\n    this.listeners[id] = obj;\n    return id;\n  }\n  once(\n    target: EventHandlerTarget,\n    type: string,\n    listener: Listener,\n    ...options: (boolean | AddEventListenerOptions)[]\n  ): EventListenerId {\n    if (Env.mode === 'node') {\n      return -1;\n    }\n    const id = this.on(\n      target,\n      type,\n      (...args) => {\n        this.off(id);\n        listener(...args);\n      },\n      ...options\n    );\n    return id;\n  }\n  off(id: EventListenerId | null | undefined): void {\n    if (Env.mode === 'node') {\n      return;\n    }\n    if (id === null) {\n      return;\n    }\n    const obj = this.listeners?.[id];\n    if (!obj) {\n      return;\n    }\n    delete this.listeners[id];\n    if (obj.target.removeEventListener) {\n      obj.target.removeEventListener(obj.type, obj.listener, ...(obj.options as []));\n    }\n  }\n  fire(target: EventTarget, type: string, ...args: any[]): void {\n    if (Env.mode === 'node') {\n      return;\n    }\n    for (const key in this.listeners) {\n      const listener = this.listeners[key];\n      if (listener.target === target && listener.type === type) {\n        listener.listener.call(listener.target, ...args);\n      }\n    }\n  }\n  hasListener(target: EventTarget, type: string): boolean {\n    if (Env.mode === 'node') {\n      return false;\n    }\n    let result = false;\n    for (const key in this.listeners) {\n      const listener = this.listeners[key];\n      if (listener.target === target && listener.type === type) {\n        result = true;\n      }\n    }\n\n    return result;\n  }\n  clear(): void {\n    if (Env.mode === 'node') {\n      return;\n    }\n    for (const key in this.listeners) {\n      const listener = this.listeners[key];\n      if (listener.target.removeEventListener) {\n        listener.target.removeEventListener(listener.type, listener.listener, ...(listener.options as []));\n      }\n    }\n\n    for (const key in this.reseizeListeners) {\n      const resizeObserver: ResizeObserver = this.reseizeListeners[key];\n      resizeObserver?.disConnect();\n    }\n\n    this.listeners = {};\n  }\n  release(): void {\n    if (Env.mode === 'node') {\n      return;\n    }\n    this.clear();\n    (this as any).listeners = {};\n  }\n}\n"]}