{"version":3,"sources":["../src/event/self-event-listener/base-table/dbclick-auto-column-width.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,gBAAgB,EAAE,MAAM,gCAAgC,CAAC;AAElE,OAAO,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AAGjD,MAAM,UAAU,+BAA+B,CAAC,KAAmB;IACjE,KAAK,CAAC,EAAE,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAwB,EAAE,EAAE;;QACpE,IAAI,CAAC,CAAC,cAAc,EAAE;YACpB,MAAM,YAAY,GAAG,mBAAmB,CAAC,CAAC,CAAC,cAAqB,CAAC,CAAC;YAClE,MAAM,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,cAAc,CAC/C,YAAY,CAAC,WAAW,CAAC,CAAC,EAC1B,YAAY,CAAC,WAAW,CAAC,CAAC,EAC1B,MAAA,YAAY,CAAC,SAAS,0CAAE,UAAU,CACnC,CAAC;YACF,MAAM,iCAAiC,GACrC,MAAA,KAAK,CAAC,OAAO,CAAC,iCAAiC,mCAAI,MAAA,KAAK,CAAC,OAAO,CAAC,MAAM,0CAAE,iCAAiC,CAAC;YAC7G,IAAI,KAAK,CAAC,YAAY,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAE;gBACxD,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC;aAChE;iBAAM,IACL,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC;gBACpD,SAAS,CAAC,GAAG,IAAI,CAAC;gBAClB,CAAC,iCAAiC,EAClC;gBACA,KAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBACnD,KAAK,CAAC,aAAa,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAE3D,KAAK,CAAC,UAAU,CAAC,gCAAgC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAEjE,MAAM,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC;gBAEjC,IACE,KAAK,CAAC,YAAY,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,cAAc;oBACnD,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,EAAE;oBAC3B,CAAE,KAAK,CAAC,KAAmB,CAAC,SAAS,EACrC;oBACA,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,qBAAqB,CACpD,KAAK,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,EAC9B,KAAK,CAAC,YAAY,CAAC,aAAa,CACjC,CAAC;iBACH;gBACD,MAAM,SAAS,GAAG,EAAE,CAAC;gBAErB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE;oBAC7C,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;iBACxC;gBACD,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,iBAAiB,EAAE;oBACtD,GAAG,EAAE,SAAS,CAAC,GAAG;oBAClB,SAAS;iBACV,CAAC,CAAC;aACJ;SACF;IACH,CAAC,CAAC,CAAC;AACL,CAAC","file":"dbclick-auto-column-width.js","sourcesContent":["import type { ListTable, MousePointerCellEvent } from '../../..';\nimport { TABLE_EVENT_TYPE } from '../../../core/TABLE_EVENT_TYPE';\nimport type { BaseTableAPI } from '../../../ts-types/base-table';\nimport { getCellEventArgsSet } from '../../util';\n\n// 双击自动列宽\nexport function bindDBClickAutoColumnWidthEvent(table: BaseTableAPI) {\n  table.on(TABLE_EVENT_TYPE.DBLCLICK_CELL, (e: MousePointerCellEvent) => {\n    if (e.federatedEvent) {\n      const eventArgsSet = getCellEventArgsSet(e.federatedEvent as any);\n      const resizeCol = table.scenegraph.getResizeColAt(\n        eventArgsSet.abstractPos.x,\n        eventArgsSet.abstractPos.y,\n        eventArgsSet.eventArgs?.targetCell\n      );\n      const disableDblclickAutoResizeColWidth =\n        table.options.disableDblclickAutoResizeColWidth ?? table.options.resize?.disableDblclickAutoResizeColWidth;\n      if (table.eventManager.checkCellFillhandle(eventArgsSet)) {\n        table.fireListeners(TABLE_EVENT_TYPE.DBLCLICK_FILL_HANDLE, {});\n      } else if (\n        table._canResizeColumn(resizeCol.col, resizeCol.row) &&\n        resizeCol.col >= 0 &&\n        !disableDblclickAutoResizeColWidth\n      ) {\n        table.scenegraph.updateAutoColWidth(resizeCol.col);\n        table.internalProps._widthResizedColMap.add(resizeCol.col);\n        // if (table.isPivotChart()) {\n        table.scenegraph.updateChartSizeForResizeColWidth(resizeCol.col);\n        // }\n        const state = table.stateManager;\n        // update frozen shadowline component\n        if (\n          state.columnResize.col < state.table.frozenColCount &&\n          !state.table.isPivotTable() &&\n          !(state.table as ListTable).transpose\n        ) {\n          state.table.scenegraph.component.setFrozenColumnShadow(\n            state.table.frozenColCount - 1,\n            state.columnResize.isRightFrozen\n          );\n        }\n        const colWidths = [];\n        // 返回所有列宽信息\n        for (let col = 0; col < table.colCount; col++) {\n          colWidths.push(table.getColWidth(col));\n        }\n        table.fireListeners(TABLE_EVENT_TYPE.RESIZE_COLUMN_END, {\n          col: resizeCol.col,\n          colWidths\n        });\n      }\n    }\n  });\n}\n"]}