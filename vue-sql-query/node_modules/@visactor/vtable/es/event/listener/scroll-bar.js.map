{"version":3,"sources":["../src/event/listener/scroll-bar.ts"],"names":[],"mappings":"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","file":"scroll-bar.js","sourcesContent":["import type { FederatedPointerEvent } from './../../vrender';\nimport { throttle } from '../../tools/util';\nimport type { ListTableAPI } from '../../ts-types';\nimport { InteractionState } from '../../ts-types';\nimport type { EventManager } from '../event';\nimport type { SceneEvent } from '../util';\nimport { getCellEventArgsSet } from '../util';\nimport { TABLE_EVENT_TYPE } from '../../core/TABLE_EVENT_TYPE';\n\nexport function bindScrollBarListener(eventManager: EventManager) {\n  const table = eventManager.table;\n  const stateManager = table.stateManager;\n  const scenegraph = table.scenegraph;\n\n  // 监听滚动条组件pointover事件\n  scenegraph.component.vScrollBar.addEventListener('pointerover', (e: any) => {\n    stateManager.showVerticalScrollBar();\n  });\n  scenegraph.component.hScrollBar.addEventListener('pointerover', (e: any) => {\n    stateManager.showHorizontalScrollBar();\n  });\n  scenegraph.component.vScrollBar.addEventListener('pointerout', (e: any) => {\n    if (stateManager.interactionState === InteractionState.scrolling) {\n      return;\n    }\n    stateManager.hideVerticalScrollBar();\n  });\n  scenegraph.component.hScrollBar.addEventListener('pointerout', (e: any) => {\n    if (stateManager.interactionState === InteractionState.scrolling) {\n      return;\n    }\n    stateManager.hideHorizontalScrollBar();\n  });\n  scenegraph.component.vScrollBar.addEventListener('pointermove', (e: FederatedPointerEvent) => {\n    scenegraph.table.stateManager.updateCursor('default');\n    e.stopPropagation(); //防止冒泡到stage上 检测到挨着列间隔线判断成可拖拽\n  });\n  scenegraph.component.vScrollBar.addEventListener('pointerdown', (e: FederatedPointerEvent) => {\n    e.stopPropagation(); //防止冒泡到stage上 检测到挨着列间隔线判断成拖拽状态\n    if ((scenegraph.table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE)) {\n      scenegraph.table.fireListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE, {\n        event: e.nativeEvent\n      });\n    }\n  });\n  scenegraph.component.vScrollBar.addEventListener('scrollDown', (e: FederatedPointerEvent) => {\n    scenegraph.table.eventManager.LastBodyPointerXY = { x: e.x, y: e.y };\n    scenegraph.table.eventManager.isDown = true;\n    if (stateManager.interactionState !== InteractionState.scrolling) {\n      stateManager.updateInteractionState(InteractionState.scrolling);\n    }\n    scenegraph.table.stateManager.hideMenu();\n    (scenegraph.table as ListTableAPI).editorManager?.completeEdit();\n    if ((scenegraph.table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE)) {\n      scenegraph.table.fireListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE, {\n        event: e.nativeEvent\n      });\n    }\n  });\n  scenegraph.component.vScrollBar.addEventListener('pointerup', () => {\n    stateManager.fastScrolling = false;\n    scenegraph.table.eventManager.isDraging = false;\n    if (stateManager.interactionState === InteractionState.scrolling) {\n      stateManager.updateInteractionState(InteractionState.default);\n    }\n  });\n  scenegraph.component.vScrollBar.addEventListener('pointerupoutside', () => {\n    stateManager.fastScrolling = false;\n    if (stateManager.interactionState === InteractionState.scrolling) {\n      stateManager.updateInteractionState(InteractionState.default);\n    }\n  });\n  scenegraph.component.vScrollBar.addEventListener('scrollUp', (e: FederatedPointerEvent) => {\n    scenegraph.table.eventManager.isDraging = false;\n  });\n\n  scenegraph.component.hScrollBar.addEventListener('pointermove', (e: FederatedPointerEvent) => {\n    scenegraph.table.stateManager.updateCursor('default');\n    e.stopPropagation(); //防止冒泡到stage上 检测到挨着列间隔线判断成可拖拽\n  });\n  scenegraph.component.hScrollBar.addEventListener('pointerdown', (e: FederatedPointerEvent) => {\n    e.stopPropagation(); //防止冒泡到stage上 检测到挨着列间隔线判断成拖拽状态\n    if ((scenegraph.table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE)) {\n      scenegraph.table.fireListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE, {\n        event: e.nativeEvent\n      });\n    }\n  });\n  scenegraph.component.hScrollBar.addEventListener('scrollDown', (e: FederatedPointerEvent) => {\n    scenegraph.table.eventManager.LastBodyPointerXY = { x: e.x, y: e.y };\n    scenegraph.table.eventManager.isDown = true;\n    if (stateManager.interactionState !== InteractionState.scrolling) {\n      stateManager.updateInteractionState(InteractionState.scrolling);\n    }\n    scenegraph.table.stateManager.hideMenu();\n    (scenegraph.table as ListTableAPI).editorManager?.completeEdit();\n    if ((scenegraph.table as any).hasListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE)) {\n      scenegraph.table.fireListeners(TABLE_EVENT_TYPE.MOUSEDOWN_TABLE, {\n        event: e.nativeEvent\n      });\n    }\n  });\n  scenegraph.component.hScrollBar.addEventListener('pointerup', () => {\n    stateManager.fastScrolling = false;\n    scenegraph.table.eventManager.isDraging = false;\n    if (stateManager.interactionState === InteractionState.scrolling) {\n      stateManager.updateInteractionState(InteractionState.default);\n    }\n  });\n  scenegraph.component.hScrollBar.addEventListener('pointerupoutside', () => {\n    stateManager.fastScrolling = false;\n    if (stateManager.interactionState === InteractionState.scrolling) {\n      stateManager.updateInteractionState(InteractionState.default);\n    }\n  });\n  scenegraph.component.hScrollBar.addEventListener('scrollUp', (e: FederatedPointerEvent) => {\n    scenegraph.table.eventManager.isDraging = false;\n  });\n  const throttleVerticalWheel = throttle(stateManager.updateVerticalScrollBar, 20);\n  const throttleHorizontalWheel = throttle(stateManager.updateHorizontalScrollBar, 20);\n\n  // 监听滚动条组件scroll事件\n  scenegraph.component.vScrollBar.addEventListener('scrollDrag', (e: any) => {\n    if (scenegraph.table.eventManager.isDown) {\n      scenegraph.table.eventManager.isDraging = true;\n    }\n    stateManager.fastScrolling = true;\n    if (stateManager.interactionState !== InteractionState.scrolling) {\n      stateManager.updateInteractionState(InteractionState.scrolling);\n    }\n    const ratio = e.detail.value[0] / (1 - e.detail.value[1] + e.detail.value[0]);\n    throttleVerticalWheel(ratio, e);\n  });\n\n  scenegraph.component.hScrollBar.addEventListener('scrollDrag', (e: any) => {\n    if (scenegraph.table.eventManager.isDown) {\n      scenegraph.table.eventManager.isDraging = true;\n    }\n    stateManager.fastScrolling = true;\n    if (stateManager.interactionState !== InteractionState.scrolling) {\n      stateManager.updateInteractionState(InteractionState.scrolling);\n    }\n    // stateManager.table.scenegraph.proxy.isSkipProgress = true;\n    const ratio = e.detail.value[0] / (1 - e.detail.value[1] + e.detail.value[0]);\n    throttleHorizontalWheel(ratio);\n    // setTimeout(() => {\n    //   console.log('isSkipProgress', false);\n    //   stateManager.table.scenegraph.proxy.isSkipProgress = false;\n    // }, 10);\n  });\n}\n"]}