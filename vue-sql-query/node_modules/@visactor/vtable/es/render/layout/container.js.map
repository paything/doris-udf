{"version":3,"sources":["../src/render/layout/container.ts"],"names":[],"mappings":"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","file":"container.js","sourcesContent":["import { isArray } from '@visactor/vutils';\nimport type { IGroupGraphicAttribute } from './../../vrender';\nimport { Group } from './../../vrender';\nimport type { percentCalcObj } from './percent-calc';\n\nexport type IContainerOptions = {\n  width?: number | percentCalcObj;\n  height?: number | percentCalcObj;\n  marginTop?: number;\n  marginRight?: number;\n  marginBottom?: number;\n  marginLeft?: number;\n} & IGroupGraphicAttribute;\n\nexport class Container extends Group {\n  constructor(containerOptions: IContainerOptions) {\n    if ((containerOptions as any).direction) {\n      containerOptions.flexDirection = (containerOptions as any).direction;\n    }\n    if (\n      containerOptions.justifyContent &&\n      ((containerOptions.justifyContent as any) === 'start' || (containerOptions.justifyContent as any) === 'end')\n    ) {\n      containerOptions.justifyContent = ('flex-' + containerOptions.justifyContent) as any;\n    }\n\n    if (\n      containerOptions.alignItems &&\n      ((containerOptions.alignItems as any) === 'start' || (containerOptions.alignItems as any) === 'end')\n    ) {\n      containerOptions.alignItems = ('flex-' + containerOptions.alignItems) as any;\n    }\n\n    if (\n      containerOptions.alignContent &&\n      ((containerOptions.alignContent as any) === 'start' || (containerOptions.alignContent as any) === 'end')\n    ) {\n      containerOptions.alignContent = ('flex-' + containerOptions.alignContent) as any;\n    }\n    containerOptions.display = 'flex';\n    if (!containerOptions.flexDirection) {\n      containerOptions.flexDirection = 'row';\n    }\n\n    containerOptions.clip = true;\n    containerOptions.fill = (containerOptions?.background as any)?.fill;\n    containerOptions.stroke = (containerOptions?.background as any)?.stroke;\n    containerOptions.lineWidth = (containerOptions?.background as any)?.lineWidth;\n    containerOptions.cornerRadius = (containerOptions?.background as any)?.cornerRadius;\n    // containerOptions.flexWrap = 'nowrap';\n\n    const isPaddingNumber = isArray(containerOptions.boundsPadding);\n    const padding = [\n      containerOptions.marginTop ??\n        (isPaddingNumber ? containerOptions.boundsPadding[0] : containerOptions.boundsPadding) ??\n        0,\n      containerOptions.marginRight ??\n        (isPaddingNumber ? containerOptions.boundsPadding[1] : containerOptions.boundsPadding) ??\n        0,\n      containerOptions.marginBottom ??\n        (isPaddingNumber\n          ? containerOptions.boundsPadding[2] ?? containerOptions.boundsPadding[0]\n          : containerOptions.boundsPadding) ??\n        0,\n      containerOptions.marginLeft ??\n        (isPaddingNumber\n          ? containerOptions.boundsPadding[3] ?? containerOptions.boundsPadding[1]\n          : containerOptions.boundsPadding) ??\n        0\n    ];\n    containerOptions.boundsPadding = padding;\n\n    super(containerOptions);\n  }\n}\n"]}