{"version":3,"sources":["../src/plugins/list-tree-stick-cell.ts"],"names":[],"mappings":"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","file":"list-tree-stick-cell.js","sourcesContent":["import { isArray, isValid } from '@visactor/vutils';\nimport type { ListTable } from '../ListTable';\nimport { Group } from '../scenegraph/graphic/group';\nimport { updateCell } from '../scenegraph/group-creater/cell-helper';\nimport type { Graphic } from './../vrender';\nimport { createRect } from './../vrender';\nimport { Factory } from '../core/factory';\nimport { getTargetCell } from '../event/util';\n\nexport interface IListTreeStickCellPlugin {\n  new (table: ListTable): ListTreeStickCellPlugin;\n}\n\nexport class ListTreeStickCellPlugin {\n  table: ListTable;\n  titleRows: number[] = [];\n  showedTitleRows: number[] = [];\n  rowNow: number = -1;\n  skipStartRow: number = -1;\n  skipEndRow: number = -1;\n\n  constructor(table: ListTable) {\n    this.table = table;\n\n    this.table.on('scroll', e => {\n      if (e.scrollDirection !== 'vertical') {\n        return;\n      }\n      this.updateGroupTitle();\n    });\n\n    this.table.on('tree_hierarchy_state_change', e => {\n      this.updateGroupTitle();\n    });\n\n    this.table.on('resize_column', e => {\n      this.updateGroupTitle();\n    });\n  }\n\n  updateGroupTitle() {\n    // this.updateGroupTitleInfo();\n    if (this.table.scrollTop === 0) {\n      // do nothing\n      this.titleRows = [];\n      this.showedTitleRows = [];\n    } else if (\n      this.skipStartRow !== -1 &&\n      this.skipEndRow !== -1 &&\n      this.skipStartRow !== this.table.scenegraph.proxy.bodyTopRow - 1\n    ) {\n      if (\n        this.table.scenegraph.proxy.screenTopRow <= this.skipStartRow ||\n        this.table.scenegraph.proxy.screenTopRow >= this.skipEndRow\n      ) {\n        this.skipStartRow = -1;\n        this.skipEndRow = -1;\n        this.updateGroupTitleInfo();\n      } else {\n        // const row = this.table.scenegraph.proxy.screenTopRow + titleRows.length;\n        // nowRow = row;\n        // renderLast = true;\n        // do nothing\n      }\n    } else {\n      this.skipStartRow = -1;\n      this.skipEndRow = -1;\n      this.updateGroupTitleInfo();\n    }\n\n    this.updateScenegraph();\n  }\n\n  updateGroupTitleInfo() {\n    this.rowNow = this.table.scenegraph.proxy.screenTopRow + this.titleRows.length;\n    const recordIndex = this.table.getRecordIndexByCell(0, this.rowNow); // [0, 0, 6]/0\n    const nextRecordIndex = this.table.getRecordIndexByCell(0, this.rowNow + 1);\n    this.getTitleRowsByRecordIndex(recordIndex, nextRecordIndex);\n  }\n\n  getTitleRowsByRecordIndex(recordIndex: number | number[], nextRecordIndex: number | number[]) {\n    const titleRecords = [];\n    if (!isArray(recordIndex)) {\n      recordIndex = [recordIndex];\n    }\n    if (!isArray(nextRecordIndex)) {\n      nextRecordIndex = [nextRecordIndex];\n    }\n\n    for (let i = 0; i < recordIndex.length; i++) {\n      const index = recordIndex.slice(0, i + 1);\n      const record = this.table.dataSource.getRaw(index as unknown as number);\n      titleRecords.push(record);\n    }\n\n    const titleRows = [];\n    // const isTitle = !(recordIndex.length === (this.table.options.groupBy as any).length + 1);\n    const isTitle = nextRecordIndex.length === recordIndex.length + 1;\n    let titleIndex = recordIndex.slice(0, !isTitle ? recordIndex.length - 1 : recordIndex.length);\n    const currentIndexedData = this.table.dataSource.currentIndexedData;\n    const startIndex = this.rowNow - this.table.columnHeaderLevelCount;\n\n    for (let i = startIndex; i >= 0; i--) {\n      const currentIndex = currentIndexedData[i];\n      if (isArray(currentIndex) && titleIndex.length === currentIndex.length) {\n        let isMatch = true;\n        for (let j = 0; j < currentIndex.length; j++) {\n          if (currentIndex[j] !== titleIndex[j]) {\n            isMatch = false;\n            break;\n          }\n        }\n        if (isMatch) {\n          titleRows.push(i + this.table.columnHeaderLevelCount);\n          titleIndex = titleIndex.slice(0, titleIndex.length - 1);\n        }\n      } else if (currentIndex === recordIndex[0]) {\n        titleRows.push(i + this.table.columnHeaderLevelCount);\n        break;\n      }\n    }\n\n    this.titleRows = titleRows.reverse();\n  }\n\n  updateScenegraph() {\n    const { table } = this;\n    const { shadowGroup, shadowGroupFrozen } = prepareShadowRoot(table);\n\n    this.showedTitleRows.length = 0;\n    let skip = 0;\n    for (let col = 0; col < table.colCount; col++) {\n      let colGroup;\n      if (col < table.frozenColCount) {\n        colGroup = new Group({\n          x: table.getColsWidth(0, col - 1),\n          y: table.getFrozenRowsHeight()\n        });\n        shadowGroupFrozen.add(colGroup);\n      } else {\n        colGroup = new Group({\n          x: table.getColsWidth(table.frozenColCount, col - 1),\n          y: table.getFrozenRowsHeight()\n        });\n        shadowGroup.add(colGroup);\n      }\n      colGroup.col = col;\n      for (let i = 0; i < this.titleRows.length; i++) {\n        const row = this.titleRows[i];\n        if (isSkipRow(row, this.rowNow, table.scenegraph.proxy.screenTopRow, this.titleRows)) {\n          // skipOne = true;\n          col === 0 && skip++;\n          continue;\n        }\n        if (col === 0) {\n          this.showedTitleRows.push(row);\n        }\n        const cell = table.scenegraph.getCell(col, row);\n        if (cell.role === 'cell') {\n          const newCell = cloneGraphic(cell);\n          newCell.setAttributes({\n            y: i * 40\n          });\n          colGroup.add(newCell);\n        } else {\n          // create a fake cellGroup for title\n          const newCell = updateCell(col, row, table, true, true);\n          newCell.setAttributes({\n            y: i * 40\n          });\n          colGroup.add(newCell);\n        }\n      }\n    }\n\n    if (skip > 0 && this.skipStartRow === -1 && this.skipEndRow === -1) {\n      this.skipStartRow = table.scenegraph.proxy.screenTopRow - 1;\n      this.skipEndRow = table.scenegraph.proxy.screenTopRow + 1;\n    }\n  }\n}\n\nfunction isSkipRow(row: number, topRow: number, screenTopRow: number, titleRows: number[]) {\n  if (row === topRow && row !== screenTopRow + titleRows.length - 1) {\n    return true;\n  }\n\n  const rowIndex = titleRows.indexOf(row);\n  const rowLimit = screenTopRow + rowIndex + 1;\n  if (row === rowLimit && row < topRow) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction cloneGraphic(graphic: Graphic) {\n  const newGraphic = graphic.clone();\n  (newGraphic as any).role = (graphic as any).role;\n  (newGraphic as any).col = (graphic as any).col;\n  (newGraphic as any).row = (graphic as any).row;\n  (newGraphic as any).mergeStartCol = (graphic as any).mergeStartCol;\n  (newGraphic as any).mergeStartRow = (graphic as any).mergeStartRow;\n  (newGraphic as any).mergeEndCol = (graphic as any).mergeEndCol;\n  (newGraphic as any).mergeEndRow = (graphic as any).mergeEndRow;\n  (newGraphic as any).contentWidth = (graphic as any).contentWidth;\n  (newGraphic as any).contentHeight = (graphic as any).contentHeight;\n\n  if ((newGraphic as any).role === 'cell') {\n    // hack for vrender not support shadow group pick\n    const hackRect = createRect({\n      x: 0,\n      y: 0,\n      width: newGraphic.attribute.width,\n      height: newGraphic.attribute.height\n    });\n    newGraphic.add(hackRect);\n  }\n\n  if (graphic.type === 'group') {\n    const newGroup = newGraphic as Group;\n    graphic.forEachChildren(child => {\n      const newChild = cloneGraphic(child as any);\n      newGroup.add(newChild);\n    });\n  }\n  return newGraphic;\n}\n\nfunction prepareShadowRoot(table: ListTable) {\n  const colHeaderGroup = table.scenegraph.colHeaderGroup;\n  const cornerHeaderGroup = table.scenegraph.cornerHeaderGroup;\n  if (!colHeaderGroup.border) {\n    const hackBorder = createRect({\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      cursor: 'pointer'\n    });\n    colHeaderGroup.add(hackBorder);\n    colHeaderGroup.border = hackBorder;\n    (hackBorder as any).attachShadow(hackBorder.shadowRoot);\n    hackBorder.name = 'border-rect';\n\n    hackBorder.addEventListener('click', (e: any) => {\n      const titleRows = table.listTreeStickCellPlugin.titleRows;\n      const { shadowTarget } = e.pickParams;\n      const cellGroup = getTargetCell(shadowTarget);\n      const { col, row } = cellGroup;\n      const rowIndex = titleRows.indexOf(row);\n      // table.scrollToCell({ col, row: row - rowIndex });\n      scrollToRow(row - rowIndex, table);\n    });\n  }\n\n  if (!cornerHeaderGroup.border) {\n    const hackBorder = createRect({\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      cursor: 'pointer'\n    });\n    cornerHeaderGroup.add(hackBorder);\n    cornerHeaderGroup.border = hackBorder;\n    (hackBorder as any).attachShadow(hackBorder.shadowRoot);\n    hackBorder.name = 'border-rect';\n\n    hackBorder.addEventListener('click', (e: any) => {\n      const titleRows = table.listTreeStickCellPlugin.titleRows;\n      const { shadowTarget } = e.pickParams;\n      const cellGroup = getTargetCell(shadowTarget);\n      const { col, row } = cellGroup;\n      const rowIndex = titleRows.indexOf(row);\n      // table.scrollToCell({ col, row: row - rowIndex });\n      scrollToRow(row - rowIndex, table);\n    });\n  }\n\n  const shadowGroup = colHeaderGroup.border.shadowRoot;\n  const shadowGroupFrozen = cornerHeaderGroup.border.shadowRoot;\n  shadowGroup.removeAllChild();\n  shadowGroupFrozen.removeAllChild();\n\n  return { shadowGroup, shadowGroupFrozen };\n}\n\nfunction scrollToRow(row: number, table: ListTable) {\n  const drawRange = table.getDrawRange();\n\n  if (isValid(row) && row >= table.frozenRowCount) {\n    const frozenHeight = table.getFrozenRowsHeight();\n    const top = table.getRowsHeight(0, row - 1);\n    table.scrollTop = Math.min(top - frozenHeight, table.getAllRowsHeight() - drawRange.height) - 1;\n  }\n  table.scenegraph.updateNextFrame();\n}\n\nexport const registerListTreeStickCellPlugin = () => {\n  Factory.registerComponent('listTreeStickCellPlugin', ListTreeStickCellPlugin);\n};\n\n// export type IListTreeStickCellPlugin = typeof ListTreeStickCellPlugin;\n"]}