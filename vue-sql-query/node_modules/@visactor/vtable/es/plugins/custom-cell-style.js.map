{"version":3,"sources":["../src/plugins/custom-cell-style.ts"],"names":[],"mappings":"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","file":"custom-cell-style.js","sourcesContent":["import { isFunction, isValid, merge } from '@visactor/vutils';\nimport type { BaseTableAPI } from '../ts-types/base-table';\nimport {\n  cellStyleKeys,\n  type CellRange,\n  type ColumnStyleOption,\n  type CustomCellStyle,\n  type CustomCellStyleArrangement\n} from '../ts-types';\nimport type { Style } from '../body-helper/style';\nimport { Factory } from '../core/factory';\nimport type { StylePropertyFunctionArg } from '../ts-types/style-define';\nexport interface ICustomCellStylePlugin {\n  new (\n    table: BaseTableAPI,\n    customCellStyle: CustomCellStyle[],\n    customCellStyleArrangement: CustomCellStyleArrangement[]\n  ): CustomCellStylePlugin;\n}\n\nexport class CustomCellStylePlugin {\n  table: BaseTableAPI;\n  customCellStyle: CustomCellStyle[];\n  customCellStyleArrangement: CustomCellStyleArrangement[];\n\n  constructor(\n    table: BaseTableAPI,\n    customCellStyle: CustomCellStyle[],\n    customCellStyleArrangement: CustomCellStyleArrangement[]\n  ) {\n    this.table = table;\n    this.customCellStyle = customCellStyle;\n    this.customCellStyleArrangement = customCellStyleArrangement;\n  }\n\n  getCustomCellStyle(col: number, row: number) {\n    const customStyleIds = this.getCustomCellStyleIds(col, row);\n    if (customStyleIds.length) {\n      const styles: ColumnStyleOption[] = [];\n\n      customStyleIds.forEach(customStyleId => {\n        const styleOption = this.getCustomCellStyleOption(customStyleId);\n        if (isFunction(styleOption?.style)) {\n          const style = styleOption.style({\n            col,\n            row,\n            table: this.table,\n            value: this.table.getCellValue(col, row),\n            dataValue: this.table.getCellOriginValue(col, row),\n            cellHeaderPaths: this.table.getCellHeaderPaths(col, row)\n          });\n          styles.push(style);\n        } else if (styleOption?.style) {\n          styles.push(styleOption.style);\n        }\n      });\n\n      return merge({}, ...styles);\n      // const styleOption = this.getCustomCellStyleOption(customStyleId);\n      // return styleOption?.style;\n    }\n    return undefined;\n  }\n\n  getCustomCellStyleIds(col: number, row: number) {\n    // let customStyleId;\n    const customStyleIds: string[] = [];\n\n    const range = this.table.getCellRange(col, row);\n    for (let c = range.start.col; c <= range.end.col; c++) {\n      for (let r = range.start.row; r <= range.end.row; r++) {\n        // eslint-disable-next-line no-loop-func\n        this.customCellStyleArrangement.forEach(style => {\n          if (style.cellPosition.range) {\n            if (\n              style.cellPosition.range.start.col <= c &&\n              style.cellPosition.range.end.col >= c &&\n              style.cellPosition.range.start.row <= r &&\n              style.cellPosition.range.end.row >= r\n            ) {\n              // customStyleId = style.customStyleId;\n              customStyleIds.push(style.customStyleId);\n            }\n          } else if (style.cellPosition.col === c && style.cellPosition.row === r) {\n            // customStyleId = style.customStyleId;\n            customStyleIds.push(style.customStyleId);\n          }\n        });\n      }\n    }\n\n    return customStyleIds;\n  }\n\n  getCustomCellStyleOption(customStyleId: string) {\n    return this.customCellStyle.find(style => style.id === customStyleId);\n  }\n\n  registerCustomCellStyle(\n    customStyleId: string,\n    customStyle: ColumnStyleOption | ((styleArg: StylePropertyFunctionArg) => ColumnStyleOption) | undefined | null\n  ) {\n    const index = this.customCellStyle.findIndex(style => style.id === customStyleId);\n    if (index === -1) {\n      this.customCellStyle.push({\n        id: customStyleId,\n        style: customStyle\n      });\n    } else {\n      this.customCellStyle[index] = {\n        id: customStyleId,\n        style: customStyle\n      };\n    }\n\n    this.customCellStyleArrangement.forEach(cellStyle => {\n      const cellPos = cellStyle.cellPosition;\n      if (cellStyle.customStyleId === customStyleId) {\n        if (cellPos.range) {\n          for (\n            let col = Math.max(0, cellPos.range.start.col);\n            col <= Math.min(this.table.colCount - 1, cellPos.range.end.col);\n            col++\n          ) {\n            for (\n              let row = Math.max(0, cellPos.range.start.row);\n              row <= Math.min(this.table.rowCount - 1, cellPos.range.end.row);\n              row++\n            ) {\n              this.table.scenegraph.updateCellContent(col, row);\n            }\n          }\n        } else {\n          this.table.scenegraph.updateCellContent(cellPos.col, cellPos.row);\n        }\n      }\n    });\n    this.table.scenegraph.updateNextFrame();\n  }\n\n  arrangeCustomCellStyle(\n    cellPos: {\n      col?: number;\n      row?: number;\n      range?: CellRange;\n    },\n    customStyleId: string | undefined | null,\n    forceFastUpdate?: boolean\n  ) {\n    const index = this.customCellStyleArrangement.findIndex(style => {\n      if (style.cellPosition.range && cellPos.range) {\n        return (\n          style.cellPosition.range.start.col === cellPos.range.start.col &&\n          style.cellPosition.range.start.row === cellPos.range.start.row &&\n          style.cellPosition.range.end.col === cellPos.range.end.col &&\n          style.cellPosition.range.end.row === cellPos.range.end.row\n        );\n      }\n      return style.cellPosition.col === cellPos.col && style.cellPosition.row === cellPos.row;\n    });\n\n    if (index === -1 && !customStyleId) {\n      // do nothing\n      return;\n    } else if (index === -1 && customStyleId) {\n      // add new style\n      this.customCellStyleArrangement.push({\n        cellPosition: {\n          col: cellPos.col,\n          row: cellPos.row,\n          range: cellPos.range\n        },\n        customStyleId: customStyleId\n      });\n    } else if (this.customCellStyleArrangement[index].customStyleId === customStyleId) {\n      // same style\n      return;\n    } else if (customStyleId) {\n      // update style\n      this.customCellStyleArrangement[index].customStyleId = customStyleId;\n    } else {\n      // delete useless style\n      this.customCellStyleArrangement.splice(index, 1);\n    }\n\n    const style = this.getCustomCellStyleOption(customStyleId)?.style;\n    // let forceFastUpdate;\n    if (style) {\n      forceFastUpdate = true;\n      for (const key in style) {\n        if (cellStyleKeys.indexOf(key) === -1) {\n          forceFastUpdate = false;\n          break;\n        }\n      }\n    }\n\n    // update cell group\n    if (cellPos.range) {\n      for (\n        let col = Math.max(0, cellPos.range.start.col);\n        col <= Math.min(this.table.colCount - 1, cellPos.range.end.col);\n        col++\n      ) {\n        for (\n          let row = Math.max(0, cellPos.range.start.row);\n          row <= Math.min(this.table.rowCount - 1, cellPos.range.end.row);\n          row++\n        ) {\n          const range = this.table.getCellRange(col, row);\n          for (let c = range.start.col; c <= range.end.col; c++) {\n            for (let r = range.start.row; r <= range.end.row; r++) {\n              this.table.scenegraph.updateCellContent(c, r, forceFastUpdate);\n            }\n          }\n          // this.table.scenegraph.updateCellContent(col, row);\n        }\n      }\n    } else {\n      this.table.scenegraph.updateCellContent(cellPos.col, cellPos.row, forceFastUpdate);\n    }\n\n    this.table.scenegraph.updateNextFrame();\n  }\n\n  updateCustomCell(customCellStyle: CustomCellStyle[], customCellStyleArrangement: CustomCellStyleArrangement[]) {\n    this.customCellStyle.length = 0;\n    this.customCellStyleArrangement.length = 0;\n    customCellStyle.forEach((cellStyle: CustomCellStyle) => {\n      this.registerCustomCellStyle(cellStyle.id, cellStyle.style);\n    });\n    customCellStyleArrangement.forEach((cellStyle: CustomCellStyleArrangement) => {\n      this.arrangeCustomCellStyle(cellStyle.cellPosition, cellStyle.customStyleId);\n    });\n  }\n\n  hasCustomCellStyle(customStyleId: string) {\n    return this.customCellStyle.some(style => style.id === customStyleId);\n  }\n}\n\nexport function mergeStyle(cacheStyle: Style, customCellStyle: ColumnStyleOption): Style {\n  cacheStyle = cacheStyle.clone();\n\n  for (const key in customCellStyle) {\n    const value = (customCellStyle as any)[key];\n    if (isValid(value)) {\n      (cacheStyle as any)[`_${key}`] = value;\n    }\n  }\n\n  return cacheStyle;\n}\n\nexport const registerCustomCellStylePlugin = () => {\n  Factory.registerComponent('customCellStylePlugin', CustomCellStylePlugin);\n};\n\n// export type ICustomCellStylePlugin = typeof CustomCellStylePlugin;\n"]}