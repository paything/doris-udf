import type { PivotTable } from '../PivotTable';
import type { BaseTableAPI } from '../ts-types/base-table';
import type { IHeaderTreeDefine, IIndicator, PivotTableConstructorOptions } from '../ts-types';
import type { SimpleHeaderLayoutMap } from './simple-header-layout';
import type { LayouTreeNode } from './tree-helper';
import { DimensionTree } from './tree-helper';
export declare function checkHasAggregation(layoutMap: SimpleHeaderLayoutMap): boolean;
export declare function checkHasAggregationOnTop(layoutMap: SimpleHeaderLayoutMap): number;
export declare function checkHasAggregationOnBottom(layoutMap: SimpleHeaderLayoutMap): number;
export declare function checkHasTreeDefine(layoutMap: SimpleHeaderLayoutMap): boolean;
export declare function hasAutoImageColumn(table: BaseTableAPI): boolean;
export declare function parseColKeyRowKeyForPivotTable(table: PivotTable, options: PivotTableConstructorOptions): {
    rowKeys: string[];
    columnKeys: string[];
    indicatorKeys: string[];
    columnDimensionTree: DimensionTree;
    rowDimensionTree: DimensionTree;
};
export declare function supplementIndicatorNodesForCustomTree(customTree: IHeaderTreeDefine[], indicators: (string | IIndicator)[]): IHeaderTreeDefine[];
export declare function deleteHideIndicatorNode(treeNodeChildren: LayouTreeNode[], indicators: (string | IIndicator)[], hasHideNode: boolean, table: PivotTable): void;
