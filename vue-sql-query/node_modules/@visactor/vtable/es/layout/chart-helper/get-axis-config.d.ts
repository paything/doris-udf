import type { PivotHeaderLayoutMap } from '../pivot-header-layout';
import type { CollectedValue } from '../../ts-types';
type AxisRange = {
    min: number;
    max: number;
};
export type GetAxisConfigInPivotChart = (col: number, row: number, layout: PivotHeaderLayoutMap) => any;
export declare function getAxisConfigInPivotChart(col: number, row: number, layout: PivotHeaderLayoutMap): any;
export declare function getAxisOption(col: number, row: number, orient: string, layout: PivotHeaderLayoutMap): {
    axisOption: any;
    isPercent: any;
    isZeroAlign: boolean;
    isTickAlign: boolean;
    seriesIndice: any;
    theme: any;
    chartType: any;
} | {
    axisOption: any;
    isPercent: boolean;
    isZeroAlign: boolean;
    isTickAlign: boolean;
    theme: any;
    chartType: any;
    seriesIndice?: undefined;
};
export declare function getAxisRange(collectedValues: Record<string, Record<string, CollectedValue>>, indicatorKeys: string[], isZeroAlign: boolean, colPath: string, seriesId: number | number[]): AxisRange | null;
export declare function isTopOrBottomAxis(col: number, row: number, layout: PivotHeaderLayoutMap): boolean;
export declare function isLeftOrRightAxis(col: number, row: number, layout: PivotHeaderLayoutMap): boolean;
export declare function hasLinearAxis(spec: any, tableAxesConfig: any, isHorizontal: boolean, isThisXAxis: boolean): boolean;
export declare function getAxisRangeAndTicks(col: number, row: number, index: number, position: 'bottom' | 'top' | 'left' | 'right', subAxisPosition: 'bottom' | 'top' | 'left' | 'right', indicatorKeys: string[], path: string, layout: PivotHeaderLayoutMap): {
    axisOption: any;
    range: AxisRange;
    targetTicks: number[];
    targetRange: {
        max: number;
        min: number;
    };
};
export {};
