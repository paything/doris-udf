import type { ITableThemeDefine, PartialTableThemeDefine, RequiredTableThemeDefine } from '../ts-types';
export declare class TableTheme implements ITableThemeDefine {
    private internalTheme;
    private _defaultStyle;
    private _header;
    private _cornerHeader;
    private _cornerRightTopCell;
    private _cornerLeftBottomCell;
    private _cornerRightBottomCell;
    private _rightFrozen;
    private _bottomFrozen;
    private _rowHeader;
    private _body;
    private _groupTitle;
    private _scroll;
    private _tooltip;
    private _frameStyle;
    private _columnResize;
    private _dragHeaderSplitLine;
    private _frozenColumnLine;
    private _selectionStyle;
    private _axisStyle;
    private _checkboxStyle;
    private _radioStyle;
    private _switchStyle;
    private _buttonStyle;
    private _textPopTipStyle;
    private _internalIconsStyle;
    isPivot: boolean;
    name: string;
    constructor(obj: PartialTableThemeDefine | ITableThemeDefine, superTheme: ITableThemeDefine);
    getExtendTheme(): PartialTableThemeDefine | ITableThemeDefine;
    clearBodyStyleCache(): void;
    get font(): string;
    get underlayBackgroundColor(): string;
    get cellInnerBorder(): boolean;
    get cellBorderClipDirection(): 'top-left' | 'bottom-right';
    get _contentOffset(): number;
    get defaultStyle(): RequiredTableThemeDefine['defaultStyle'];
    get cornerHeaderStyle(): ITableThemeDefine['cornerHeaderStyle'];
    get cornerRightTopCellStyle(): ITableThemeDefine['cornerRightTopCellStyle'];
    get cornerLeftBottomCellStyle(): ITableThemeDefine['cornerLeftBottomCellStyle'];
    get cornerRightBottomCellStyle(): ITableThemeDefine['cornerRightBottomCellStyle'];
    get rightFrozenStyle(): ITableThemeDefine['rightFrozenStyle'];
    get bottomFrozenStyle(): ITableThemeDefine['bottomFrozenStyle'];
    get rowHeaderStyle(): ITableThemeDefine['rowHeaderStyle'];
    get headerStyle(): ITableThemeDefine['headerStyle'];
    get bodyStyle(): ITableThemeDefine['bodyStyle'];
    get groupTitleStyle(): ITableThemeDefine['groupTitleStyle'];
    get frameStyle(): ITableThemeDefine['frameStyle'];
    get scrollStyle(): ITableThemeDefine['scrollStyle'];
    get tooltipStyle(): ITableThemeDefine['tooltipStyle'];
    get columnResize(): RequiredTableThemeDefine['columnResize'];
    get dragHeaderSplitLine(): RequiredTableThemeDefine['dragHeaderSplitLine'];
    get frozenColumnLine(): RequiredTableThemeDefine['frozenColumnLine'];
    get selectionStyle(): RequiredTableThemeDefine['selectionStyle'];
    get axisStyle(): RequiredTableThemeDefine['axisStyle'];
    get checkboxStyle(): RequiredTableThemeDefine['checkboxStyle'];
    get radioStyle(): RequiredTableThemeDefine['radioStyle'];
    get switchStyle(): RequiredTableThemeDefine['switchStyle'];
    get buttonStyle(): RequiredTableThemeDefine['buttonStyle'];
    get textPopTipStyle(): RequiredTableThemeDefine['textPopTipStyle'];
    get functionalIconsStyle(): RequiredTableThemeDefine['functionalIconsStyle'];
    hasProperty(names: string[]): boolean;
    extends(obj: PartialTableThemeDefine): TableTheme;
    private getStyle;
}
