{"version":3,"sources":["../src/body-helper/body-helper.ts"],"names":[],"mappings":"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","file":"body-helper.js","sourcesContent":["import type { ColumnIconOption, ImageIcon, ListTableAPI, SvgIcon } from '../ts-types';\nimport { HierarchyState, InternalIconName } from '../ts-types';\nimport * as registerIcons from '../icons';\nimport { Style } from './style/Style';\nimport { TextStyle } from './style/MultilineTextStyle';\nimport { ProgressBarStyle } from './style/ProgressBarStyle';\nimport { ImageStyle } from './style/ImageStyle';\nimport type { BaseTableAPI } from '../ts-types/base-table';\nimport * as icons from '../tools/icons';\nimport { obj } from '../tools/helper';\nimport { CheckboxStyle } from './style/CheckboxStyle';\nimport { RadioStyle } from './style/RadioStyle';\nimport { isValid } from '@visactor/vutils';\nimport { SwitchStyle } from './style/SwitchStyle';\nimport { ButtonStyle } from './style/ButtonStyle';\nexport class BodyHelper {\n  expandIcon: SvgIcon;\n  collapseIcon: SvgIcon;\n  _table: BaseTableAPI;\n  constructor(_table: BaseTableAPI) {\n    this._table = _table;\n    const regedIcons = registerIcons.get();\n    //展开折叠按钮\n    this.expandIcon = regedIcons[InternalIconName.expandIconName] as SvgIcon;\n    this.collapseIcon = regedIcons[InternalIconName.collapseIconName] as SvgIcon;\n  }\n  getIcons(\n    col: number,\n    row: number,\n    cellValue: any,\n    dataValue: any,\n    context: CanvasRenderingContext2D\n  ): ColumnIconOption[] {\n    //加入固定列图标 排序 文本中元素\n    const iconArr: ColumnIconOption[] = [];\n\n    const hierarchyIcon = this.getHierarchyIcon(col, row);\n    if (hierarchyIcon) {\n      iconArr.push(hierarchyIcon);\n    }\n\n    const { icon: iconDefine } = this._table.getBodyColumnDefine(col, row);\n\n    if (iconDefine) {\n      let iconResults;\n      if (typeof iconDefine === 'function') {\n        const arg = {\n          col,\n          row,\n          value: cellValue,\n          dataValue,\n          table: this._table\n        };\n        iconResults = iconDefine(arg);\n      } else {\n        iconResults = iconDefine;\n      }\n      const regedIcons = registerIcons.get();\n      const addIcon = (columnIcon: string | ColumnIconOption) => {\n        let icon;\n        if (typeof columnIcon === 'string') {\n          icon = regedIcons[columnIcon];\n        } else {\n          icon = columnIcon;\n        }\n        if (icon) {\n          iconArr.push(icon);\n        }\n      };\n      if (Array.isArray(iconResults)) {\n        iconResults.forEach((columnIcon: string | ColumnIconOption, index: number) => {\n          addIcon(columnIcon);\n        });\n      } else {\n        addIcon(iconResults);\n      }\n    }\n\n    context &&\n      iconArr.forEach((i, index) => {\n        if ((i as any).content || (<ImageIcon>i).src) {\n          iconArr[index] = this.getCellIconFromRecordValue(i, col, row);\n          // if ((<FontIcon>i).font)\n          //   helper.testFontLoad((<FontIcon>i).font, (<FontIcon>i).content, col, row);\n        }\n      });\n\n    return iconArr;\n  }\n  getStyleClass(\n    cellType:\n      | 'text'\n      | 'link'\n      | 'image'\n      | 'video'\n      | 'chart'\n      | 'sparkline'\n      | 'progressbar'\n      | 'chart'\n      | 'checkbox'\n      | 'radio'\n      | 'switch'\n      | 'button'\n  ) {\n    switch (cellType) {\n      case 'text':\n        return TextStyle;\n      case 'image':\n        return ImageStyle;\n      case 'video':\n        return ImageStyle;\n      case 'link':\n        return TextStyle;\n      case 'chart':\n        return Style;\n      case 'sparkline':\n        return Style;\n      case 'progressbar':\n        return ProgressBarStyle;\n      case 'checkbox':\n        return CheckboxStyle;\n      case 'radio':\n        return RadioStyle;\n      case 'switch':\n        return SwitchStyle;\n      case 'button':\n        return ButtonStyle;\n    }\n    return TextStyle;\n  }\n  getCellIconFromRecordValue(icon: ColumnIconOption, col: number, row: number): ColumnIconOption;\n  getCellIconFromRecordValue(icon: ColumnIconOption[], col: number, row: number): ColumnIconOption[];\n  getCellIconFromRecordValue(\n    icon: ColumnIconOption | ColumnIconOption[],\n    col: number,\n    row: number\n  ): ColumnIconOption | ColumnIconOption[];\n  getCellIconFromRecordValue(\n    icon: ColumnIconOption | ColumnIconOption[],\n    col: number,\n    row: number\n  ): ColumnIconOption | ColumnIconOption[] {\n    if (Array.isArray(icon)) {\n      return icon.map(i => this.getCellIconFromRecordValue(i, col, row));\n    }\n    // icon.positionType = IconPosition.inlineFront;\n    if (!obj.isObject(icon) || typeof icon === 'function') {\n      return (this._table as ListTableAPI).getFieldData(icon, col, row);\n    }\n    // 新建对象 挨个属性赋值\n    const retIcon: any = {};\n    const iconOpt: any = icon;\n    icons.iconPropKeys.forEach(k => {\n      if (typeof iconOpt[k] !== 'undefined') {\n        const f = (this._table as ListTableAPI).getFieldData(iconOpt[k], col, row);\n        if (isValid(f)) {\n          retIcon[k] = f;\n        } else if (!this._table._hasField?.(iconOpt[k], col, row)) {\n          retIcon[k] = iconOpt[k];\n        }\n      }\n    });\n    return retIcon;\n  }\n\n  getHierarchyIcon(col: number, row: number) {\n    const hierarchyState = this._table.getHierarchyState(col, row);\n    if (hierarchyState === HierarchyState.expand) {\n      //展开状态 应该显示-号\n      return this.expandIcon;\n    } else if (hierarchyState === HierarchyState.collapse) {\n      //折叠状态 应该显示-号\n      return this.collapseIcon;\n    }\n    return undefined;\n  }\n  getHierarchyIconWidth() {\n    return this.expandIcon.width + (this.expandIcon.marginLeft ?? 0) + (this.expandIcon.marginRight ?? 0);\n  }\n}\n"]}