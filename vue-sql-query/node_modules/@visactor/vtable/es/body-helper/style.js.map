{"version":3,"sources":["../src/body-helper/style.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAW3C,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAC;AACvD,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEtC,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAElD,MAAM,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;AAC7B,OAAO,EACL,UAAU,EACV,KAAK,EACL,WAAW,EACX,UAAU,EACV,SAAS,EAKV,CAAC;AACF,MAAM,UAAU,EAAE,CAChB,WAA8B,EAC9B,SAA4B,EAC5B,QAAkC,EAClC,gBAA8B,KAAK,EACnC,kBAA2B,EAC3B,KAAiB;;IAEjB,IAAI,WAAW,IAAI,SAAS,EAAE;QAC5B,IAAI,WAAW,YAAY,KAAK,EAAE;YAChC,OAAO,WAAW,CAAC;SACpB;aAAM,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;YAC5C,OAAO,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;SACjG;QACD,IAAI,CAAC,WAAW,EAAE;YAChB,WAAW,GAAG,EAAE,CAAC;SAClB;QACD,IAAI,kBAAkB,IAAI,CAAC,OAAO,CAAE,WAAmB,CAAC,YAAY,CAAC,EAAE;YACpE,WAAmB,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1C;QACD,IAAI,aAAa,KAAK,aAAa,EAAE;YACnC,OAAO,IAAI,aAAa,CAAC,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,EAAE,EAAE,CAAC,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,EAAE,CAAQ,EAAE,CAAC,MAAA,KAAK,CAAC,aAAa,mCAAI,EAAE,CAAQ,CAAC,CAAC;SAC3G;aAAM,IAAI,aAAa,KAAK,UAAU,EAAE;YACvC,OAAO,IAAI,UAAU,CAAC,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,EAAE,EAAE,CAAC,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,EAAE,CAAQ,EAAE,CAAC,MAAA,KAAK,CAAC,UAAU,mCAAI,EAAE,CAAQ,CAAC,CAAC;SACrG;aAAM,IAAI,aAAa,KAAK,WAAW,EAAE;YACxC,OAAO,IAAI,WAAW,CAAC,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,EAAE,EAAE,CAAC,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,EAAE,CAAQ,EAAE,CAAC,MAAA,KAAK,CAAC,WAAW,mCAAI,EAAE,CAAQ,CAAC,CAAC;SACvG;aAAM,IAAI,aAAa,KAAK,WAAW,EAAE;YACxC,OAAO,IAAI,WAAW,CAAC,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,EAAE,EAAE,CAAC,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,EAAE,CAAQ,EAAE,CAAC,MAAA,KAAK,CAAC,WAAW,mCAAI,EAAE,CAAQ,CAAC,CAAC;SACvG;QACD,OAAO,IAAI,aAAa,CAAC,CAAC,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,EAAE,CAAQ,EAAE,CAAC,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,EAAE,CAAQ,CAAC,CAAC;KAChF;IACD,OAAO,aAAa,CAAC,OAAO,CAAC;AAC/B,CAAC","file":"style.js","sourcesContent":["import { isValid } from '@visactor/vutils';\nimport type {\n  ColumnStyle,\n  ColumnStyleOption,\n  FullExtendStyle,\n  IImageStyleOption,\n  ITextStyleOption,\n  IStyleOption,\n  StylePropertyFunctionArg\n} from '../ts-types';\n\nimport { ImageStyle } from './style/ImageStyle';\nimport { TextStyle } from './style/MultilineTextStyle';\nimport { NumberStyle } from './style/NumberStyle';\nimport { Style } from './style/Style';\nimport type { TableTheme } from '../themes/theme-define';\nimport { CheckboxStyle } from './style/CheckboxStyle';\nimport { RadioStyle } from './style/RadioStyle';\nimport { SwitchStyle } from './style/SwitchStyle';\nimport { ButtonStyle } from './style/ButtonStyle';\n\nconst { EVENT_TYPE } = Style;\nexport {\n  EVENT_TYPE,\n  Style,\n  NumberStyle,\n  ImageStyle,\n  TextStyle,\n  // types\n  IStyleOption,\n  IImageStyleOption,\n  ITextStyleOption\n};\nexport function of(\n  columnStyle: ColumnStyleOption,\n  bodyStyle: ColumnStyleOption,\n  styleArg: StylePropertyFunctionArg,\n  StyleClassDef: typeof Style = Style,\n  globalAutoWrapText: boolean,\n  theme: TableTheme\n): FullExtendStyle {\n  if (columnStyle || bodyStyle) {\n    if (columnStyle instanceof Style) {\n      return columnStyle;\n    } else if (typeof columnStyle === 'function') {\n      return of(columnStyle(styleArg), bodyStyle, styleArg, StyleClassDef, globalAutoWrapText, theme);\n    }\n    if (!columnStyle) {\n      columnStyle = {};\n    }\n    if (globalAutoWrapText && !isValid((columnStyle as any).autoWrapText)) {\n      (columnStyle as any).autoWrapText = true;\n    }\n    if (StyleClassDef === CheckboxStyle) {\n      return new CheckboxStyle(columnStyle ?? {}, (bodyStyle ?? {}) as any, (theme.checkboxStyle ?? {}) as any);\n    } else if (StyleClassDef === RadioStyle) {\n      return new RadioStyle(columnStyle ?? {}, (bodyStyle ?? {}) as any, (theme.radioStyle ?? {}) as any);\n    } else if (StyleClassDef === SwitchStyle) {\n      return new SwitchStyle(columnStyle ?? {}, (bodyStyle ?? {}) as any, (theme.switchStyle ?? {}) as any);\n    } else if (StyleClassDef === ButtonStyle) {\n      return new ButtonStyle(columnStyle ?? {}, (bodyStyle ?? {}) as any, (theme.buttonStyle ?? {}) as any);\n    }\n    return new StyleClassDef((columnStyle ?? {}) as any, (bodyStyle ?? {}) as any);\n  }\n  return StyleClassDef.DEFAULT;\n}\n"]}