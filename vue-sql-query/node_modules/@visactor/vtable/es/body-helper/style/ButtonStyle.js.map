{"version":3,"sources":["../src/body-helper/style/ButtonStyle.ts"],"names":[],"mappings":"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","file":"ButtonStyle.js","sourcesContent":["import type { IStyleOption, ButtonStyleOption } from '../../ts-types';\nimport { Style } from '../style';\nimport type { ButtonStyle as ButtonStyleThemeOption } from '../../ts-types/column/style';\n\nlet defaultStyle: ButtonStyle;\n\nexport class ButtonStyle extends Style {\n  private _buttonColor: string;\n  private _buttonBorderColor: string;\n  private _buttonLineWidth: number;\n  private _buttonBorderRadius: number;\n  private _buttonHoverColor: string;\n  private _buttonHoverBorderColor: string;\n  private _buttonTextHoverColor: string;\n  private _buttonDisableColor: string;\n  private _buttonDisableBorderColor: string;\n  private _buttonTextDisableColor: string;\n  private _buttonTextHoverBorderColor: string;\n  private _buttonPadding: number;\n\n  static get DEFAULT(): ButtonStyle {\n    return defaultStyle ? defaultStyle : (defaultStyle = new ButtonStyle());\n  }\n\n  constructor(\n    style: ButtonStyleOption = {},\n    headerStyle: ButtonStyleOption = {},\n    buttonThemeStyle: ButtonStyleThemeOption = {}\n  ) {\n    super(style, headerStyle);\n\n    this._buttonColor = (style?.buttonStyle?.buttonColor ?? buttonThemeStyle?.buttonColor) || '#165DFF';\n    this._buttonBorderColor =\n      (style?.buttonStyle?.buttonBorderColor ?? buttonThemeStyle?.buttonBorderColor) || '#165DFF';\n    this._buttonLineWidth = (style?.buttonStyle?.buttonLineWidth ?? buttonThemeStyle?.buttonLineWidth) || 1;\n    this._buttonBorderRadius = (style?.buttonStyle?.buttonBorderRadius ?? buttonThemeStyle?.buttonBorderRadius) || 2;\n    this._buttonHoverColor = (style?.buttonStyle?.buttonHoverColor ?? buttonThemeStyle?.buttonHoverColor) || '#4080FF';\n    this._buttonHoverBorderColor =\n      (style?.buttonStyle?.buttonHoverBorderColor ?? buttonThemeStyle?.buttonHoverBorderColor) || '#4080FF';\n    this._buttonTextHoverColor = style?.buttonStyle?.buttonTextHoverColor ?? buttonThemeStyle?.buttonTextHoverColor;\n    this._buttonDisableColor =\n      (style?.buttonStyle?.buttonDisableColor ?? buttonThemeStyle?.buttonDisableColor) || '#94bfff';\n    this._buttonDisableBorderColor =\n      (style?.buttonStyle?.buttonDisableBorderColor ?? buttonThemeStyle?.buttonDisableBorderColor) || '#94bfff';\n    this._buttonTextDisableColor =\n      style?.buttonStyle?.buttonTextDisableColor ?? buttonThemeStyle?.buttonTextDisableColor;\n    this._buttonPadding = (style?.buttonStyle?.buttonPadding ?? buttonThemeStyle?.buttonPadding) || 10;\n  }\n\n  get buttonColor(): string {\n    return this._buttonColor;\n  }\n  set buttonColor(buttonColor: string) {\n    this._buttonColor = buttonColor;\n  }\n\n  get buttonBorderColor(): string {\n    return this._buttonBorderColor;\n  }\n  set buttonBorderColor(buttonBorderColor: string) {\n    this._buttonBorderColor = buttonBorderColor;\n  }\n\n  get buttonLineWidth(): number {\n    return this._buttonLineWidth;\n  }\n  set buttonLineWidth(buttonLineWidth: number) {\n    this._buttonLineWidth = buttonLineWidth;\n  }\n\n  get buttonBorderRadius(): number {\n    return this._buttonBorderRadius;\n  }\n  set buttonBorderRadius(buttonBorderRadius: number) {\n    this._buttonBorderRadius = buttonBorderRadius;\n  }\n\n  get buttonHoverColor(): string {\n    return this._buttonHoverColor;\n  }\n  set buttonHoverColor(buttonHoverColor: string) {\n    this._buttonHoverColor = buttonHoverColor;\n  }\n\n  get buttonHoverBorderColor(): string {\n    return this._buttonHoverBorderColor;\n  }\n  set buttonHoverBorderColor(buttonHoverBorderColor: string) {\n    this._buttonHoverBorderColor = buttonHoverBorderColor;\n  }\n\n  get buttonTextHoverColor(): string {\n    return this._buttonTextHoverColor;\n  }\n  set buttonTextHoverColor(buttonTextHoverColor: string) {\n    this._buttonTextHoverColor = buttonTextHoverColor;\n  }\n\n  get buttonDisableColor(): string {\n    return this._buttonDisableColor;\n  }\n  set buttonDisableColor(buttonDisableColor: string) {\n    this._buttonDisableColor = buttonDisableColor;\n  }\n\n  get buttonDisableBorderColor(): string {\n    return this._buttonDisableBorderColor;\n  }\n  set buttonDisableBorderColor(buttonDisableBorderColor: string) {\n    this._buttonDisableBorderColor = buttonDisableBorderColor;\n  }\n\n  get buttonTextDisableColor(): string {\n    return this._buttonTextDisableColor;\n  }\n  set buttonTextDisableColor(buttonTextDisableColor: string) {\n    this._buttonTextDisableColor = buttonTextDisableColor;\n  }\n\n  get buttonTextHoverBorderColor(): string {\n    return this._buttonTextHoverBorderColor;\n  }\n  set buttonTextHoverBorderColor(buttonTextHoverBorderColor: string) {\n    this._buttonTextHoverBorderColor = buttonTextHoverBorderColor;\n  }\n\n  get buttonPadding(): number {\n    return this._buttonPadding;\n  }\n  set buttonPadding(buttonPadding: number) {\n    this._buttonPadding = buttonPadding;\n  }\n\n  getStyle(style: IStyleOption): ButtonStyle {\n    return new ButtonStyle(style, this);\n  }\n\n  clone(): ButtonStyle {\n    return new ButtonStyle(this);\n  }\n}\n"]}