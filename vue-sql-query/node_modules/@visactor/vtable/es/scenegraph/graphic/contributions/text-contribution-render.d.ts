import type { IContext2d, IDrawContext, IGraphicAttribute, IMarkAttribute, IText, ITextGraphicAttribute, ITextRenderContribution, IThemeAttribute } from './../../../vrender';
import { BaseRenderContributionTime } from './../../../vrender';
export declare class SuffixTextBeforeRenderContribution implements ITextRenderContribution {
    time: BaseRenderContributionTime;
    useStyle: boolean;
    order: number;
    drawShape(text: IText, context: IContext2d, x: number, y: number, doFill: boolean, doStroke: boolean, fVisible: boolean, sVisible: boolean, textAttribute: Required<ITextGraphicAttribute>, drawContext: IDrawContext, fillCb?: (ctx: IContext2d, markAttribute: Partial<IMarkAttribute & IGraphicAttribute>, themeAttribute: IThemeAttribute) => boolean, strokeCb?: (ctx: IContext2d, markAttribute: Partial<IMarkAttribute & IGraphicAttribute>, themeAttribute: IThemeAttribute) => boolean, doFillOrStroke?: {
        doFill: boolean;
        doStroke: boolean;
    }): void;
    drawUnderLine(underline: number, lineThrough: number, text: IText, x: number, y: number, z: number, textAttribute: Required<ITextGraphicAttribute>, context: IContext2d, textStr: string): void;
}
