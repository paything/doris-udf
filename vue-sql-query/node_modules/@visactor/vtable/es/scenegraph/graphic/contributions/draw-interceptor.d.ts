import type { IDrawItemInterceptorContribution, IGraphic, IRenderService, IDrawContext, IDrawContribution, IGraphicRenderDrawParams, IImage } from './../../../vrender';
export declare class VTableDrawItemInterceptorContribution implements IDrawItemInterceptorContribution {
    order: number;
    interceptors: IDrawItemInterceptorContribution[];
    constructor();
    afterDrawItem(graphic: IGraphic, renderService: IRenderService, drawContext: IDrawContext, drawContribution: IDrawContribution, params?: IGraphicRenderDrawParams): boolean;
    beforeDrawItem(graphic: IGraphic, renderService: IRenderService, drawContext: IDrawContext, drawContribution: IDrawContribution, params?: IGraphicRenderDrawParams): boolean;
}
export declare class ImageDrawItemInterceptorContribution implements IDrawItemInterceptorContribution {
    order: number;
    afterDrawItem(graphic: IGraphic, renderService: IRenderService, drawContext: IDrawContext, drawContribution: IDrawContribution, params?: IGraphicRenderDrawParams): boolean;
    protected drawItem(graphic: IImage, renderService: IRenderService, drawContext: IDrawContext, drawContribution: IDrawContribution, params?: IGraphicRenderDrawParams): boolean;
}
