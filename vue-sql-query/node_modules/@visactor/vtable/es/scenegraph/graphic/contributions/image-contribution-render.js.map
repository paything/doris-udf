{"version":3,"sources":["../src/scenegraph/graphic/contributions/image-contribution-render.ts"],"names":[],"mappings":"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","file":"image-contribution-render.js","sourcesContent":["import type {\n  IImage,\n  IContext2d,\n  IImageGraphicAttribute,\n  IMarkAttribute,\n  IGraphicAttribute,\n  IThemeAttribute,\n  IImageRenderContribution,\n  IDrawContext\n} from './../../../vrender';\nimport { BaseRenderContributionTime, injectable } from './../../../vrender';\n\n/**\n * @description: image支持绘制部分形状\n * @return {*}\n */\n@injectable()\nexport class BeforeImageRenderContribution implements IImageRenderContribution {\n  time: BaseRenderContributionTime = BaseRenderContributionTime.beforeFillStroke;\n  useStyle = true;\n  order = 0;\n  drawShape(\n    image: IImage,\n    context: IContext2d,\n    x: number,\n    y: number,\n    doFill: boolean,\n    doStroke: boolean,\n    fVisible: boolean,\n    sVisible: boolean,\n    imageAttribute: Required<IImageGraphicAttribute>,\n    drawContext: IDrawContext,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    doFillOrStroke?: { doFill: boolean; doStroke: boolean }\n  ) {\n    const { shape } = image.attribute as any;\n\n    if (shape === 'circle') {\n      const { width = imageAttribute.width, height = imageAttribute.height } = image.attribute;\n\n      context.beginPath();\n      context.arc(x + width / 2, y + height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI);\n      context.closePath();\n\n      context.save();\n      context.clip();\n    }\n  }\n}\n\n@injectable()\nexport class AfterImageRenderContribution implements IImageRenderContribution {\n  time: BaseRenderContributionTime = BaseRenderContributionTime.afterFillStroke;\n  useStyle = true;\n  order = 0;\n  drawShape(\n    image: IImage,\n    context: IContext2d,\n    x: number,\n    y: number,\n    doFill: boolean,\n    doStroke: boolean,\n    fVisible: boolean,\n    sVisible: boolean,\n    imageAttribute: Required<IImageGraphicAttribute>,\n    drawContext: IDrawContext,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    doFillOrStroke?: { doFill: boolean; doStroke: boolean }\n  ) {\n    const { shape } = image.attribute as any;\n\n    if (shape === 'circle') {\n      context.restore();\n    }\n  }\n}\n\n/**\n * @description: image支持gif动态图片\n * @return {*}\n */\n@injectable()\nexport class BeforeGifImageRenderContribution implements IImageRenderContribution {\n  time: BaseRenderContributionTime = BaseRenderContributionTime.beforeFillStroke;\n  useStyle = true;\n  order = 0;\n  drawShape(\n    image: IImage,\n    context: IContext2d,\n    x: number,\n    y: number,\n    doFill: boolean,\n    doStroke: boolean,\n    fVisible: boolean,\n    sVisible: boolean,\n    imageAttribute: Required<IImageGraphicAttribute>,\n    drawContext: IDrawContext,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    doFillOrStroke?: { doFill: boolean; doStroke: boolean }\n  ) {\n    const { isGif } = image.attribute as any;\n\n    if (isGif && image.playing) {\n      image.attribute.opacity = 0; // hack for static image\n    }\n  }\n}\n\n@injectable()\nexport class AfterGifImageRenderContribution implements IImageRenderContribution {\n  time: BaseRenderContributionTime = BaseRenderContributionTime.afterFillStroke;\n  useStyle = true;\n  order = 0;\n  drawShape(\n    image: IImage,\n    context: IContext2d,\n    x: number,\n    y: number,\n    doFill: boolean,\n    doStroke: boolean,\n    fVisible: boolean,\n    sVisible: boolean,\n    imageAttribute: Required<IImageGraphicAttribute>,\n    drawContext: IDrawContext,\n    fillCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    strokeCb?: (\n      ctx: IContext2d,\n      markAttribute: Partial<IMarkAttribute & IGraphicAttribute>,\n      themeAttribute: IThemeAttribute\n    ) => boolean,\n    doFillOrStroke?: { doFill: boolean; doStroke: boolean }\n  ) {\n    const { isGif } = image.attribute as any;\n\n    if (isGif && image.playing) {\n      image.attribute.opacity = 1; // hack for static image\n      context.globalAlpha = image.attribute.opacity;\n      image.renderFrame(context, x, y);\n    }\n  }\n}\n"]}