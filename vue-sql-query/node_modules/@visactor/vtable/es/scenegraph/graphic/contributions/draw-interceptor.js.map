{"version":3,"sources":["../src/scenegraph/graphic/contributions/draw-interceptor.ts"],"names":[],"mappings":"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","file":"draw-interceptor.js","sourcesContent":["import type {\n  IDrawItemInterceptorContribution,\n  IGraphic,\n  IRenderService,\n  IDrawContext,\n  IDrawContribution,\n  IGraphicRenderDrawParams,\n  IImage\n} from './../../../vrender';\nimport { injectable, createImage } from './../../../vrender';\nimport * as icons from '../../../icons';\nimport { calcKeepAspectRatioSize } from '../../utils/keep-aspect-ratio';\nlet loadingImage: IImage;\n\n@injectable()\nexport class VTableDrawItemInterceptorContribution implements IDrawItemInterceptorContribution {\n  order: number = 1;\n  interceptors: IDrawItemInterceptorContribution[];\n  constructor() {\n    this.interceptors = [new ImageDrawItemInterceptorContribution()];\n  }\n  afterDrawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    for (let i = 0; i < this.interceptors.length; i++) {\n      if (\n        this.interceptors[i].afterDrawItem &&\n        this.interceptors[i].afterDrawItem(graphic, renderService, drawContext, drawContribution, params)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  beforeDrawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    // 【性能方案】判定写在外层,减少遍历判断耗时，10000条数据减少1ms\n    if (\n      (!graphic.in3dMode || drawContext.in3dInterceptor) &&\n      !graphic.shadowRoot &&\n      !(graphic.baseGraphic || graphic.attribute.globalZIndex || graphic.interactiveGraphic)\n    ) {\n      return false;\n    }\n\n    for (let i = 0; i < this.interceptors.length; i++) {\n      if (\n        this.interceptors[i].beforeDrawItem &&\n        this.interceptors[i].beforeDrawItem(graphic, renderService, drawContext, drawContribution, params)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport class ImageDrawItemInterceptorContribution implements IDrawItemInterceptorContribution {\n  order: number = 1;\n\n  afterDrawItem(\n    graphic: IGraphic,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    if (graphic.type === 'image') {\n      this.drawItem(graphic, renderService, drawContext, drawContribution, params);\n    }\n    return false;\n  }\n\n  protected drawItem(\n    graphic: IImage,\n    renderService: IRenderService,\n    drawContext: IDrawContext,\n    drawContribution: IDrawContribution,\n    params?: IGraphicRenderDrawParams\n  ): boolean {\n    const { image: url, gif } = graphic.attribute as any;\n\n    if (gif && graphic.playing) {\n      return false;\n    }\n    if (!url || !graphic.resources) {\n      return false;\n    }\n    const res = graphic.resources.get(url);\n    if (!res || res.state !== 'loading') {\n      return false;\n    }\n\n    if (!loadingImage) {\n      const regedIcons = icons.get();\n      const svg = (regedIcons.loading_pic as any).svg;\n      const width = (regedIcons.loading_pic as any).width;\n      const height = (regedIcons.loading_pic as any).height;\n      loadingImage = createImage({\n        width,\n        height,\n        image: svg\n      });\n    }\n    const { image: loadingUrl } = loadingImage.attribute;\n    if (!url || !loadingImage.resources) {\n      return false;\n    }\n    const loadingRes = loadingImage.resources.get(loadingUrl);\n    if (loadingRes.state !== 'success') {\n      return false;\n    }\n\n    const { context } = drawContext;\n    context.highPerformanceSave();\n    // 直接transform\n    graphic.parent && context.setTransformFromMatrix(graphic.parent.globalTransMatrix, true);\n    graphic.glyphHost &&\n      graphic.glyphHost.parent &&\n      context.setTransformFromMatrix(graphic.glyphHost.parent.globalTransMatrix, true);\n\n    const b = graphic.AABBBounds;\n\n    const { width, height } = calcKeepAspectRatioSize(\n      loadingRes.data.width,\n      loadingRes.data.height,\n      b.width(),\n      b.height()\n    );\n\n    context.drawImage(loadingRes.data, b.x1 + (b.width() - width) / 2, b.y1 + (b.height() - height) / 2, width, height);\n\n    context.highPerformanceRestore();\n\n    return true;\n  }\n}\n"]}