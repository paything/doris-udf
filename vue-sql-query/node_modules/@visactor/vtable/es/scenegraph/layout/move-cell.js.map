{"version":3,"sources":["../src/scenegraph/layout/move-cell.ts"],"names":[],"mappings":"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","file":"move-cell.js","sourcesContent":["import type { Group } from './../../vrender';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport type { CellRange } from '../../ts-types';\nexport function moveHeaderPosition(\n  updateColStart: number,\n  updateColEnd: number,\n  updateRowStart: number,\n  updateRowEnd: number,\n  moveType: 'column' | 'row',\n  // sourceMergeInfo: false | CellRange,\n  // targetMergeInfo: false | CellRange,\n  table: BaseTableAPI\n) {\n  const scene = table.scenegraph;\n\n  // 更新columnGroup列宽\n  for (let col = updateColStart; col <= updateColEnd; col++) {\n    const columnWidth = table.getColWidth(col);\n    const columnHeaderGroup = table.scenegraph.getColGroup(col, true);\n    const columnGroup = table.scenegraph.getColGroup(col);\n    const columnBottomGroup = table.scenegraph.getColGroupInBottom(col);\n    const columnLeftBottomGroup = table.scenegraph.getColGroupInLeftBottomCorner(col);\n    const columnRightBottomGroup = table.scenegraph.getColGroupInRightBottomCorner(col);\n    if (columnHeaderGroup) {\n      columnHeaderGroup.setAttribute('width', columnWidth);\n      columnHeaderGroup.forEachChildren((child: Group) => {\n        child.setAttribute('width', columnWidth);\n      });\n    }\n    if (columnGroup) {\n      columnGroup.setAttribute('width', columnWidth);\n      columnGroup.forEachChildren((child: Group) => {\n        child.setAttribute('width', columnWidth);\n      });\n    }\n    if (columnBottomGroup) {\n      columnBottomGroup.setAttribute('width', columnWidth);\n      columnBottomGroup.forEachChildren((child: Group) => {\n        child.setAttribute('width', columnWidth);\n      });\n    }\n    if (columnRightBottomGroup) {\n      columnRightBottomGroup.setAttribute('width', columnWidth);\n      columnRightBottomGroup.forEachChildren((child: Group) => {\n        child.setAttribute('width', columnWidth);\n      });\n    }\n    if (columnLeftBottomGroup) {\n      columnLeftBottomGroup.setAttribute('width', columnWidth);\n      columnLeftBottomGroup.forEachChildren((child: Group) => {\n        child.setAttribute('width', columnWidth);\n      });\n    }\n  }\n\n  // 更新容器尺寸\n  // scene.updateContainerAttrWidthAndX();\n  scene.updateContainer();\n\n  if (moveType === 'column') {\n    for (let col = updateColStart; col <= updateColEnd; col++) {\n      // 将该列的chartInstance清除掉\n      const columnGroup = table.scenegraph.getColGroup(col);\n      columnGroup?.setAttribute('chartInstance', undefined);\n\n      // 将上下表头 和中间body部分分别更新\n      for (let row = 0; row <= table.frozenRowCount - 1; row++) {\n        scene.updateCellContent(col, row);\n      }\n      for (let row = scene.bodyRowStart; row <= scene.bodyRowEnd; row++) {\n        scene.updateCellContent(col, row);\n      }\n      for (let row = table.rowCount - table.bottomFrozenRowCount; row <= table.rowCount - 1; row++) {\n        scene.updateCellContent(col, row);\n      }\n    }\n  } else {\n    // 将左侧冻结列or行表头的单元格更新\n    for (let col = 0; col <= table.frozenColCount - 1; col++) {\n      // 将该列的chartInstance清除掉\n      const columnGroup = table.scenegraph.getColGroup(col);\n      columnGroup?.setAttribute('chartInstance', undefined);\n      for (let row = updateRowStart; row <= updateRowEnd; row++) {\n        scene.updateCellContent(col, row);\n      }\n    }\n    // 将中间body的单元格更新\n    for (let col = scene.bodyColStart; col <= scene.bodyColEnd; col++) {\n      // 将该列的chartInstance清除掉\n      const columnGroup = table.scenegraph.getColGroup(col);\n      columnGroup?.setAttribute('chartInstance', undefined);\n      for (let row = updateRowStart; row <= updateRowEnd; row++) {\n        scene.updateCellContent(col, row);\n      }\n    }\n    // 将右侧冻结列的单元格更新\n    for (let col = table.colCount - table.rightFrozenColCount; col <= table.colCount - 1; col++) {\n      // 将该列的chartInstance清除掉\n      const columnGroup = table.scenegraph.getColGroup(col);\n      columnGroup?.setAttribute('chartInstance', undefined);\n      for (let row = updateRowStart; row <= updateRowEnd; row++) {\n        scene.updateCellContent(col, row);\n      }\n    }\n  }\n}\n"]}