{"version":3,"sources":["../src/scenegraph/layout/update-height.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAC3D,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAChD,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAEpE,OAAO,EAAE,qBAAqB,EAAE,2BAA2B,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AACzG,OAAO,EAAE,iCAAiC,EAAE,MAAM,uCAAuC,CAAC;AAC1F,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AACvD,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAEhE,OAAO,EAAE,eAAe,EAAE,wBAAwB,EAAE,MAAM,8BAA8B,CAAC;AAEzF,OAAO,EAAE,iBAAiB,EAAE,MAAM,yBAAyB,CAAC;AAE5D,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAE7C,MAAM,UAAU,eAAe,CAAC,KAAiB,EAAE,GAAW,EAAE,KAAa,EAAE,kBAA4B;IAEzG,IAAI,CAAC,kBAAkB,EAAE;QACvB,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC;KAC7E;IAED,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE;QACnD,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACrC,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YACzB,SAAS;SACV;QACD,MAAM,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1D,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE;YAC5C,SAAS;SACV;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QAGrC,sBAAsB,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QAErG,KAAK,CAAC,4BAA4B,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KAC9C;IAED,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAI,MAAM,GAAG,CAAC,CAAC;IAEf,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,cAAc,EAAE;QAKpC,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;QACnB,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC;KACzC;SAAM,IAAI,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,oBAAoB,EAAE;QACzE,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;QACnB,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;KACnC;SAAM;QACL,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;QAEnB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;KACpG;IAGD,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE;QAClE,KAAK,IAAI,QAAQ,GAAG,QAAQ,EAAE,QAAQ,IAAI,MAAM,EAAE,QAAQ,EAAE,EAAE;YAC5D,MAAM,SAAS,GAAG,KAAK,CAAC,sBAAsB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACnE,IAAI,SAAS,CAAC,IAAI,KAAK,MAAM,EAAE;gBAC7B,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;aAC5D;SACF;KACF;AACH,CAAC;AAMD,MAAM,UAAU,sBAAsB,CACpC,KAAiB,EACjB,IAAW,EACX,GAAW,EACX,GAAW,EACX,MAAc,EACd,KAAa,EACb,QAAiB;IAIjB,MAAM,SAAS,GAAG,IAAI,CAAC;IACvB,MAAM,UAAU,GAAG,MAAM,CAAC;IAE1B,IAAI,CAAC,SAAS,EAAE;QAEd,OAAO;KACR;IAED,gBAAgB,CAAC,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC5E,CAAC;AAED,MAAM,UAAU,yBAAyB,CACvC,KAAiB,EACjB,IAAW,EACX,GAAW,EACX,GAAW,EACX,MAAc,EACd,KAAa,EACb,QAAiB;IAGjB,MAAM,SAAS,GAAG,IAAI,CAAC;IACvB,gBAAgB,CAAC,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;AACpE,CAAC;AAED,MAAM,UAAU,gBAAgB,CAC9B,KAAiB,EACjB,IAAW,EACX,GAAW,EACX,GAAW,EACX,UAAkB,EAClB,KAAa,EACb,QAAiB;;IAEjB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,UAAU,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;QAClE,OAAO;KACR;IACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAE9B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IACxC,MAAM,aAAa,GAAG,MAAA,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,CAAC,0CAAE,WAAW,CAAC;IAC1E,MAAM,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAE7D,MAAM,IAAI,GACR,aAAa,IAAI,aAAa;QAC5B,CAAC,CAAC,MAAM;QACR,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC;YAChC,CAAC,CAAC,MAAC,KAAK,CAAC,KAAK,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAgB,CAAC,UAAU,mCAAI,MAAM;YAChF,CAAC,CAAC,MAAA,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,mCAAI,MAAM,CAAC;IACxD,IAAI,IAAI,KAAK,aAAa,EAAE;QAE1B,MAAM,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAiC,CAAC;QAC/F,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAqB,CAAC;QACtE,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACjD,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC3D,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAG/E,IAAI,KAAK,CAAC;QACV,IAAI,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,SAAS,EAAE;YAC3B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SAC5C;QAED,MAAM,qBAAqB,GAAG,OAAO,CAAC,WAAW,CAAC,uBAAuB,CAA0B,CAAC;QACpG,MAAM,UAAU,GAAG,qBAAqB,CACtC,YAAY,EACZ,KAAK,EACL,IAAI,CAAC,SAAS,CAAC,KAAK,EAEpB,KAAK,EACL,SAAS,EACT,GAAG,EACH,GAAG,EACH,OAAO,EACP,KAAK,CAAC,KAAK,EACX,KAAK,CACN,CAAC;QAEF,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAU,CAAC;QAEhE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC7B,UAAU,CAAC,cAAc,EAAE,CAAC;QAC5B,UAAU,CAAC,OAAO,EAAE,CAAC;QAGrB,4BAA4B,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;KAC5G;SAAM,IAAI,IAAI,KAAK,WAAW,EAAE;QAE/B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACxD,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QACrF,MAAM,wBAAwB,GAAG,OAAO,CAAC,WAAW,CAAC,0BAA0B,CAA6B,CAAC;QAC7G,wBAAwB,CACtB,IAAI,EACJ,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,SAAS,CAAC,CAAC,EAChB,IAAI,CAAC,SAAS,CAAC,CAAC,EAChB,GAAG,EACH,GAAG,EACH,IAAI,CAAC,SAAS,CAAC,KAAK,EACpB,IAAI,CAAC,SAAS,CAAC,MAAM,EACrB,OAAO,EACP,KAAK,CAAC,KAAK,EACX,aAAa,CAAC,WAAW,EAAE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC,KAAK,EAChE,KAAK,CACN,CAAC;KACH;SAAM,IAAI,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,OAAO,EAAE;QAC/C,iCAAiC,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;KAC1E;SAAM,IAAI,CAAA,MAAA,IAAI,CAAC,UAAU,0CAAE,IAAI,MAAK,MAAM,EAAE;QAC3C,MAAC,IAAI,CAAC,UAAkB,0CAAE,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KAC1F;SAAM;QACL,IAAI,aAAa,GAAG,IAAI,CAAC;QACzB,MAAM,eAAe,GAClB,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAW;YACpD,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAW,CAAC;QAC9D,IAAI,eAAe,EAAE;YAKnB,IAAI,mBAAmB,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAElC,MAAM,gBAAgB,GAAG,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;YAC/E,IAAI,gBAAgB,EAAE;gBACpB,KAAK,IAAI,QAAQ,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,IAAI,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE;oBAChG,IAAI,QAAQ,KAAK,GAAG,EAAE;wBACpB,SAAS;qBACV;oBACD,MAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;oBAChD,MAAM,eAAe,GAClB,UAAU,CAAC,cAAc,CAAC,qBAAqB,CAAW;wBAC1D,UAAU,CAAC,cAAc,CAAC,2BAA2B,CAAW,CAAC;oBACpE,eAAe,CAAC,cAAc,EAAE,CAAC;oBACjC,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;oBACxC,wBAAwB,CAAC,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;iBAClE;aACF;iBAAM;gBACL,IAAI,YAAY,CAAC;gBACjB,IAAI,YAAY,CAAC;gBACjB,MAAM,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC3D,MAAM,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;gBAErE,IAAI,WAAW,IAAK,KAAK,CAAC,KAAK,CAAC,OAAuC,CAAC,sBAAsB,EAAE;oBAC9F,YAAY,GAAI,KAAK,CAAC,KAAK,CAAC,OAAuC,CAAC,sBAAsB,CAAC;iBAC5F;qBAAM,IAAI,YAAY,KAAK,MAAM,EAAE;oBAClC,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;oBACrD,YAAY,GAAI,MAAuB,aAAvB,MAAM,uBAAN,MAAM,CAAmB,kBAAkB,CAAC;oBAC5D,YAAY,GAAI,MAAuB,aAAvB,MAAM,uBAAN,MAAM,CAAmB,kBAAkB,CAAC;iBAC7D;qBAAM;oBACL,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;oBACzD,YAAY,GAAG,CAAC,MAAuB,aAAvB,MAAM,uBAAN,MAAM,CAAmB,YAAY,KAAI,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;oBAClF,YAAY,GAAI,MAAuB,aAAvB,MAAM,uBAAN,MAAM,CAAmB,YAAY,CAAC;iBACvD;gBAED,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;oBAC5D,KAAK,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,EAAE;wBAChF,KAAK,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,EAAE;4BAChF,IAAI,QAAQ,KAAK,GAAG,EAAE;gCACpB,KAAK,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;6BAC7C;yBACF;qBACF;iBACF;gBAED,IAAI,YAAY,IAAI,YAAY,EAAE;oBAEhC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAqB,CAAC;oBACtE,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC/E,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;oBACjC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACnC,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE;wBAC1B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;wBACvE,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;qBAC1E;oBACD,MAAM,YAAY,GAAG,cAAc,CACjC,YAAY,EACZ,YAAY,EACZ,GAAG,EACH,GAAG,EACH,KAAK,EACL,MAAM,EACN,KAAK,EACL,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,EAChC,OAAO,EACP,gBAAgB,CAAC,IAAI,CAAC;wBACpB,CAAC,CAAC;4BACE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE;4BAC3D,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE;yBACtD;wBACH,CAAC,CAAC,SAAS,EACb,KAAK,CAAC,KAAK,CACZ,CAAC;oBACF,mBAAmB,GAAG,YAAY,CAAC,aAAa,CAAC;oBACjD,aAAa,GAAG,YAAY,CAAC,aAAa,CAAC;iBAC5C;gBAED,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,mBAAmB,EAAE;oBACjD,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;iBACzD;qBAAM,IAAI,mBAAmB,EAAE;oBAC9B,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;iBACvC;aACF;SACF;QAeD,4BAA4B,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,aAAa,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;KACrH;AACH,CAAC;AAED,SAAS,4BAA4B,CACnC,SAAgB,EAChB,UAAkB,EAClB,KAAa,EACb,aAAsB,EACtB,aAAsB,EACtB,KAAmB;IAEnB,IAAI,gBAAgB,CAAC,SAAS,CAAC,EAAE;QAC/B,UAAU,GAAG,CAAC,CAAC;QACf,KAAK,IAAI,GAAG,GAAG,SAAS,CAAC,aAAa,EAAE,GAAG,IAAI,SAAS,CAAC,WAAW,EAAE,GAAG,EAAE,EAAE;YAC3E,UAAU,IAAI,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;SACvC;QACD,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,iBAAiB,CAAC,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;QAC9F,KAAK,IAAI,GAAG,GAAG,QAAQ,EAAE,GAAG,IAAI,MAAM,EAAE,GAAG,EAAE,EAAE;YAC7C,KAAK,IAAI,GAAG,GAAG,QAAQ,EAAE,GAAG,IAAI,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC7C,MAAM,eAAe,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC3D,IAAI,eAAe,CAAC,IAAI,KAAK,MAAM,EAAE;oBACnC,SAAS;iBACV;gBACD,eAAe,CAAC,eAAe,CAAC,CAAC,KAAe,EAAE,EAAE;oBAClD,KAAK,CAAC,aAAa,CAAC;wBAClB,EAAE,EAAE,CAAC;wBACL,EAAE,EAAE,CAAC;qBACN,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,IAAI,aAAa,EAAE;oBACjB,MAAM,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;oBACtD,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;oBACzE,uBAAuB,CACrB,eAAe,EACf,UAAU,EACV,KAAK,EACL,aAAa,EACb,OAAO,EACP,KAAK,CAAC,SAAS,EACf,KAAK,CAAC,YAAY,EAClB,KAAK,CACN,CAAC;iBACH;gBAED,MAAM,WAAW,GAAG,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBAC5C,MAAM,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBAG1C,eAAe,CAAC,aAAa,GAAG,UAAU,CAAC;gBAE3C,MAAM,EAAE,WAAW,EAAE,GAAG,eAAe,CACrC,eAAe,EACf,UAAU,EACV,WAAW,EACX;oBACE,KAAK,EAAE;wBACL,GAAG,EAAE,SAAS,CAAC,aAAa;wBAC5B,GAAG,EAAE,SAAS,CAAC,aAAa;qBAC7B;oBACD,GAAG,EAAE;wBACH,GAAG,EAAE,SAAS,CAAC,WAAW;wBAC1B,GAAG,EAAE,SAAS,CAAC,WAAW;qBAC3B;iBACF,EACD,KAAK,CACN,CAAC;gBAEF,IAAI,WAAW,EAAE;oBACf,eAAe,CAAC,eAAe,GAAG,IAAI,CAAC;iBACxC;aACF;SACF;KACF;SAAM;QACL,MAAM,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;QAChE,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;QAC7F,uBAAuB,CACrB,SAAS,EACT,UAAU,EACV,KAAK,EACL,aAAa,EACb,OAAO,EACP,KAAK,CAAC,SAAS,EACf,KAAK,CAAC,YAAY,EAClB,KAAK,CACN,CAAC;KACH;AACH,CAAC","file":"update-height.js","sourcesContent":["import type { ProgressBarStyle } from '../../body-helper/style/ProgressBarStyle';\nimport type { Group } from '../graphic/group';\nimport type { CreateProgressBarCell } from '../group-creater/cell-type/progress-bar-cell';\nimport type { CreateSparkLineCellGroup } from '../group-creater/cell-type/spark-line-cell';\nimport type { Scenegraph } from '../scenegraph';\nimport { getCellMergeInfo } from '../utils/get-cell-merge';\nimport { getProp } from '../utils/get-prop';\nimport { getQuadProps } from '../utils/padding';\nimport { updateCellContentHeight } from '../utils/text-icon-layout';\nimport type { IProgressbarColumnBodyDefine } from '../../ts-types/list-table/define/progressbar-define';\nimport { CUSTOM_CONTAINER_NAME, CUSTOM_MERGE_CONTAINER_NAME, dealWithCustom } from '../component/custom';\nimport { updateImageCellContentWhileResize } from '../group-creater/cell-type/image-cell';\nimport { getStyleTheme } from '../../core/tableHelper';\nimport { isMergeCellGroup } from '../utils/is-merge-cell-group';\nimport type { BaseTableAPI, HeaderData } from '../../ts-types/base-table';\nimport { resizeCellGroup, getCustomCellMergeCustom } from '../group-creater/cell-helper';\nimport type { IGraphic } from './../../vrender';\nimport { getCellMergeRange } from '../../tools/merge-range';\nimport type { ColumnDefine, ListTableConstructorOptions } from '../../ts-types';\nimport { Factory } from '../../core/factory';\n\nexport function updateRowHeight(scene: Scenegraph, row: number, detaY: number, skipTableHeightMap?: boolean) {\n  // 更新table行高存储\n  if (!skipTableHeightMap) {\n    scene.table._setRowHeight(row, scene.table.getRowHeight(row) + detaY, true);\n  }\n\n  for (let col = 0; col < scene.table.colCount; col++) {\n    const cell = scene.getCell(col, row);\n    if (cell.role === 'empty') {\n      continue;\n    }\n    const mergeInfo = getCellMergeInfo(scene.table, col, row);\n    if (mergeInfo && mergeInfo.start.col !== col) {\n      continue;\n    }\n    const height = cell.attribute.height;\n    // cell.setAttribute('height', height);\n    // (cell.firstChild as Rect).setAttribute('height', cell.attribute.height);\n    updateCellHeightForRow(scene, cell, col, row, height + detaY, detaY, scene.table.isHeader(col, row));\n\n    scene.updateCellContentWhileResize(col, row);\n  }\n\n  let rowStart = 0;\n  let rowEnd = 0;\n  // 更新header 高度\n  if (row < scene.table.frozenRowCount) {\n    // scene.colHeaderGroup.setAttribute('height', scene.colHeaderGroup.attribute.height + detaY);\n    // scene.rowHeaderGroup.setAttribute('y', scene.rowHeaderGroup.attribute.y + detaY);\n    // scene.bodyGroup.setAttribute('y', scene.bodyGroup.attribute.y + detaY);\n\n    rowStart = row + 1;\n    rowEnd = scene.table.frozenRowCount - 1;\n  } else if (row >= scene.table.rowCount - scene.table.bottomFrozenRowCount) {\n    rowStart = row + 1;\n    rowEnd = scene.table.rowCount - 1;\n  } else {\n    rowStart = row + 1;\n    // rowEnd = scene.table.rowCount - 1;\n    rowEnd = Math.min(scene.proxy.rowEnd, scene.table.rowCount - scene.table.bottomFrozenRowCount - 1); //- scene.table.bottomFrozenRowCount;\n  }\n\n  // 更新以下行位置\n  for (let colIndex = 0; colIndex < scene.table.colCount; colIndex++) {\n    for (let rowIndex = rowStart; rowIndex <= rowEnd; rowIndex++) {\n      const cellGroup = scene.highPerformanceGetCell(colIndex, rowIndex);\n      if (cellGroup.role === 'cell') {\n        cellGroup.setAttribute('y', cellGroup.attribute.y + detaY);\n      }\n    }\n  }\n}\n\n/**\n * @description: 更新单个单元格高度\n * @return {*}\n */\nexport function updateCellHeightForRow(\n  scene: Scenegraph,\n  cell: Group,\n  col: number,\n  row: number,\n  height: number,\n  detaY: number,\n  isHeader: boolean\n  // autoRowHeight: boolean\n) {\n  // cell.setAttribute('height', height);\n  const cellGroup = cell;\n  const distHeight = height;\n\n  if (!cellGroup) {\n    // 合并单元格非主单元格，不处理\n    return;\n  }\n\n  updateCellHeight(scene, cellGroup, col, row, distHeight, detaY, isHeader);\n}\n\nexport function updateCellHeightForColumn(\n  scene: Scenegraph,\n  cell: Group,\n  col: number,\n  row: number,\n  height: number,\n  detaY: number,\n  isHeader: boolean\n) {\n  // cell.setAttribute('height', height);\n  const cellGroup = cell;\n  updateCellHeight(scene, cellGroup, col, row, height, 0, isHeader);\n}\n\nexport function updateCellHeight(\n  scene: Scenegraph,\n  cell: Group,\n  col: number,\n  row: number,\n  distHeight: number,\n  detaY: number,\n  isHeader: boolean\n) {\n  if (cell.attribute.height === distHeight && !cell.needUpdateHeight) {\n    return;\n  }\n  cell.needUpdateHeight = false;\n\n  cell.setAttribute('height', distHeight);\n  const isVtableMerge = scene.table.getCellRawRecord(col, row)?.vtableMerge;\n  const isCustomMerge = !!scene.table.getCustomMerge(col, row);\n  // 更新单元格布局\n  const type =\n    isVtableMerge || isCustomMerge\n      ? 'text'\n      : scene.table.isHeader(col, row)\n      ? (scene.table._getHeaderLayoutMap(col, row) as HeaderData).headerType ?? 'text'\n      : scene.table.getBodyColumnType(col, row) ?? 'text';\n  if (type === 'progressbar') {\n    // 目前先采用重新生成节点的方案\n    const columnDefine = scene.table.getBodyColumnDefine(col, row) as IProgressbarColumnBodyDefine;\n    const style = scene.table._getCellStyle(col, row) as ProgressBarStyle;\n    const value = scene.table.getCellValue(col, row);\n    const dataValue = scene.table.getCellOriginValue(col, row);\n    const padding = getQuadProps(getProp('padding', style, col, row, scene.table));\n\n    // deal with bar\n    let range;\n    if (columnDefine?.mergeCell) {\n      range = scene.table.getCellRange(col, row);\n    }\n\n    const createProgressBarCell = Factory.getFunction('createProgressBarCell') as CreateProgressBarCell;\n    const newBarCell = createProgressBarCell(\n      columnDefine,\n      style,\n      cell.attribute.width,\n      // cell.attribute.height,\n      value,\n      dataValue,\n      col,\n      row,\n      padding,\n      scene.table,\n      range\n    );\n\n    const oldBarCell = cell.getChildByName('progress-bar') as Group;\n    // cell.replaceChild(newBarCell, oldBarCell);\n    cell.insertBefore(newBarCell, oldBarCell);\n    cell.removeChild(oldBarCell);\n    oldBarCell.removeAllChild();\n    oldBarCell.release();\n\n    // deal with text\n    updateMergeCellContentHeight(cell, distHeight, detaY, scene.table.isAutoRowHeight(row), true, scene.table);\n  } else if (type === 'sparkline') {\n    // 目前先采用重新生成节点的方案\n    cell.removeAllChild();\n    const headerStyle = scene.table._getCellStyle(col, row);\n    const padding = getQuadProps(getProp('padding', headerStyle, col, row, scene.table));\n    const createSparkLineCellGroup = Factory.getFunction('createSparkLineCellGroup') as CreateSparkLineCellGroup;\n    createSparkLineCellGroup(\n      cell,\n      cell.parent,\n      cell.attribute.x,\n      cell.attribute.y,\n      col,\n      row,\n      cell.attribute.width,\n      cell.attribute.height,\n      padding,\n      scene.table,\n      getStyleTheme(headerStyle, scene.table, col, row, getProp).theme,\n      false\n    );\n  } else if (type === 'image' || type === 'video') {\n    updateImageCellContentWhileResize(cell, col, row, 0, detaY, scene.table);\n  } else if (cell.firstChild?.name === 'axis') {\n    (cell.firstChild as any)?.originAxis.resize(cell.attribute.width, cell.attribute.height);\n  } else {\n    let renderDefault = true;\n    const customContainer =\n      (cell.getChildByName(CUSTOM_CONTAINER_NAME) as Group) ||\n      (cell.getChildByName(CUSTOM_MERGE_CONTAINER_NAME) as Group);\n    if (customContainer) {\n      // if (scene.table.reactCustomLayout) {\n      //   scene.table.reactCustomLayout.removeCustomCell(col, row);\n      // }\n      // customContainer.removeAllChild();\n      let customElementsGroup;\n      cell.removeChild(customContainer);\n\n      const customMergeRange = getCustomCellMergeCustom(col, row, cell, scene.table);\n      if (customMergeRange) {\n        for (let mergeRow = customMergeRange.start.row; mergeRow <= customMergeRange.end.row; mergeRow++) {\n          if (mergeRow === row) {\n            continue;\n          }\n          const mergedCell = scene.getCell(col, mergeRow);\n          const customContainer =\n            (mergedCell.getChildByName(CUSTOM_CONTAINER_NAME) as Group) ||\n            (mergedCell.getChildByName(CUSTOM_MERGE_CONTAINER_NAME) as Group);\n          customContainer.removeAllChild();\n          mergedCell.removeChild(customContainer);\n          getCustomCellMergeCustom(col, mergeRow, mergedCell, scene.table);\n        }\n      } else {\n        let customRender;\n        let customLayout;\n        const cellLocation = scene.table.getCellLocation(col, row);\n        const { vtableMerge } = scene.table.getCellRawRecord(col, row) || {};\n\n        if (vtableMerge && (scene.table.options as ListTableConstructorOptions).groupTitleCustomLayout) {\n          customLayout = (scene.table.options as ListTableConstructorOptions).groupTitleCustomLayout;\n        } else if (cellLocation !== 'body') {\n          const define = scene.table.getHeaderDefine(col, row);\n          customRender = (define as ColumnDefine)?.headerCustomRender;\n          customLayout = (define as ColumnDefine)?.headerCustomLayout;\n        } else {\n          const define = scene.table.getBodyColumnDefine(col, row);\n          customRender = (define as ColumnDefine)?.customRender || scene.table.customRender;\n          customLayout = (define as ColumnDefine)?.customLayout;\n        }\n\n        if ((customRender || customLayout) && isMergeCellGroup(cell)) {\n          for (let mergeCol = cell.mergeStartCol; mergeCol <= cell.mergeEndCol; mergeCol++) {\n            for (let mergeRow = cell.mergeStartRow; mergeRow <= cell.mergeEndRow; mergeRow++) {\n              if (mergeRow !== row) {\n                scene.updateCellContent(mergeCol, mergeRow);\n              }\n            }\n          }\n        }\n\n        if (customLayout || customRender) {\n          // const { autoRowHeight } = table.internalProps;\n          const style = scene.table._getCellStyle(col, row) as ProgressBarStyle;\n          const padding = getQuadProps(getProp('padding', style, col, row, scene.table));\n          let width = cell.attribute.width;\n          let height = cell.attribute.height;\n          if (isMergeCellGroup(cell)) {\n            width = scene.table.getColsWidth(cell.mergeStartCol, cell.mergeEndCol);\n            height = scene.table.getRowsHeight(cell.mergeStartRow, cell.mergeEndRow);\n          }\n          const customResult = dealWithCustom(\n            customLayout,\n            customRender,\n            col,\n            row,\n            width,\n            height,\n            false,\n            scene.table.isAutoRowHeight(row),\n            padding,\n            isMergeCellGroup(cell)\n              ? {\n                  start: { col: cell.mergeStartCol, row: cell.mergeStartRow },\n                  end: { col: cell.mergeEndCol, row: cell.mergeEndRow }\n                }\n              : undefined,\n            scene.table\n          );\n          customElementsGroup = customResult.elementsGroup;\n          renderDefault = customResult.renderDefault;\n        }\n\n        if (cell.childrenCount > 0 && customElementsGroup) {\n          cell.insertBefore(customElementsGroup, cell.firstChild);\n        } else if (customElementsGroup) {\n          cell.appendChild(customElementsGroup);\n        }\n      }\n    }\n    // if (renderDefault) {\n    //   // 处理文字\n    //   const style = scene.table._getCellStyle(col, row);\n    //   updateMergeCellContentHeight(\n    //     cell,\n    //     distHeight,\n    //     detaY,\n    //     // scene.table.internalProps.autoRowHeight,\n    //     getQuadProps(style.padding as number),\n    //     style.textAlign,\n    //     style.textBaseline,\n    //     scene.table\n    //   );\n    // }\n    updateMergeCellContentHeight(cell, distHeight, detaY, scene.table.isAutoRowHeight(row), renderDefault, scene.table);\n  }\n}\n\nfunction updateMergeCellContentHeight(\n  cellGroup: Group,\n  distHeight: number,\n  detaY: number,\n  autoRowHeight: boolean,\n  renderDefault: boolean,\n  table: BaseTableAPI\n) {\n  if (isMergeCellGroup(cellGroup)) {\n    distHeight = 0;\n    for (let row = cellGroup.mergeStartRow; row <= cellGroup.mergeEndRow; row++) {\n      distHeight += table.getRowHeight(row);\n    }\n    const { colStart, colEnd, rowStart, rowEnd } = getCellMergeRange(cellGroup, table.scenegraph);\n    for (let col = colStart; col <= colEnd; col++) {\n      for (let row = rowStart; row <= rowEnd; row++) {\n        const singleCellGroup = table.scenegraph.getCell(col, row);\n        if (singleCellGroup.role !== 'cell') {\n          continue;\n        }\n        singleCellGroup.forEachChildren((child: IGraphic) => {\n          child.setAttributes({\n            dx: 0,\n            dy: 0\n          });\n        });\n\n        if (renderDefault) {\n          const style = table._getCellStyle(colStart, rowStart);\n          const padding = getQuadProps(getProp('padding', style, col, row, table));\n          updateCellContentHeight(\n            singleCellGroup,\n            distHeight,\n            detaY,\n            autoRowHeight,\n            padding,\n            style.textAlign,\n            style.textBaseline,\n            table\n          );\n        }\n\n        const rangeHeight = table.getRowHeight(row);\n        const rangeWidth = table.getColWidth(col);\n\n        // const { height: contentHeight } = cellGroup.attribute;\n        singleCellGroup.contentHeight = distHeight;\n\n        const { widthChange } = resizeCellGroup(\n          singleCellGroup,\n          rangeWidth,\n          rangeHeight,\n          {\n            start: {\n              col: cellGroup.mergeStartCol,\n              row: cellGroup.mergeStartRow\n            },\n            end: {\n              col: cellGroup.mergeEndCol,\n              row: cellGroup.mergeEndRow\n            }\n          },\n          table\n        );\n\n        if (widthChange) {\n          singleCellGroup.needUpdateWidth = true;\n        }\n      }\n    }\n  } else {\n    const style = table._getCellStyle(cellGroup.col, cellGroup.row);\n    const padding = getQuadProps(getProp('padding', style, cellGroup.col, cellGroup.row, table));\n    updateCellContentHeight(\n      cellGroup,\n      distHeight,\n      detaY,\n      autoRowHeight,\n      padding,\n      style.textAlign,\n      style.textBaseline,\n      table\n    );\n  }\n}\n"]}