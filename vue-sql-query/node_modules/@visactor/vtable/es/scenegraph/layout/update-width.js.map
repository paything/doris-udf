{"version":3,"sources":["../src/scenegraph/layout/update-width.ts"],"names":[],"mappings":"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","file":"update-width.js","sourcesContent":["import type { IGraphic } from './../../vrender';\nimport type { ProgressBarStyle } from '../../body-helper/style/ProgressBarStyle';\nimport type { ICartesianAxis } from '../../components/axis/axis';\nimport { Factory } from '../../core/factory';\nimport { getStyleTheme } from '../../core/tableHelper';\nimport type { BaseTableAPI, HeaderData } from '../../ts-types/base-table';\nimport type { IProgressbarColumnBodyDefine } from '../../ts-types/list-table/define/progressbar-define';\nimport { CUSTOM_CONTAINER_NAME, CUSTOM_MERGE_CONTAINER_NAME, dealWithCustom } from '../component/custom';\nimport type { Group } from '../graphic/group';\nimport { updateImageCellContentWhileResize } from '../group-creater/cell-type/image-cell';\nimport type { CreateProgressBarCell } from '../group-creater/cell-type/progress-bar-cell';\nimport type { CreateSparkLineCellGroup } from '../group-creater/cell-type/spark-line-cell';\nimport { resizeCellGroup, getCustomCellMergeCustom } from '../group-creater/cell-helper';\nimport type { Scenegraph } from '../scenegraph';\nimport { getCellMergeInfo } from '../utils/get-cell-merge';\nimport { getProp } from '../utils/get-prop';\nimport { isMergeCellGroup } from '../utils/is-merge-cell-group';\nimport { getQuadProps } from '../utils/padding';\nimport { updateCellContentWidth } from '../utils/text-icon-layout';\nimport { computeRowHeight } from './compute-row-height';\nimport { updateCellHeightForRow } from './update-height';\nimport { getHierarchyOffset } from '../utils/get-hierarchy-offset';\nimport { getCellMergeRange } from '../../tools/merge-range';\nimport type { ColumnDefine, ListTableConstructorOptions } from '../../ts-types';\n// import { updateAutoRowHeight } from './auto-height';\n\n/**\n * @description: 更新指定列列宽，在拖拽调整列宽中使用\n * @param {Scenegraph} scene\n * @param {number} col\n * @param {number} detaX\n * @return {*}\n */\nexport function updateColWidth(scene: Scenegraph, col: number, detaX: number, skipTableWidthMap?: boolean) {\n  if (!skipTableWidthMap) {\n    scene.table._setColWidth(col, scene.table.getColWidth(col) + detaX, true);\n  }\n\n  // deal with corner header or column header\n  const colOrCornerHeaderColumn = scene.getColGroup(col, true) as Group;\n  const rightTopColumn = scene.getColGroupInRightTopCorner(col);\n  if (colOrCornerHeaderColumn && !rightTopColumn) {\n    updateColunmWidth(colOrCornerHeaderColumn, detaX, 'col-corner', scene);\n  }\n  // deal with right bottom frozen cells\n  if (rightTopColumn) {\n    updateColunmWidth(rightTopColumn, detaX, 'right-top', scene);\n  }\n\n  // deal with row header or body or right frozen cells\n  const rowHeaderOrBodyColumn = scene.getColGroup(col) as Group;\n  if (rowHeaderOrBodyColumn) {\n    updateColunmWidth(rowHeaderOrBodyColumn, detaX, 'row-body', scene);\n  }\n\n  const leftBottomColumn = scene.getColGroupInLeftBottomCorner(col);\n  // deal with left bottom frozen cells\n  if (leftBottomColumn) {\n    updateColunmWidth(leftBottomColumn, detaX, 'left-bottom', scene);\n  }\n  // deal with bottom frozen cells\n  const bottomColumn = scene.getColGroupInBottom(col);\n  if (bottomColumn) {\n    updateColunmWidth(bottomColumn, detaX, 'bottom', scene);\n  }\n  // deal with right bottom frozen cells\n  const rightBottomColumn = scene.getColGroupInRightBottomCorner(col);\n  if (rightBottomColumn) {\n    updateColunmWidth(rightBottomColumn, detaX, 'right-bottom', scene);\n  }\n\n  // 更新剩余列位置\n  if (col < scene.frozenColCount) {\n    scene.cornerHeaderGroup.forEachChildrenSkipChild((column: Group, index) => {\n      if (column.col > col) {\n        column.setAttribute('x', column.attribute.x + detaX);\n      }\n    });\n    scene.rowHeaderGroup.forEachChildrenSkipChild((column: Group, index) => {\n      if (column.col > col) {\n        column.setAttribute('x', column.attribute.x + detaX);\n      }\n    });\n  } else {\n    scene.colHeaderGroup.forEachChildrenSkipChild((column: Group, index) => {\n      if (column.col > col) {\n        column.setAttribute('x', column.attribute.x + detaX);\n      }\n    });\n    scene.bodyGroup.forEachChildrenSkipChild((column: Group, index) => {\n      if (column.col > col) {\n        column.setAttribute('x', column.attribute.x + detaX);\n      }\n    });\n  }\n\n  if (leftBottomColumn) {\n    scene.leftBottomCornerGroup.forEachChildrenSkipChild((column: Group, index) => {\n      if (column.col > col) {\n        column.setAttribute('x', column.attribute.x + detaX);\n      }\n    });\n  }\n  if (bottomColumn) {\n    scene.bottomFrozenGroup.forEachChildrenSkipChild((column: Group, index) => {\n      if (column.col > col) {\n        column.setAttribute('x', column.attribute.x + detaX);\n      }\n    });\n  }\n  if (rightBottomColumn) {\n    scene.rightBottomCornerGroup.forEachChildrenSkipChild((column: Group, index) => {\n      if (column.col > col) {\n        column.setAttribute('x', column.attribute.x + detaX);\n      }\n    });\n  }\n\n  // scene.table.setColWidth(col, rowHeaderOrBodyColumn.attribute.width, true);\n}\n\nfunction updateColunmWidth(\n  columnGroup: Group,\n  detaX: number,\n  // autoRowHeight: boolean,\n  mode: 'col-corner' | 'row-body' | 'bottom' | 'left-bottom' | 'right-top' | 'right-bottom',\n  scene: Scenegraph\n) {\n  let needRerangeRow = false;\n  // const colOrCornerHeaderColumn = scene.getColGroup(col, true) as Group;\n  const oldColumnWidth = columnGroup?.attribute.width ?? 0;\n  columnGroup?.setAttribute('width', oldColumnWidth + detaX);\n  // 更新单元格宽度\n  columnGroup?.forEachChildren((cell: Group, index: number) => {\n    const isHeightChange = updateCellWidth(\n      scene,\n      cell,\n      cell.col,\n      cell.row,\n      oldColumnWidth,\n      oldColumnWidth + detaX,\n      detaX,\n      mode === 'row-body' ? cell.col < scene.table.rowHeaderLevelCount : true,\n      scene.table.internalProps.autoWrapText\n    );\n    if (isHeightChange) {\n      const mergeInfo = getCellMergeInfo(scene.table, cell.col, cell.row);\n      if (mergeInfo && mergeInfo.end.row - mergeInfo.start.row) {\n        for (let row = mergeInfo.start.row; row <= mergeInfo.end.row; row++) {\n          resetRowHeight(scene, row);\n        }\n      } else {\n        resetRowHeight(scene, cell.row);\n      }\n      needRerangeRow = true;\n    }\n  });\n\n  if (needRerangeRow) {\n    let newTotalHeight = 0;\n    let colGroup;\n    let oldContainerHeight;\n    let row;\n    for (let col = 0; col < scene.table.colCount; col++) {\n      // const colGroup = scene.getColGroup(col, true);\n      if (mode === 'col-corner') {\n        row = 0;\n        colGroup = scene.getColGroup(col, true);\n        oldContainerHeight = scene.colHeaderGroup.attribute.height ?? 0;\n      } else if (mode === 'row-body') {\n        row = scene.table.frozenRowCount;\n        colGroup = scene.getColGroup(col, false);\n        oldContainerHeight = scene.bodyGroup.attribute.height ?? 0;\n      } else if (mode === 'bottom') {\n        row = scene.table.rowCount - scene.table.bottomFrozenRowCount;\n        colGroup = scene.getColGroupInBottom(col);\n        oldContainerHeight = scene.bottomFrozenGroup.attribute.height ?? 0;\n      } else if (mode === 'left-bottom') {\n        row = scene.table.rowCount - scene.table.bottomFrozenRowCount;\n        colGroup = scene.getColGroupInLeftBottomCorner(col);\n        oldContainerHeight = scene.leftBottomCornerGroup.attribute.height ?? 0;\n      } else if (mode === 'right-top') {\n        row = 0;\n        colGroup = scene.getColGroupInRightTopCorner(col);\n        oldContainerHeight = scene.rightTopCornerGroup.attribute.height ?? 0;\n      } else if (mode === 'right-bottom') {\n        row = scene.table.rowCount - scene.table.bottomFrozenRowCount;\n        colGroup = scene.getColGroupInRightBottomCorner(col);\n        oldContainerHeight = scene.rightBottomCornerGroup.attribute.height ?? 0;\n      }\n      if (!colGroup) {\n        continue;\n      }\n      let y = 0;\n      colGroup.forEachChildren((cellGroup: Group) => {\n        cellGroup.setAttribute('y', y);\n        y += scene.table.getRowHeight(cellGroup.row) ?? 0;\n      });\n      newTotalHeight = y;\n    }\n    scene.updateContainerHeight(row, newTotalHeight - oldContainerHeight);\n    //#region 修改bug:https://github.com/VisActor/VTable/issues/954 添加底部冻结行的三块区域\n    for (let col = 0; col < scene.table.frozenColCount; col++) {\n      const leftBottomFrozenColumnGroup = scene.getColGroupInLeftBottomCorner(col);\n      // reset cell y\n      let y = 0;\n      leftBottomFrozenColumnGroup?.forEachChildren((cellGroup: Group) => {\n        cellGroup.setAttribute('y', y);\n        y += scene.table.getRowHeight(cellGroup.row);\n      });\n    }\n    for (let col = scene.table.colCount - scene.table.rightFrozenColCount; col < scene.table.colCount; col++) {\n      const rightBottomFrozenColumnGroup = scene.getColGroupInRightBottomCorner(col);\n      // reset cell y\n      let y = 0;\n      rightBottomFrozenColumnGroup?.forEachChildren((cellGroup: Group) => {\n        cellGroup.setAttribute('y', y);\n        y += scene.table.getRowHeight(cellGroup.row);\n      });\n    }\n\n    for (let col = scene.table.frozenColCount; col < scene.table.colCount - scene.table.rightFrozenColCount; col++) {\n      const rightBottomFrozenColumnGroup = scene.getColGroupInBottom(col);\n      // reset cell y\n      let y = 0;\n      rightBottomFrozenColumnGroup?.forEachChildren((cellGroup: Group) => {\n        cellGroup.setAttribute('y', y);\n        y += scene.table.getRowHeight(cellGroup.row);\n      });\n    }\n    //#endregion\n  }\n}\n\n/**\n * @description: 更新单个单元格宽度\n * @return {*}\n */\nfunction updateCellWidth(\n  scene: Scenegraph,\n  cell: Group,\n  col: number,\n  row: number,\n  oldWidth: number, // old width, not dist\n  distWidth: number, // old width, not dist\n  detaX: number,\n  isHeader: boolean,\n  // autoColWidth: boolean,\n  autoWrapText: boolean\n): boolean {\n  if (cell.attribute.width === distWidth && !cell.needUpdateWidth) {\n    return false;\n  }\n  cell.needUpdateWidth = false;\n\n  cell.setAttribute('width', distWidth);\n  // const mergeInfo = getCellMergeInfo(scene.table, col, row);\n  // if (mergeInfo && mergeInfo.start.row !== row) {\n  //   return false;\n  // }\n  const cellGroup = cell;\n  // const distWidth = width + detaX;\n\n  if (!cellGroup) {\n    // 合并单元格非主单元格，不处理\n    return false;\n  }\n  const autoRowHeight = scene.table.isAutoRowHeight(row);\n  const isVtableMerge = scene.table.getCellRawRecord(col, row)?.vtableMerge;\n  const isCustomMerge = !!scene.table.getCustomMerge(col, row);\n  // 更新单元格布局\n  const type =\n    isVtableMerge || isCustomMerge\n      ? 'text'\n      : scene.table.isHeader(col, row)\n      ? (scene.table._getHeaderLayoutMap(col, row) as HeaderData).headerType ?? 'text'\n      : scene.table.getBodyColumnType(col, row) ?? 'text';\n  let isHeightChange = false;\n  if (type === 'progressbar') {\n    // 目前先采用重新生成节点的方案\n    const columnDefine = scene.table.getBodyColumnDefine(col, row) as IProgressbarColumnBodyDefine;\n    const style = scene.table._getCellStyle(col, row) as ProgressBarStyle;\n    const value = scene.table.getCellValue(col, row);\n    const dataValue = scene.table.getCellOriginValue(col, row);\n    const padding = getQuadProps(getProp('padding', style, col, row, scene.table));\n\n    // deal with bar\n    let range;\n    if (columnDefine?.mergeCell) {\n      range = scene.table.getCellRange(col, row);\n    }\n\n    const createProgressBarCell = Factory.getFunction('createProgressBarCell') as CreateProgressBarCell;\n    const newBarCell = createProgressBarCell(\n      columnDefine,\n      style,\n      cellGroup.attribute.width,\n      // cellGroup.attribute.height,\n      value,\n      dataValue,\n      col,\n      row,\n      padding,\n      scene.table,\n      range\n    );\n\n    const oldBarCell = cellGroup.getChildByName('progress-bar') as Group;\n    // cell.replaceChild(newBarCell, oldBarCell);\n    cellGroup.insertBefore(newBarCell, oldBarCell);\n    cellGroup.removeChild(oldBarCell);\n    oldBarCell.removeAllChild();\n    oldBarCell.release();\n\n    // deal width text\n    const cellChange = updateMergeCellContentWidth(cellGroup, distWidth, detaX, autoRowHeight, true, scene.table);\n    isHeightChange = isHeightChange || cellChange;\n  } else if (type === 'sparkline') {\n    // 目前先采用重新生成节点的方案\n    cellGroup.removeAllChild();\n    const headerStyle = scene.table._getCellStyle(col, row);\n    const padding = getQuadProps(getProp('padding', headerStyle, col, row, scene.table));\n    const createSparkLineCellGroup = Factory.getFunction('createSparkLineCellGroup') as CreateSparkLineCellGroup;\n    createSparkLineCellGroup(\n      cellGroup,\n      cellGroup.parent,\n      cellGroup.attribute.x,\n      cellGroup.attribute.y,\n      col,\n      row,\n      cellGroup.attribute.width,\n      cellGroup.attribute.height,\n      padding,\n      scene.table,\n      getStyleTheme(headerStyle, scene.table, col, row, getProp).theme,\n      false\n    );\n  } else if (type === 'image' || type === 'video') {\n    // // 只更新背景边框\n    // const rect = cell.firstChild as Rect;\n    // rect.setAttribute('width', cell.attribute.width);\n    updateImageCellContentWhileResize(cellGroup, col, row, detaX, 0, scene.table);\n  } else if (cellGroup.firstChild?.name === 'axis') {\n    // recreate axis component\n    const axisConfig = scene.table.internalProps.layoutMap.getAxisConfigInPivotChart(col, row);\n    const cellStyle = scene.table._getCellStyle(col, row);\n    const padding = getQuadProps(getProp('padding', cellStyle, col, row, scene.table));\n    if (axisConfig) {\n      const CartesianAxis: ICartesianAxis = Factory.getComponent('axis');\n      const axis = new CartesianAxis(\n        axisConfig,\n        cellGroup.attribute.width,\n        cellGroup.attribute.height,\n        axisConfig.__vtablePadding ?? padding,\n        scene.table\n      );\n      cellGroup.clear();\n      cellGroup.appendChild(axis.component);\n      axis.overlap();\n    }\n  } else if (cell.firstChild?.name === 'axis') {\n    (cell.firstChild as any)?.originAxis.resize(cell.attribute.width, cell.attribute.height);\n  } else {\n    let renderDefault = true;\n    const customContainer =\n      (cell.getChildByName(CUSTOM_CONTAINER_NAME) as Group) ||\n      (cell.getChildByName(CUSTOM_MERGE_CONTAINER_NAME) as Group);\n    if (customContainer) {\n      // fix for custom component flash\n      // if (scene.table.reactCustomLayout) {\n      //   scene.table.reactCustomLayout.removeCustomCell(col, row);\n      // }\n      // customContainer.removeAllChild();\n      let customElementsGroup;\n      cell.removeChild(customContainer);\n\n      const customMergeRange = getCustomCellMergeCustom(col, row, cell, scene.table);\n      if (customMergeRange) {\n        for (let mergeCol = customMergeRange.start.col; mergeCol <= customMergeRange.end.col; mergeCol++) {\n          if (mergeCol === col) {\n            continue;\n          }\n          const mergedCell = scene.getCell(mergeCol, row);\n          const customContainer =\n            (mergedCell.getChildByName(CUSTOM_CONTAINER_NAME) as Group) ||\n            (mergedCell.getChildByName(CUSTOM_MERGE_CONTAINER_NAME) as Group);\n          customContainer.removeAllChild();\n          mergedCell.removeChild(customContainer);\n          getCustomCellMergeCustom(mergeCol, row, mergedCell, scene.table);\n        }\n      } else {\n        let customRender;\n        let customLayout;\n        const cellType = scene.table.getCellLocation(col, row);\n        const { vtableMerge } = scene.table.getCellRawRecord(col, row) || {};\n\n        if (vtableMerge && (scene.table.options as ListTableConstructorOptions).groupTitleCustomLayout) {\n          customLayout = (scene.table.options as ListTableConstructorOptions).groupTitleCustomLayout;\n        } else if (cellType !== 'body') {\n          const define = scene.table.getHeaderDefine(col, row);\n          customRender = (define as ColumnDefine)?.headerCustomRender;\n          customLayout = (define as ColumnDefine)?.headerCustomLayout;\n        } else {\n          const define = scene.table.getBodyColumnDefine(col, row);\n          customRender = (define as ColumnDefine)?.customRender || scene.table.customRender;\n          customLayout = (define as ColumnDefine)?.customLayout;\n        }\n\n        if ((customRender || customLayout) && isMergeCellGroup(cellGroup)) {\n          for (let mergeCol = cellGroup.mergeStartCol; mergeCol <= cellGroup.mergeEndCol; mergeCol++) {\n            if (mergeCol !== col) {\n              for (let mergeRow = cellGroup.mergeStartRow; mergeRow <= cellGroup.mergeEndRow; mergeRow++) {\n                scene.updateCellContent(mergeCol, mergeRow);\n              }\n            }\n          }\n        }\n\n        if (customLayout || customRender) {\n          // const { autoRowHeight } = table.internalProps;\n          const style = scene.table._getCellStyle(col, row) as ProgressBarStyle;\n          const padding = getQuadProps(getProp('padding', style, col, row, scene.table));\n          let width = cellGroup.attribute.width;\n          let height = cellGroup.attribute.height;\n          if (isMergeCellGroup(cellGroup)) {\n            width = scene.table.getColsWidth(cellGroup.mergeStartCol, cellGroup.mergeEndCol);\n            height = scene.table.getRowsHeight(cellGroup.mergeStartRow, cellGroup.mergeEndRow);\n          }\n          const customResult = dealWithCustom(\n            customLayout,\n            customRender,\n            col,\n            row,\n            width,\n            height,\n            false,\n            scene.table.isAutoRowHeight(row),\n            padding,\n            isMergeCellGroup(cellGroup)\n              ? {\n                  start: { col: cellGroup.mergeStartCol, row: cellGroup.mergeStartRow },\n                  end: { col: cellGroup.mergeEndCol, row: cellGroup.mergeEndRow }\n                }\n              : undefined,\n            scene.table\n          );\n          customElementsGroup = customResult.elementsGroup;\n          renderDefault = customResult.renderDefault;\n          isHeightChange = true;\n        }\n\n        if (cell.childrenCount > 0 && customElementsGroup) {\n          cell.insertBefore(customElementsGroup, cell.firstChild);\n        } else if (customElementsGroup) {\n          cell.appendChild(customElementsGroup);\n        }\n      }\n    }\n    const cellChange = updateMergeCellContentWidth(\n      cellGroup,\n      distWidth,\n      detaX,\n      autoRowHeight,\n      renderDefault,\n      scene.table\n    );\n    isHeightChange = isHeightChange || cellChange;\n  }\n  if (!autoWrapText) {\n    const style = scene.table._getCellStyle(col, row);\n    autoWrapText = style.autoWrapText;\n  }\n  return autoRowHeight && autoWrapText ? isHeightChange : false;\n}\n\nfunction updateMergeCellContentWidth(\n  cellGroup: Group,\n  distWidth: number,\n  detaX: number,\n  autoRowHeight: boolean,\n  renderDefault: boolean,\n  table: BaseTableAPI\n) {\n  if (isMergeCellGroup(cellGroup)) {\n    distWidth = 0;\n    let isHeightChange = false;\n    for (let col = cellGroup.mergeStartCol; col <= cellGroup.mergeEndCol; col++) {\n      distWidth += table.getColWidth(col);\n    }\n    let cellHeight = 0;\n    for (let row = cellGroup.mergeStartRow; row <= cellGroup.mergeEndRow; row++) {\n      cellHeight += table.getRowHeight(row);\n    }\n\n    const { colStart, colEnd, rowStart, rowEnd } = getCellMergeRange(cellGroup, table.scenegraph);\n    for (let col = colStart; col <= colEnd; col++) {\n      for (let row = rowStart; row <= rowEnd; row++) {\n        if (col === cellGroup.col && row !== cellGroup.row) {\n          continue;\n        }\n        const singleCellGroup = table.scenegraph.getCell(col, row);\n        if (singleCellGroup.role !== 'cell') {\n          continue;\n        }\n        singleCellGroup.forEachChildren((child: IGraphic) => {\n          child.setAttributes({\n            dx: 0,\n            dy: 0\n          });\n        });\n\n        let changed = false;\n        if (renderDefault) {\n          // 处理文字\n          // const style = table._getCellStyle(col, row);\n          const style = table._getCellStyle(colStart, rowStart);\n          const padding = getQuadProps(getProp('padding', style, col, row, table));\n\n          const textAlign = style.textAlign;\n          const textBaseline = style.textBaseline;\n          changed = updateCellContentWidth(\n            singleCellGroup,\n            distWidth,\n            cellHeight,\n            detaX,\n            autoRowHeight,\n            padding,\n            textAlign,\n            textBaseline,\n            table.scenegraph\n          );\n\n          // reset hierarchy offset\n          const hierarchyOffset = getHierarchyOffset(singleCellGroup.col, singleCellGroup.row, table);\n          if (hierarchyOffset) {\n            const text = singleCellGroup.getChildByName('text');\n            const icon = singleCellGroup.getChildByName('expand') || singleCellGroup.getChildByName('collapse');\n            // icon-left deal with hierarchy offset, no need add to text dx\n            if (icon?.role !== 'icon-left' && text) {\n              text.setAttribute('dx', hierarchyOffset);\n            }\n          }\n        }\n\n        const rangeHeight = table.getRowHeight(row);\n        const rangeWidth = table.getColWidth(col);\n\n        // const { width: contentWidth } = cellGroup.attribute;\n        singleCellGroup.contentWidth = distWidth;\n\n        const { heightChange } = resizeCellGroup(\n          singleCellGroup,\n          rangeWidth,\n          rangeHeight,\n          {\n            start: {\n              col: cellGroup.mergeStartCol,\n              row: cellGroup.mergeStartRow\n            },\n            end: {\n              col: cellGroup.mergeEndCol,\n              row: cellGroup.mergeEndRow\n            }\n          },\n          table\n        );\n\n        if (heightChange) {\n          singleCellGroup.needUpdateHeight = true;\n        }\n\n        isHeightChange = isHeightChange || changed;\n      }\n    }\n    return isHeightChange;\n  }\n\n  // 处理文字\n  const style = table._getCellStyle(cellGroup.col, cellGroup.row);\n  const padding = getQuadProps(getProp('padding', style, cellGroup.col, cellGroup.row, table));\n  const textAlign = style.textAlign;\n  const textBaseline = style.textBaseline;\n  return updateCellContentWidth(\n    cellGroup,\n    distWidth,\n    table.getRowHeight(cellGroup.row),\n    detaX,\n    autoRowHeight,\n    padding,\n    textAlign,\n    textBaseline,\n    table.scenegraph\n  );\n}\n\n/**\n * @description: 重置指定行行高\n * @param {Scenegraph} scene\n * @param {number} row\n * @return {*}\n */\nfunction resetRowHeight(scene: Scenegraph, row: number) {\n  // 获取高度\n  const maxHeight = Math.round(computeRowHeight(row, 0, scene.table.colCount - 1, scene.table));\n  // 更新table行高存储\n  scene.table._setRowHeight(row, maxHeight, true);\n\n  // 更新高度\n  for (let col = 0; col < scene.table.colCount; col++) {\n    const distHeight = maxHeight;\n    const cell = scene.highPerformanceGetCell(col, row);\n    if (cell.role === 'empty') {\n      continue;\n    }\n\n    updateCellHeightForRow(\n      scene,\n      cell,\n      col,\n      row,\n      distHeight,\n      distHeight - cell.attribute.height,\n      scene.table.isHeader(col, row)\n    );\n  }\n}\n"]}