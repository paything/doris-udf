{"version":3,"sources":["../src/scenegraph/utils/keep-aspect-ratio.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,uBAAuB,CACrC,KAAa,EACb,MAAc,EACd,QAAgB,EAChB,SAAiB;IAoBjB,MAAM,SAAS,GAAG,KAAK,CAAC;IACxB,MAAM,UAAU,GAAG,MAAM,CAAC;IAC1B,MAAM,cAAc,GAAG,QAAQ,CAAC;IAChC,MAAM,eAAe,GAAG,SAAS,CAAC;IAClC,MAAM,cAAc,GAAG,cAAc,GAAG,eAAe,CAAC;IACxD,MAAM,SAAS,GAAG,SAAS,GAAG,UAAU,CAAC;IACzC,IAAI,QAAQ,CAAC;IACb,IAAI,SAAS,CAAC;IACd,IAAI,OAAO,CAAC;IACZ,IAAI,OAAO,CAAC;IAEZ,IAAI,SAAS,GAAG,cAAc,EAAE;QAE9B,QAAQ,GAAG,cAAc,CAAC;QAC1B,SAAS,GAAG,QAAQ,GAAG,SAAS,CAAC;QACjC,OAAO,GAAG,CAAC,CAAC;QACZ,OAAO,GAAG,CAAC,eAAe,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;KAC7C;SAAM;QAEL,SAAS,GAAG,eAAe,CAAC;QAC5B,QAAQ,GAAG,SAAS,GAAG,SAAS,CAAC;QACjC,OAAO,GAAG,CAAC,CAAC;QACZ,OAAO,GAAG,CAAC,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC3C;IAED,OAAO;QACL,KAAK,EAAE,QAAQ;QACf,MAAM,EAAE,SAAS;KAClB,CAAC;AACJ,CAAC","file":"keep-aspect-ratio.js","sourcesContent":["export function calcKeepAspectRatioSize(\n  width: number, // image width\n  height: number, // image height\n  maxWidth: number, // cell width\n  maxHeight: number // cell height\n): {\n  width: number;\n  height: number;\n} {\n  // let newWidth = width;\n  // let newHeight = height;\n  // if (newWidth > maxWidth) {\n  //   newWidth = maxWidth;\n  //   newHeight = (newWidth * height) / width;\n  // }\n  // if (newHeight > maxHeight) {\n  //   newHeight = maxHeight;\n  //   newWidth = (newHeight * width) / height;\n  // }\n  // return {\n  //   width: newWidth,\n  //   height: newHeight\n  // };\n\n  const rectWidth = width;\n  const rectHeight = height;\n  const containerWidth = maxWidth;\n  const containerHeight = maxHeight;\n  const containerRatio = containerWidth / containerHeight;\n  const rectRatio = rectWidth / rectHeight;\n  let newWidth;\n  let newHeight;\n  let offsetX;\n  let offsetY;\n\n  if (rectRatio > containerRatio) {\n    // 矩形的宽高比较大，以容器的宽度为基准进行缩放\n    newWidth = containerWidth;\n    newHeight = newWidth / rectRatio;\n    offsetX = 0;\n    offsetY = (containerHeight - newHeight) / 2;\n  } else {\n    // 矩形的高宽比较大，以容器的高度为基准进行缩放\n    newHeight = containerHeight;\n    newWidth = newHeight * rectRatio;\n    offsetY = 0;\n    offsetX = (containerWidth - newWidth) / 2;\n  }\n\n  return {\n    width: newWidth,\n    height: newHeight\n  };\n}\n"]}