import type { IThemeSpec } from './../../../vrender';
import { Group } from '../../graphic/group';
import type { Scenegraph } from '../../scenegraph';
import type { BaseTableAPI } from '../../../ts-types/base-table';
import type { CellRange } from '../../../ts-types';
export declare function createImageCellGroup(columnGroup: Group, xOrigin: number, yOrigin: number, col: number, row: number, width: number, height: number, keepAspectRatio: boolean, imageAutoSizing: boolean, padding: [number, number, number, number], textAlign: CanvasTextAlign, textBaseline: CanvasTextBaseline, mayHaveIcon: boolean, table: BaseTableAPI, cellTheme: IThemeSpec, range: CellRange | undefined, isAsync: boolean): Group;
export type CreateImageCellGroup = typeof createImageCellGroup;
export declare function _adjustWidthHeight(col: number, row: number, width: number, height: number, scene: Scenegraph, padding: [number, number, number, number], cellGroup: Group): boolean;
export declare function updateImageCellContentWhileResize(cellGroup: Group, col: number, row: number, deltaX: number, deltaY: number, table: BaseTableAPI): void;
export declare function getCellRange(cellGroup: Group, table: BaseTableAPI): {
    width: number;
    height: number;
    isMerge: boolean;
};
export declare function updateImageDxDy(startCol: number, endCol: number, startRow: number, endRow: number, table: BaseTableAPI): void;
