{"version":3,"sources":["../src/scenegraph/group-creater/cell-type/text-cell.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAC3C,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AAGjE,OAAO,EAAE,wBAAwB,EAAE,MAAM,sCAAsC,CAAC;AAChF,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAkBhD,MAAM,UAAU,eAAe,CAC7B,KAAmB,EACnB,KAAa,EACb,WAAkB,EAClB,OAAe,EACf,OAAe,EACf,GAAW,EACX,GAAW,EAEX,QAAyB,EACzB,SAAiB,EACjB,UAAkB,EAClB,OAAiB,EACjB,SAA0B,EAC1B,YAAgC,EAChC,WAAoB,EACpB,mBAA2B,EAC3B,aAAsB,EACtB,SAAqB,EACrB,KAA4B,EAC5B,OAAgB;;IAEhB,MAAM,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAClD,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,SAAS,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IACrF,IAAI,OAAO,CAAC,iBAAiB,CAAC,EAAE;QAC9B,OAAO,GAAG,iBAAiB,CAAC;KAC7B;IACD,IAAI,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,IAAI,0CAAE,SAAS,EAAE;QAC9B,SAAS,GAAG,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,IAAI,0CAAE,SAAS,CAAC;KACxC;IACD,IAAI,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,IAAI,0CAAE,YAAY,EAAE;QACjC,YAAY,GAAG,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,IAAI,0CAAE,YAAY,CAAC;KAC9C;IACD,MAAM,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IACjD,MAAM,YAAY,GAAG,QAAQ,KAAK,MAAM,CAAC;IACzC,MAAM,YAAY,GAAG,MAAA,WAAW,CAAC,YAAY,mCAAI,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC;IAClF,MAAM,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;IAGxC,MAAM,gBAAgB,GAAG,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IAC9E,IAAI,SAAS,CAAC;IACd,IAAI,OAAO,EAAE;QACX,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QACrD,IAAI,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,MAAM,EAAE;YAC1C,SAAS,CAAC,aAAa,CAAC;gBACtB,CAAC,EAAE,OAAO;gBACV,CAAC,EAAE,OAAO;gBACV,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,UAAU;gBAElB,SAAS,EAAE,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,0CAAE,SAAS,mCAAI,SAAS;gBACnD,IAAI,EAAE,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,0CAAE,IAAI,mCAAI,SAAS;gBACzC,MAAM,EAAE,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,0CAAE,MAAM,mCAAI,SAAS;gBAC7C,gBAAgB,EAAE,gBAAgB,aAAhB,gBAAgB,cAAhB,gBAAgB,GAAI,SAAS;gBAC/C,gBAAgB,EAAE,MAAA,MAAC,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAa,0CAAE,gBAAgB,mCAAI,SAAS;gBAC1E,MAAM,EAAE,MAAA,MAAC,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAa,0CAAE,MAAM,mCAAI,SAAS;gBACtD,QAAQ,EAAE,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,0CAAE,QAAQ,mCAAI,SAAS;gBACjD,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE,IAAI;gBACV,YAAY,EAAE,SAAS,CAAC,KAAK,CAAC,YAAY;aACpC,CAAC,CAAC;SACX;KACF;IACD,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,MAAM,EAAE;QAC3C,SAAS,GAAG,IAAI,KAAK,CAAC;YACpB,CAAC,EAAE,OAAO;YACV,CAAC,EAAE,OAAO;YACV,KAAK,EAAE,SAAS;YAChB,MAAM,EAAE,UAAU;YAElB,SAAS,EAAE,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,0CAAE,SAAS,mCAAI,SAAS;YACnD,IAAI,EAAE,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,0CAAE,IAAI,mCAAI,SAAS;YACzC,MAAM,EAAE,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,0CAAE,MAAM,mCAAI,SAAS;YAC7C,gBAAgB,EAAE,gBAAgB,aAAhB,gBAAgB,cAAhB,gBAAgB,GAAI,SAAS;YAC/C,gBAAgB,EAAE,MAAA,MAAC,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAa,0CAAE,gBAAgB,mCAAI,SAAS;YAC1E,MAAM,EAAE,MAAA,MAAC,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAa,0CAAE,MAAM,mCAAI,SAAS;YACtD,QAAQ,EAAE,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,0CAAE,QAAQ,mCAAI,SAAS;YAEjD,OAAO,EAAE,MAAM;YAEf,IAAI,EAAE,IAAI;YAEV,YAAY,EAAE,SAAS,CAAC,KAAK,CAAC,YAAY;SACpC,CAAC,CAAC;QACV,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC;QACxB,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;QACpB,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;QACpB,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,YAAY,CAAC,SAAS,CAAC,CAAC;KACtC;IACD,IAAI,mBAAmB,EAAE;QACvB,SAAS,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;KAC5C;IACD,IAAI,aAAa,EAAE;QACjB,MAAM,OAAO,GAAW,KAAK,CAAC;QAC9B,IAAI,KAAK,CAAC;QACV,IAAI,WAAW,EAAE;YACf,IAAI,OAAO,GAAG,GAAG,CAAC;YAClB,IAAI,OAAO,GAAG,GAAG,CAAC;YAClB,IAAI,KAAK,EAAE;gBACT,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;gBAC1B,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;aAC3B;YACD,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SAC9C;QAED,iBAAiB,CACf,SAAS,EACT,KAAK,EACL,OAAO,EACP,OAAc,EACd,YAAY,EACZ,aAAa,EACb,YAAY,EACZ,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EAKrD,SAAS,CAAC,SAAS,CAAC,KAAK,EACzB,SAAS,CAAC,SAAS,CAAC,MAAM,EAC1B,SAAS,EACT,YAAY,EACZ,KAAK,EACL,SAAS,EACT,KAAK,CACN,CAAC;QAEF,IAAI,MAAC,SAAiB,aAAjB,SAAS,uBAAT,SAAS,CAAU,OAAO,0CAAE,MAAM,EAAE;YACvC,UAAU,CAAC,MAAC,SAAiB,aAAjB,SAAS,uBAAT,SAAS,CAAU,OAAO,0CAAE,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;SACnE;KACF;IACD,IAAI,mBAAmB,EAAE;QACvB,SAAS,CAAC,aAAa,CAAC;YACtB,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,EAAE,MAAA,mBAAmB,CAAC,SAAS,CAAC,KAAK,mCAAI,CAAC,CAAC;YACpF,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,MAAA,mBAAmB,CAAC,SAAS,CAAC,MAAM,mCAAI,CAAC,CAAC;SACxF,CAAC,CAAC;KACJ;IACD,OAAO,SAAS,CAAC;AACnB,CAAC","file":"text-cell.js","sourcesContent":["/* eslint-disable no-undef */\nimport type { IThemeSpec, Group as VGroup } from './../../../vrender';\nimport { isValid } from '@visactor/vutils';\nimport { Group } from '../../graphic/group';\n// import { parseFont } from '../../utils/font';\nimport { getFunctionalProp } from '../../utils/get-prop';\nimport { createCellContent } from '../../utils/text-icon-layout';\nimport type { BaseTableAPI } from '../../../ts-types/base-table';\nimport type { CellRange } from '../../../ts-types';\nimport { getCellBorderStrokeWidth } from '../../utils/cell-border-stroke-width';\nimport { createMark } from '../../graphic/mark';\n\n/**\n * @description: 创建单元格场景节点\n * @param {Group} columnGroup 列Group\n * @param {number} xOrigin 起始x坐标\n * @param {number} yOrigin 起始y坐标\n * @param {number} col\n * @param {number} row\n * @param {BaseTableAPI} table\n * @param {number | 'auto'} colWidth 配置列宽\n * @param {number} padding 单元格padding\n * @param {CanvasTextAlign} textAlign\n * @param {CanvasTextBaseline} textBaseline\n * @param {boolean} noWrap 不进行折行（default column type）\n * @param {IThemeSpec} cellTheme 单元格主题\n * @return {Group}\n */\nexport function createCellGroup(\n  table: BaseTableAPI,\n  value: string,\n  columnGroup: Group,\n  xOrigin: number,\n  yOrigin: number,\n  col: number,\n  row: number,\n  // rowHeight: number,\n  colWidth: number | 'auto',\n  cellWidth: number,\n  cellHeight: number,\n  padding: number[],\n  textAlign: CanvasTextAlign,\n  textBaseline: CanvasTextBaseline,\n  mayHaveIcon: boolean,\n  customElementsGroup: VGroup,\n  renderDefault: boolean,\n  cellTheme: IThemeSpec,\n  range: CellRange | undefined,\n  isAsync: boolean\n): Group {\n  const headerStyle = table._getCellStyle(col, row); // to be fixed\n  const functionalPadding = getFunctionalProp('padding', headerStyle, col, row, table);\n  if (isValid(functionalPadding)) {\n    padding = functionalPadding;\n  }\n  if (cellTheme?.text?.textAlign) {\n    textAlign = cellTheme?.text?.textAlign;\n  }\n  if (cellTheme?.text?.textBaseline) {\n    textBaseline = cellTheme?.text?.textBaseline;\n  }\n  const autoRowHeight = table.isAutoRowHeight(row);\n  const autoColWidth = colWidth === 'auto';\n  const autoWrapText = headerStyle.autoWrapText ?? table.internalProps.autoWrapText;\n  const lineClamp = headerStyle.lineClamp;\n\n  // cell\n  const strokeArrayWidth = getCellBorderStrokeWidth(col, row, cellTheme, table);\n  let cellGroup;\n  if (isAsync) {\n    cellGroup = table.scenegraph.getCell(col, row, true);\n    if (cellGroup && cellGroup.role === 'cell') {\n      cellGroup.setAttributes({\n        x: xOrigin,\n        y: yOrigin,\n        width: cellWidth,\n        height: cellHeight,\n        // 背景相关，cell背景由cellGroup绘制\n        lineWidth: cellTheme?.group?.lineWidth ?? undefined,\n        fill: cellTheme?.group?.fill ?? undefined,\n        stroke: cellTheme?.group?.stroke ?? undefined,\n        strokeArrayWidth: strokeArrayWidth ?? undefined,\n        strokeArrayColor: (cellTheme?.group as any)?.strokeArrayColor ?? undefined,\n        cursor: (cellTheme?.group as any)?.cursor ?? undefined,\n        lineDash: cellTheme?.group?.lineDash ?? undefined,\n        lineCap: 'butt',\n        clip: true,\n        cornerRadius: cellTheme.group.cornerRadius\n      } as any);\n    }\n  }\n  if (!cellGroup || cellGroup.role !== 'cell') {\n    cellGroup = new Group({\n      x: xOrigin,\n      y: yOrigin,\n      width: cellWidth,\n      height: cellHeight,\n      // 背景相关，cell背景由cellGroup绘制\n      lineWidth: cellTheme?.group?.lineWidth ?? undefined,\n      fill: cellTheme?.group?.fill ?? undefined,\n      stroke: cellTheme?.group?.stroke ?? undefined,\n      strokeArrayWidth: strokeArrayWidth ?? undefined,\n      strokeArrayColor: (cellTheme?.group as any)?.strokeArrayColor ?? undefined,\n      cursor: (cellTheme?.group as any)?.cursor ?? undefined,\n      lineDash: cellTheme?.group?.lineDash ?? undefined,\n\n      lineCap: 'butt',\n\n      clip: true,\n\n      cornerRadius: cellTheme.group.cornerRadius\n    } as any);\n    cellGroup.role = 'cell';\n    cellGroup.col = col;\n    cellGroup.row = row;\n    columnGroup?.addCellGroup(cellGroup);\n  }\n  if (customElementsGroup) {\n    cellGroup.appendChild(customElementsGroup);\n  }\n  if (renderDefault) {\n    const textStr: string = value;\n    let icons;\n    if (mayHaveIcon) {\n      let iconCol = col;\n      let iconRow = row;\n      if (range) {\n        iconCol = range.start.col;\n        iconRow = range.start.row;\n      }\n      icons = table.getCellIcons(iconCol, iconRow);\n    }\n\n    createCellContent(\n      cellGroup,\n      icons,\n      textStr,\n      padding as any,\n      autoColWidth,\n      autoRowHeight,\n      autoWrapText,\n      typeof lineClamp === 'number' ? lineClamp : undefined,\n      // autoColWidth ? 0 : colWidth,\n      // table.getRowHeight(row),\n      // cellWidth,\n      // cellHeight,\n      cellGroup.attribute.width,\n      cellGroup.attribute.height,\n      textAlign,\n      textBaseline,\n      table,\n      cellTheme,\n      range\n    );\n\n    if ((cellTheme as any)?._vtable?.marked) {\n      createMark((cellTheme as any)?._vtable?.marked, cellGroup, table);\n    }\n  }\n  if (customElementsGroup) {\n    cellGroup.setAttributes({\n      width: Math.max(cellGroup.attribute.width, customElementsGroup.attribute.width ?? 0),\n      height: Math.max(cellGroup.attribute.height, customElementsGroup.attribute.height ?? 0)\n    });\n  }\n  return cellGroup;\n}\n\nexport type CreateTextCellGroup = typeof createCellGroup;\n\n// /**\n//  * @description: 获取函数式赋值的样式，记录在cellTheme中\n//  * @param {BaseTableAPI} table\n//  * @param {number} col\n//  * @param {number} row\n//  * @param {IThemeSpec} cellTheme\n//  * @return {IThemeSpec | undefined}\n//  */\n// export function getCellTheme(\n//   table: BaseTableAPI,\n//   col: number,\n//   row: number,\n//   cellTheme?: IThemeSpec\n// ): IThemeSpec | undefined {\n//   // get column header style\n//   const headerStyle = table._getCellStyle(col, row);\n\n//   const theme = getStyleTheme(headerStyle, table, col, row, getFunctionalProp).theme;\n\n//   for (const prop in theme.group) {\n//     if (isValid(theme.group[prop])) {\n//       if (!cellTheme) {\n//         cellTheme = {};\n//       }\n\n//       if (!cellTheme.group) {\n//         cellTheme.group = {};\n//       }\n\n//       cellTheme.group[prop] = theme.group[prop];\n//     }\n//   }\n\n//   for (const prop in theme.text) {\n//     if (isValid(theme.text[prop])) {\n//       if (!cellTheme) {\n//         cellTheme = {};\n//       }\n\n//       if (!cellTheme.text) {\n//         cellTheme.text = {};\n//       }\n\n//       cellTheme.text[prop] = theme.text[prop];\n//     }\n//   }\n\n//   for (const prop in theme._vtable) {\n//     if (isValid(theme._vtable[prop])) {\n//       if (!cellTheme) {\n//         cellTheme = {};\n//       }\n\n//       if (!(cellTheme as any)._vtable) {\n//         (cellTheme as any)._vtable = {};\n//       }\n\n//       (cellTheme as any)._vtable[prop] = theme._vtable[prop];\n//     }\n//   }\n//   return cellTheme;\n// }\n"]}