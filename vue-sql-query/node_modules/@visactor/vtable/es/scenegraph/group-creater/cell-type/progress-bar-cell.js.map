{"version":3,"sources":["../src/scenegraph/group-creater/cell-type/progress-bar-cell.ts"],"names":[],"mappings":"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","file":"progress-bar-cell.js","sourcesContent":["import { createRect, createLine } from './../../../vrender';\nimport type { ProgressBarStyle } from '../../../body-helper/style/ProgressBarStyle';\nimport { str, getOrApply } from '../../../tools/helper';\nimport { Group } from '../../graphic/group';\nimport { getProp } from '../../utils/get-prop';\nimport { getQuadProps } from '../../utils/padding';\nimport type { BaseTableAPI } from '../../../ts-types/base-table';\nimport { isNumber } from '@visactor/vutils';\nimport type { CellRange, StylePropertyFunctionArg } from '../../../ts-types';\n\nexport function createProgressBarCell(\n  progressBarDefine: {\n    min?: number | ((args: StylePropertyFunctionArg) => number);\n    max?: number | ((args: StylePropertyFunctionArg) => number);\n    barType?: 'default' | 'negative' | 'negative_no_axis'; // 进度图类型\n    dependField?: string; // 指定其他列数据（风神使用）,\n  },\n  style: ProgressBarStyle,\n  width: number,\n  // height: number,\n  value: string,\n  dataValue: string,\n  col: number,\n  row: number,\n  padding: [number, number, number, number],\n  table: BaseTableAPI,\n  range?: CellRange\n) {\n  if (progressBarDefine.dependField) {\n    const dependField = getOrApply(progressBarDefine.dependField, {\n      col,\n      row,\n      table,\n      value,\n      dataValue,\n      cellHeaderPaths: undefined\n    });\n    dataValue = (table.getCellOriginRecord(col, row) as any)?.[dependField] ?? dataValue;\n  }\n\n  const barType =\n    getOrApply(progressBarDefine.barType, {\n      col,\n      row,\n      table,\n      value,\n      dataValue,\n      cellHeaderPaths: undefined\n    }) ?? 'default';\n\n  const min: number =\n    getOrApply(progressBarDefine.min, {\n      col,\n      row,\n      table,\n      value,\n      dataValue,\n      cellHeaderPaths: undefined\n    }) ?? 0;\n  const max: number =\n    getOrApply(progressBarDefine.max, {\n      col,\n      row,\n      table,\n      value,\n      dataValue,\n      cellHeaderPaths: undefined\n    }) ?? min + 100;\n\n  let height = 0;\n  if (range) {\n    height = table.getRowsHeight(range.start.row, range.end.row);\n  } else {\n    height = table.getRowHeight(row);\n  }\n  let contentWidth = width;\n  let contentHeight = height;\n  let _contentOffset = 0;\n  if (isNumber(table.theme._contentOffset)) {\n    _contentOffset = table.theme._contentOffset;\n  }\n  const percentCompleteBarGroup = new Group({\n    x: -_contentOffset,\n    y: -_contentOffset,\n    width: contentWidth,\n    height: contentHeight\n  });\n  percentCompleteBarGroup.name = 'progress-bar';\n\n  const {\n    showBar,\n    barColor,\n    barBgColor,\n    // bgColor,\n    barPositiveColor,\n    barNegativeColor,\n    barAxisColor,\n    barRightToLeft,\n    showBarMark,\n    barMarkPositiveColor,\n    barMarkNegativeColor,\n    barMarkWidth,\n    barMarkPosition,\n    barMarkInBar\n  } = style;\n  let { barHeight, barBottom, barPadding } = style;\n  // const { col, row, dataValue: originalValue } = context;\n\n  // 完善四元组\n  if (barPadding.length === 1) {\n    barPadding = [barPadding[0], barPadding[0], barPadding[0], barPadding[0]];\n  } else if (barPadding.length === 2) {\n    barPadding = [barPadding[0], barPadding[1], barPadding[0], barPadding[1]];\n  } else if (barPadding.length === 3) {\n    barPadding = [barPadding[0], barPadding[1], barPadding[2], barPadding[1]];\n  }\n\n  // 将百分比值转换为数值\n  barPadding = barPadding.map((v, i) => {\n    if (typeof v === 'string' && str.endsWith(v, '%')) {\n      const num = Number(v.substr(0, v.length - 1));\n      if (i === 0 || i === 2) {\n        return (height * num) / 100;\n      }\n      return (width * num) / 100;\n    }\n    return Number(v);\n  });\n\n  const borderWidth = getQuadProps(getProp('borderLineWidth', style, col, row, table));\n  const barPaddingTop = Math.max((barPadding as number[])[0], Math.ceil(borderWidth[0] / 2));\n  let barPaddingRight = Math.max((barPadding as number[])[1], Math.floor(borderWidth[1] / 2));\n  const barPaddingBottom = Math.max((barPadding as number[])[2], Math.floor(borderWidth[2] / 2));\n  let barPaddingLeft = Math.max((barPadding as number[])[3], Math.ceil(borderWidth[3] / 2));\n\n  if (showBarMark && barMarkWidth > 0 && barMarkPosition === 'right' && barMarkInBar === false) {\n    barPaddingRight += barMarkWidth;\n    barPaddingLeft += barMarkWidth;\n  }\n\n  contentWidth -= barPaddingRight + barPaddingLeft;\n  contentHeight -= barPaddingBottom + barPaddingTop;\n  if (row === table.rowCount - 1 && [0, '0'].includes(barBottom)) {\n    // 单元格边框在表格边界会向内缩进1px，为了避免进度图矩形覆盖边框，这里在最后一行向内缩进1px\n    // 详见 packages/vtable/src/scenegraph/graphic/contributions/group-contribution-render.ts getCellSizeForDraw()\n    contentHeight -= 1;\n  }\n\n  // if (barPaddingTop & 1) {\n  //   // barPaddingTop += 0.5;\n  //   contentWidth += borderWidth[0];\n  // }\n  // if (barPaddingLeft & 1) {\n  //   // barPaddingLeft += 0.5;\n  //   contentHeight += borderWidth[0];\n  // }\n\n  const top = barPaddingTop;\n  const left = barPaddingLeft;\n  const right = contentWidth;\n  const bottom = contentHeight;\n\n  if (typeof barHeight === 'string' && str.endsWith(barHeight, '%')) {\n    barHeight = Number(barHeight.substr(0, barHeight.length - 1));\n    barHeight = (contentHeight * barHeight) / 100;\n  } else {\n    barHeight = Number(barHeight);\n  }\n  if (typeof barBottom === 'string' && str.endsWith(barBottom, '%')) {\n    barBottom = Number(barBottom.substr(0, barBottom.length - 1));\n    barBottom = (contentHeight * barBottom) / 100;\n  } else {\n    barBottom = Number(barBottom);\n  }\n\n  const show = getOrApply(showBar as any, {\n    col,\n    row,\n    table,\n    context: null,\n    value,\n    dataValue\n  });\n\n  if (show) {\n    let svalue = `${dataValue}`;\n    if (str.endsWith(svalue, '%')) {\n      svalue = svalue.substr(0, svalue.length - 1);\n    }\n    const num = Number(svalue);\n    if (isNaN(num)) {\n      return percentCompleteBarGroup;\n    }\n\n    if ((barType ?? 'default') === 'default') {\n      const percentile = num < min ? 0 : num > max ? 1 : (num - min) / (max - min);\n\n      const barMaxWidth = contentWidth;\n      const barTop = top + contentHeight - (barHeight as number) - (barBottom as number);\n      // const barLeft = 0 + barPaddingLeft;\n      let barSize = Math.min(barMaxWidth * percentile, barMaxWidth);\n      const barLeft = barRightToLeft ? left + right - barSize : left;\n      if (col === table.colCount - 1 && percentile === 1 && !barRightToLeft) {\n        // 单元格边框在表格边界会向内缩进1px，为了避免进度图矩形覆盖边框，这里在最后一行向内缩进1px\n        // 详见 packages/vtable/src/scenegraph/graphic/contributions/group-contribution-render.ts getCellSizeForDraw()\n        barSize -= 1;\n      }\n      const bgFillColor = getOrApply(barBgColor as any, {\n        col,\n        row,\n        table,\n        context: null,\n        value,\n        dataValue,\n        percentile\n      });\n\n      if (bgFillColor) {\n        const barBack = createRect({\n          x: barLeft,\n          y: barTop,\n          width: barMaxWidth,\n          height: barHeight,\n          fill: bgFillColor\n        });\n        percentCompleteBarGroup.addChild(barBack);\n      }\n\n      const fillColor =\n        getOrApply(barColor as any, {\n          col,\n          row,\n          table,\n          context: null,\n          value,\n          dataValue,\n          percentile\n        }) || '#20a8d8';\n      const barMain = createRect({\n        x: barLeft,\n        y: barTop,\n        width: barSize,\n        height: barHeight,\n        fill: fillColor\n      });\n      percentCompleteBarGroup.addChild(barMain);\n    } else if (barType === 'negative') {\n      // negative模式参考风神现有数据条样式，显示坐标轴和正负数据条\n      // 计算坐标轴位置\n      const negativeRange = min < 0 ? -min : 0;\n      const positiveRange = max > 0 ? max : 0;\n\n      const negativeFactor = negativeRange / (negativeRange + positiveRange);\n      const positiveFactor = 1 - negativeFactor;\n\n      // 计算rate\n      const positiveRate = num > 0 ? num / positiveRange : 0;\n      const negativeRate = num < 0 ? -num / negativeRange : 0;\n\n      // 绘制\n      // 绘制背景\n      const barMaxWidth = contentWidth;\n      const barTop = top + contentHeight - (barHeight as number) - (barBottom as number);\n      const barLeft = left;\n      const bgFillColor = getOrApply(barBgColor as any, {\n        col,\n        row,\n        table,\n        context: null,\n        value,\n        dataValue,\n        percentile: positiveRate\n      });\n      if (bgFillColor) {\n        const barBack = createRect({\n          x: barLeft,\n          y: barTop,\n          width: barMaxWidth,\n          height: barHeight,\n          fill: bgFillColor\n        });\n        percentCompleteBarGroup.addChild(barBack);\n      }\n\n      // 坐标轴距离左侧边界距离\n      const positiveLeft = barRightToLeft ? positiveFactor * barMaxWidth : negativeFactor * barMaxWidth;\n\n      // 绘制负值区域\n      const barSizeNega = Math.min(barMaxWidth * negativeFactor * negativeRate, barMaxWidth);\n      const barRectNega = barRightToLeft\n        ? {\n            left: barLeft + positiveLeft,\n            top: barTop,\n            width: barSizeNega,\n            height: barHeight as number\n          }\n        : {\n            left: barLeft + positiveLeft - barSizeNega,\n            top: barTop,\n            width: barSizeNega,\n            height: barHeight as number\n          };\n      const barNagiFillColor =\n        getOrApply(barNegativeColor as any, {\n          col,\n          row,\n          table,\n          context: null,\n          value,\n          dataValue,\n          percentile: negativeRate\n        }) || '#20a8d8';\n      const barNega = createRect({\n        x: barRectNega.left,\n        y: barRectNega.top,\n        width: barRectNega.width,\n        height: barRectNega.height,\n        fill: barNagiFillColor\n      });\n      percentCompleteBarGroup.addChild(barNega);\n\n      // 绘制正值区域\n      let barSizePosi = Math.min(barMaxWidth * positiveFactor * positiveRate, barMaxWidth);\n      if (col === table.colCount - 1 && positiveRate === 1 && !barRightToLeft) {\n        // 单元格边框在表格边界会向内缩进1px，为了避免进度图矩形覆盖边框，这里在最后一行向内缩进1px\n        // 详见 packages/vtable/src/scenegraph/graphic/contributions/group-contribution-render.ts getCellSizeForDraw()\n        barSizePosi -= 1;\n      }\n      const barRectPosi = barRightToLeft\n        ? {\n            left: barLeft + positiveLeft - barSizePosi,\n            top: barTop,\n            width: barSizePosi,\n            height: barHeight as number\n          }\n        : {\n            left: barLeft + positiveLeft,\n            top: barTop,\n            width: barSizePosi,\n            height: barHeight as number\n          };\n      const barPosiFillColor =\n        getOrApply(barPositiveColor as any, {\n          col,\n          row,\n          table,\n          context: null,\n          value,\n          dataValue,\n          percentile: positiveRate\n        }) || '#20a8d8';\n      const barPosi = createRect({\n        x: barRectPosi.left,\n        y: barRectPosi.top,\n        width: barRectPosi.width,\n        height: barRectPosi.height,\n        fill: barPosiFillColor\n      });\n      percentCompleteBarGroup.addChild(barPosi);\n\n      // 绘制坐标轴\n      const lineLeft = barRightToLeft ? barRectNega.left : barRectPosi.left;\n      const lineStrokeColor = getOrApply(barAxisColor as any, {\n        col,\n        row,\n        table,\n        context: null,\n        value,\n        dataValue,\n        percentile: positiveRate\n      });\n      const line = createLine({\n        x: 0,\n        y: 0,\n        stroke: lineStrokeColor,\n        lineWidth: 1,\n        lineDash: [2, 2],\n        points: [\n          { x: lineLeft, y: 0 },\n          { x: lineLeft, y: height }\n        ]\n      });\n      percentCompleteBarGroup.addChild(line);\n\n      // 绘制mark\n      if (showBarMark && (positiveRate || negativeRate)) {\n        const lineWidth = barMarkWidth;\n        const points = [];\n        let barMarkStrokeColor;\n        if (positiveRate > 0) {\n          barMarkStrokeColor =\n            getOrApply(barMarkPositiveColor as any, {\n              col,\n              row,\n              table,\n              context: null,\n              value,\n              dataValue,\n              percentile: positiveRate\n            }) || '#20a8d8';\n          if (barMarkPosition === 'right') {\n            const markLeft = barRightToLeft\n              ? barRectPosi.left + barMarkWidth / 2\n              : barRectPosi.left + barRectPosi.width + (barMarkInBar ? -barMarkWidth / 2 : barMarkWidth / 2);\n            points.push({ x: markLeft, y: barRectPosi.top });\n            points.push({ x: markLeft, y: barRectPosi.top + barRectPosi.height });\n          } else if (barMarkPosition === 'bottom') {\n            points.push({\n              x: barRectPosi.left,\n              y: barRectPosi.top + barRectPosi.height - barMarkWidth / 2\n            });\n            points.push({\n              x: barRectPosi.left + barRectPosi.width,\n              y: barRectPosi.top + barRectPosi.height - barMarkWidth / 2\n            });\n          }\n        } else if (negativeRate > 0) {\n          barMarkStrokeColor =\n            getOrApply(barMarkNegativeColor as any, {\n              col,\n              row,\n              table,\n              context: null,\n              value,\n              dataValue,\n              percentile: negativeRate\n            }) || '#20a8d8';\n          if (barMarkPosition === 'right') {\n            const markLeft = barRightToLeft\n              ? barRectNega.left + barRectNega.width - barMarkWidth / 2\n              : barRectNega.left + barMarkWidth / 2;\n            points.push({ x: markLeft, y: barRectNega.top });\n            points.push({ x: markLeft, y: barRectNega.top + barRectNega.height });\n          } else if (barMarkPosition === 'bottom') {\n            points.push({\n              x: barRectNega.left,\n              y: barRectNega.top + barRectNega.height - barMarkWidth / 2\n            });\n            points.push({\n              x: barRectNega.left + barRectNega.width,\n              y: barRectNega.top + barRectNega.height - barMarkWidth / 2\n            });\n          }\n        }\n        const barMark = createLine({\n          x: 0,\n          y: 0,\n          stroke: barMarkStrokeColor,\n          lineWidth,\n          points\n        });\n        percentCompleteBarGroup.addChild(barMark);\n      }\n    } else if (barType === 'negative_no_axis') {\n      // negative_no_axis模式不显示坐标轴，正负数据条同向，区分颜色\n      // 计算range\n      const _negativeRange = min < 0 ? -min : 0;\n      const _positiveRange = max > 0 ? max : 0;\n      const range = Math.max(_negativeRange, _positiveRange);\n\n      // 计算rate\n      const percentile = range === 0 ? 0 : Math.abs(num) / range;\n\n      // 绘制\n      // 绘制背景\n      // const barMaxWidth = width - barPaddingLeft - barPaddingRight - 1; /*罫線*/\n      const barMaxWidth = contentWidth;\n      let barSize = Math.min(barMaxWidth * percentile, barMaxWidth);\n      if (col === table.colCount - 1 && percentile === 1 && !barRightToLeft) {\n        // 单元格边框在表格边界会向内缩进1px，为了避免进度图矩形覆盖边框，这里在最后一行向内缩进1px\n        // 详见 packages/vtable/src/scenegraph/graphic/contributions/group-contribution-render.ts getCellSizeForDraw()\n        barSize -= 1;\n      }\n      // const barTop = bottom - barPaddingBottom - (barHeight as number) - (barBottom as number) - 1; /*罫線*/\n      const barTop = top + contentHeight - (barHeight as number) - (barBottom as number);\n      // const barLeft = barRightToLeft ? right - barPaddingRight - barSize : left + barPaddingLeft;\n      const barLeft = barRightToLeft ? left + right - barSize : left;\n\n      const bgFillColor = getOrApply(barBgColor as any, {\n        col,\n        row,\n        table,\n        context: null,\n        value,\n        dataValue,\n        percentile\n      });\n      if (bgFillColor) {\n        const barBack = createRect({\n          x: barLeft,\n          y: barTop,\n          width: barMaxWidth,\n          height: barHeight,\n          fill: bgFillColor\n        });\n        percentCompleteBarGroup.addChild(barBack);\n      }\n\n      // 绘制bar\n      const barRect = {\n        left: barLeft,\n        top: barTop,\n        width: barSize,\n        height: barHeight as number\n      };\n      let barRectFillColor;\n      if (num >= 0) {\n        barRectFillColor =\n          getOrApply(barPositiveColor as any, {\n            col,\n            row,\n            table,\n            context: null,\n            value,\n            percentile,\n            dataValue\n          }) || '#20a8d8';\n      } else {\n        barRectFillColor =\n          getOrApply(barNegativeColor as any, {\n            col,\n            row,\n            table,\n            context: null,\n            value,\n            dataValue,\n            percentile\n          }) || '#20a8d8';\n      }\n      const bar = createRect({\n        x: barRect.left,\n        y: barRect.top,\n        width: barRect.width,\n        height: barRect.height,\n        fill: barRectFillColor\n      });\n      percentCompleteBarGroup.addChild(bar);\n\n      // 绘制mark\n      if (showBarMark && num) {\n        const lineWidth = barMarkWidth;\n        const points = [];\n        let barMarkStrokeColor;\n        if (num >= 0) {\n          barMarkStrokeColor =\n            getOrApply(barMarkPositiveColor as any, {\n              col,\n              row,\n              table,\n              context: null,\n              value,\n              dataValue,\n              percentile\n            }) || '#20a8d8';\n        } else {\n          barMarkStrokeColor =\n            getOrApply(barMarkNegativeColor as any, {\n              col,\n              row,\n              table,\n              context: null,\n              value,\n              dataValue,\n              percentile\n            }) || '#20a8d8';\n        }\n        if (barMarkPosition === 'right') {\n          const markLeft = barRightToLeft\n            ? barRect.left + barMarkWidth / 2\n            : barRect.left + barRect.width - barMarkWidth / 2;\n          points.push({ x: markLeft, y: barRect.top });\n          points.push({ x: markLeft, y: barRect.top + barRect.height });\n        } else if (barMarkPosition === 'bottom') {\n          points.push({\n            x: barRect.left,\n            y: barRect.top + barRect.height - barMarkWidth / 2\n          });\n          points.push({\n            x: barRect.left + barRect.width,\n            y: barRect.top + barRect.height - barMarkWidth / 2\n          });\n        }\n        const barMark = createLine({\n          x: 0,\n          y: 0,\n          stroke: barMarkStrokeColor,\n          lineWidth,\n          points\n        });\n        percentCompleteBarGroup.addChild(barMark);\n      }\n    }\n  }\n  return percentCompleteBarGroup;\n}\n\nexport type CreateProgressBarCell = typeof createProgressBarCell;\n"]}