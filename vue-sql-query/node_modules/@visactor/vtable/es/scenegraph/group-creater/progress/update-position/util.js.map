{"version":3,"sources":["../src/scenegraph/group-creater/progress/update-position/util.ts"],"names":[],"mappings":"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","file":"util.js","sourcesContent":["import type { Group } from '../../../graphic/group';\nimport { getCellMergeInfo } from '../../../utils/get-cell-merge';\nimport { updateCell } from '../../cell-helper';\nimport type { SceneProxy } from '../proxy';\n\nexport function checkFirstRowMerge(row: number, proxy: SceneProxy) {\n  for (let col = 0; col < proxy.table.colCount; col++) {\n    if (\n      (col >= proxy.table.rowHeaderLevelCount && col < proxy.colStart) ||\n      (col > proxy.colEnd && col < proxy.table.colCount - proxy.table.rightFrozenColCount)\n    ) {\n      continue;\n    }\n\n    const range = getCellMergeInfo(proxy.table, col, row);\n    // 清除之前mock的Merge cell\n    range && clearHadMergedRow(range.start.row, range.end.row, col, proxy);\n\n    // 重新生成mock的Merge cell\n    if (\n      range &&\n      range.start.row !== row &&\n      proxy.highPerformanceGetCell(range.start.col, range.start.row, true).role !== 'cell'\n    ) {\n      // 在row的位置添加range.start.row单元格\n      const oldCellGroup = proxy.highPerformanceGetCell(col, row, true);\n      const newCellGroup = updateCell(range.start.col, range.start.row, proxy.table, true);\n\n      newCellGroup.col = col;\n      newCellGroup.row = row;\n      newCellGroup.setAttribute('y', proxy.table.getRowsHeight(proxy.table.frozenRowCount, range.start.row - 1));\n\n      oldCellGroup.parent.insertAfter(newCellGroup, oldCellGroup);\n      oldCellGroup.parent.removeChild(oldCellGroup);\n\n      oldCellGroup.needUpdate = false;\n      newCellGroup.needUpdate = false;\n\n      // update cache\n      if (proxy.cellCache.get(col)) {\n        proxy.cellCache.set(col, newCellGroup);\n      }\n    }\n  }\n}\n\nexport function checkFirstColMerge(col: number, proxy: SceneProxy) {\n  for (let row = 0; row < proxy.table.rowCount; row++) {\n    if (\n      (row >= proxy.table.frozenRowCount && row < proxy.rowStart) ||\n      (row > proxy.rowEnd && row < proxy.table.rowCount - proxy.table.bottomFrozenRowCount)\n    ) {\n      continue;\n    }\n\n    const range = getCellMergeInfo(proxy.table, col, row);\n    // 清除之前mock的Merge cell\n    range && clearHadMergedColumn(range.start.col, range.end.col, row, proxy);\n\n    if (\n      range &&\n      range.start.col !== col &&\n      proxy.highPerformanceGetCell(range.start.col, range.start.row, true).role !== 'cell'\n    ) {\n      // 在col的位置添加range.start.col单元格\n      const oldCellGroup = proxy.highPerformanceGetCell(col, row, true);\n      const newCellGroup = updateCell(range.start.col, range.start.row, proxy.table, true);\n\n      newCellGroup.col = col;\n      newCellGroup.row = row;\n      newCellGroup.setAttribute(\n        'x',\n        proxy.table.getColsWidth(proxy.table.rowHeaderLevelCount, range.start.col - 1) - oldCellGroup.parent.attribute.x\n      );\n      newCellGroup.setAttributes({\n        x:\n          proxy.table.getColsWidth(proxy.table.rowHeaderLevelCount, range.start.col - 1) -\n          oldCellGroup.parent.attribute.x,\n        y: proxy.table.getRowsHeight(0, range.start.row - 1) - oldCellGroup.parent.attribute.y\n      });\n\n      oldCellGroup.parent.insertAfter(newCellGroup, oldCellGroup);\n      oldCellGroup.parent.removeChild(oldCellGroup);\n\n      oldCellGroup.needUpdate = false;\n      newCellGroup.needUpdate = false;\n\n      // update cache\n      if (proxy.cellCache.get(col)) {\n        proxy.cellCache.set(col, newCellGroup);\n      }\n    }\n  }\n}\n\nfunction clearHadMergedRow(rowStart: number, rowEnd: number, col: number, proxy: SceneProxy) {\n  for (let row = rowStart; row <= rowEnd; row++) {\n    const cellGroup = proxy.highPerformanceGetCell(col, row, true);\n    if (cellGroup.role !== 'shadow-cell' && cellGroup.role !== 'empty' && cellGroup.row !== rowStart) {\n      cellGroup.role = 'shadow-cell';\n      cellGroup.setAttributes({\n        width: 0,\n        height: proxy.table.getRowHeight(cellGroup.row),\n        y: proxy.table.getRowsHeight(proxy.table.frozenRowCount, cellGroup.row - 1),\n        x: 0\n      });\n      cellGroup.clear();\n    }\n  }\n}\n\nfunction clearHadMergedColumn(colStart: number, colEnd: number, row: number, proxy: SceneProxy) {\n  for (let col = colStart; col <= colEnd; col++) {\n    const cellGroup = proxy.highPerformanceGetCell(col, row, true);\n    if (cellGroup.role !== 'shadow-cell' && cellGroup.role !== 'empty' && cellGroup.col !== colStart) {\n      cellGroup.role = 'shadow-cell';\n      cellGroup.setAttributes({\n        width: 0,\n        height: proxy.table.getRowHeight(cellGroup.row),\n        y: proxy.table.getRowsHeight(0, cellGroup.row - 1),\n        x: 0\n      });\n      cellGroup.clear();\n    }\n  }\n}\n\nfunction checkHasColMerge(colStart: number, colEnd: number, row: number, proxy: SceneProxy) {\n  for (let col = colStart; col <= colEnd; col++) {\n    if (\n      proxy.highPerformanceGetCell(col, row, true).role !== 'shadow-cell' &&\n      proxy.highPerformanceGetCell(col, row, true).role !== 'empty'\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function getFirstChild(containerGroup: Group): Group {\n  let child = containerGroup.firstChild as Group;\n  while (child && child.type !== 'group') {\n    child = child._next as Group;\n  }\n  return child;\n}\n\nexport function getLastChild(containerGroup: Group): Group {\n  let child = containerGroup.lastChild as Group;\n  while (child && child.type !== 'group') {\n    child = child._prev as Group;\n  }\n  return child;\n}\n\nexport function getPrevGroup(group: Group): Group {\n  let child = group._prev as Group;\n  while (child && child.type !== 'group') {\n    child = child._prev as Group;\n  }\n  return child;\n}\n\nexport function getNextGroup(group: Group): Group {\n  let child = group._next as Group;\n  while (child && child.type !== 'group') {\n    child = child._next as Group;\n  }\n  return child;\n}\n"]}