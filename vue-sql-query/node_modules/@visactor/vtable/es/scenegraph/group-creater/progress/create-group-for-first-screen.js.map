{"version":3,"sources":["../src/scenegraph/group-creater/progress/create-group-for-first-screen.ts"],"names":[],"mappings":"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","file":"create-group-for-first-screen.js","sourcesContent":["import type { ListTable } from '../../../ListTable';\nimport { ListTableAPI } from '../../../ts-types';\nimport type { Group } from '../../graphic/group';\nimport { computeColsWidth } from '../../layout/compute-col-width';\nimport { computeRowsHeight } from '../../layout/compute-row-height';\nimport { createColGroup } from '../column';\nimport type { SceneProxy } from './proxy';\n\nexport function createGroupForFirstScreen(\n  cornerHeaderGroup: Group,\n  colHeaderGroup: Group,\n  rowHeaderGroup: Group,\n  rightFrozenGroup: Group,\n  bottomFrozenGroup: Group,\n  bodyGroup: Group,\n  xOrigin: number,\n  yOrigin: number,\n  proxy: SceneProxy\n) {\n  const { table } = proxy;\n  const { leftBottomCornerGroup, rightTopCornerGroup, rightBottomCornerGroup } = table.scenegraph;\n\n  // compute parameters\n  proxy.setParamsForRow();\n  proxy.setParamsForColumn();\n\n  let distCol;\n  let distRow;\n  let distColForCompute;\n  let distRowForCompute;\n  if (\n    table.widthMode === 'adaptive' ||\n    (table.options.autoWrapText &&\n      (table.heightMode === 'adaptive' || table.isAutoRowHeight(table.columnHeaderLevelCount)))\n  ) {\n    // distCol = table.colCount - 1;\n    // proxy.colEnd = distCol;\n\n    distColForCompute = table.colCount - 1;\n    distCol = Math.min(proxy.firstScreenColLimit - 1, table.colCount - 1);\n  } else {\n    distCol = Math.min(proxy.firstScreenColLimit - 1, table.colCount - 1);\n  }\n  if (table.heightMode === 'adaptive') {\n    // distRow = table.rowCount - 1;\n    // proxy.rowEnd = distRow;\n\n    distRowForCompute = table.rowCount - 1;\n    distRow = Math.min(proxy.firstScreenRowLimit - 1, table.rowCount - 1);\n  } else {\n    distRow = Math.min(proxy.firstScreenRowLimit - 1, table.rowCount - 1);\n  }\n  if (table.internalProps._widthResizedColMap.size === 0) {\n    // compute colums width in first screen\n    computeColsWidth(table, 0, distColForCompute ?? distCol);\n  }\n\n  if (table.internalProps._heightResizedRowMap.size === 0) {\n    // compute rows height in first screen\n    computeRowsHeight(\n      table,\n      0,\n      table.options.canvasHeight === 'auto' ? table.rowCount - 1 : distRowForCompute ?? distRow\n    ); //如果配置了 canvasHeight为 'auto'， 则一次性将所有行高都计算出来才能满足后续赋值表格高度的使用\n  }\n\n  if (distCol < table.colCount - table.rightFrozenColCount) {\n    // compute right frozen row height\n    if (table.colCount - table.rightFrozenColCount <= table.colCount - 1) {\n      computeColsWidth(table, table.colCount - table.rightFrozenColCount, table.colCount - 1);\n    }\n  }\n  if (distRow < table.rowCount - table.bottomFrozenRowCount) {\n    // compute bottom frozen row height\n    if (table.rowCount - table.bottomFrozenRowCount <= table.rowCount - 1) {\n      computeRowsHeight(table, table.rowCount - table.bottomFrozenRowCount, table.rowCount - 1);\n    }\n  }\n\n  // update colHeaderGroup rowHeaderGroup bodyGroup position\n  table.scenegraph.colHeaderGroup.setAttribute('x', table.getFrozenColsWidth());\n  table.scenegraph.rowHeaderGroup.setAttribute('y', table.getFrozenRowsHeight());\n  table.scenegraph.bottomFrozenGroup.setAttribute('x', table.getFrozenColsWidth());\n  table.scenegraph.rightFrozenGroup.setAttribute('y', table.getFrozenRowsHeight());\n  table.scenegraph.bodyGroup.setAttributes({\n    x: table.getFrozenColsWidth(),\n    y: table.getFrozenRowsHeight()\n  });\n\n  // create cornerHeaderGroup\n  createColGroup(\n    cornerHeaderGroup,\n    xOrigin,\n    yOrigin,\n    0, // colStart\n    table.frozenColCount - 1, // colEnd\n    0, // rowStart\n    table.frozenRowCount - 1, // rowEnd\n    table.isListTable() ? 'columnHeader' : 'cornerHeader', // CellType\n    table\n  );\n\n  // create colHeaderGroup\n  distCol - table.rightFrozenColCount >= table.frozenColCount &&\n    createColGroup(\n      colHeaderGroup,\n      xOrigin,\n      yOrigin,\n      table.frozenColCount, // colStart\n      // Math.min(proxy.firstScreenColLimit, table.colCount - 1 - table.rightFrozenColCount), // colEnd\n      distCol - table.rightFrozenColCount,\n      0, // rowStart\n      table.frozenRowCount - 1, // rowEnd\n      'columnHeader', // isHeader\n      table\n    );\n\n  // create rowHeaderGroup\n  if (table.frozenColCount > 0) {\n    if (table.leftRowSeriesNumberCount > 0) {\n      createColGroup(\n        rowHeaderGroup,\n        xOrigin,\n        yOrigin,\n        0, // colStart\n        table.leftRowSeriesNumberCount - 1, // colEnd\n        table.frozenRowCount, // rowStart\n        // Math.min(proxy.firstScreenRowLimit, table.rowCount - 1 - table.bottomFrozenRowCount), // rowEnd\n        distRow - table.bottomFrozenRowCount,\n        'rowHeader', // isHeader\n        table\n      );\n    }\n    if (table.frozenColCount > table.leftRowSeriesNumberCount) {\n      createColGroup(\n        rowHeaderGroup,\n        xOrigin,\n        yOrigin,\n        table.leftRowSeriesNumberCount, // colStart\n        Math.min(table.frozenColCount - 1, table.rowHeaderLevelCount + table.leftRowSeriesNumberCount - 1), // colEnd\n        table.frozenRowCount, // rowStart\n        // Math.min(proxy.firstScreenRowLimit, table.rowCount - 1 - table.bottomFrozenRowCount), // rowEnd\n        distRow - table.bottomFrozenRowCount,\n        'rowHeader', // isHeader\n        table\n      );\n    }\n    if (table.frozenColCount > table.rowHeaderLevelCount + table.leftRowSeriesNumberCount) {\n      createColGroup(\n        rowHeaderGroup,\n        xOrigin,\n        yOrigin,\n        table.rowHeaderLevelCount + table.leftRowSeriesNumberCount, // colStart\n        table.frozenColCount - 1, // colEnd\n        table.frozenRowCount, // rowStart\n        // Math.min(proxy.firstScreenRowLimit, table.rowCount - 1 - table.bottomFrozenRowCount), // rowEnd\n        distRow - table.bottomFrozenRowCount,\n        'body',\n        table\n      );\n    }\n  }\n\n  if (table.bottomFrozenRowCount > 0) {\n    // if (!table.isPivotChart()) {\n    // create left bottom frozen\n    // if (table.rowHeaderLevelCount > 0) {\n    //   createColGroup(\n    //     leftBottomCornerGroup,\n    //     xOrigin,\n    //     yOrigin,\n    //     0, // colStart\n    //     table.rowHeaderLevelCount - 1, // colEnd\n    //     table.rowCount - 1 - table.bottomFrozenRowCount + 1, // rowStart\n    //     table.rowCount - 1, // rowEnd\n    //     'rowHeader', // isHeader\n    //     table\n    //   );\n    // }\n    // if (table.frozenColCount > table.rowHeaderLevelCount) {\n    //   createColGroup(\n    //     leftBottomCornerGroup,\n    //     xOrigin,\n    //     yOrigin,\n    //     table.rowHeaderLevelCount, // colStart\n    //     table.frozenColCount - 1, // colEnd\n    //     table.rowCount - 1 - table.bottomFrozenRowCount + 1, // rowStart\n    //     table.rowCount - 1, // rowEnd\n    //     'body',\n    //     table\n    //   );\n    // }\n\n    if (table.frozenColCount > 0) {\n      if (table.leftRowSeriesNumberCount > 0) {\n        createColGroup(\n          leftBottomCornerGroup,\n          xOrigin,\n          yOrigin,\n          0, // colStart\n          table.leftRowSeriesNumberCount - 1, // colEnd\n          table.rowCount - 1 - table.bottomFrozenRowCount + 1, // rowStart\n          table.rowCount - 1, // rowEnd\n          'rowHeader', // isHeader\n          table\n        );\n      }\n      if (table.rowHeaderLevelCount > 0) {\n        createColGroup(\n          leftBottomCornerGroup,\n          xOrigin,\n          yOrigin,\n          table.leftRowSeriesNumberCount, // colStart\n          table.leftRowSeriesNumberCount + table.rowHeaderLevelCount - 1, // colEnd\n          table.rowCount - 1 - table.bottomFrozenRowCount + 1, // rowStart\n          table.rowCount - 1, // rowEnd\n          'rowHeader', // isHeader\n          table\n        );\n      }\n      if (table.frozenColCount > table.rowHeaderLevelCount + table.leftRowSeriesNumberCount) {\n        createColGroup(\n          leftBottomCornerGroup,\n          xOrigin,\n          yOrigin,\n          table.rowHeaderLevelCount + table.leftRowSeriesNumberCount, // colStart\n          table.frozenColCount - 1, // colEnd\n          table.rowCount - 1 - table.bottomFrozenRowCount + 1, // rowStart\n          table.rowCount - 1, // rowEnd\n          'body',\n          table\n        );\n      }\n    }\n    // }\n    // create bottomFrozenGroup\n    distCol - table.rightFrozenColCount >= table.frozenColCount &&\n      createColGroup(\n        bottomFrozenGroup,\n        xOrigin,\n        yOrigin,\n        table.frozenColCount, // colStart\n        // Math.min(proxy.firstScreenColLimit, table.colCount - 1 - table.rightFrozenColCount), // colEnd\n        distCol - table.rightFrozenColCount,\n        table.rowCount - 1 - table.bottomFrozenRowCount + 1, // rowStart\n        table.rowCount - 1, // rowEnd\n        table.isPivotChart() ? 'rowHeader' : 'body', // isHeader\n        table\n      );\n  }\n\n  if (table.rightFrozenColCount > 0) {\n    // if (!table.isPivotChart()) {\n    // create right top frozen Group\n    createColGroup(\n      rightTopCornerGroup,\n      xOrigin,\n      yOrigin,\n      table.colCount - 1 - table.rightFrozenColCount + 1, // colStart\n      table.colCount - 1, // colEnd\n      0, // rowStart\n      table.frozenRowCount - 1, // rowEnd\n      'columnHeader', // isHeader\n      table\n    );\n    // }\n    // create rightFrozenGroup\n    createColGroup(\n      rightFrozenGroup,\n      xOrigin,\n      yOrigin,\n      table.colCount - 1 - table.rightFrozenColCount + 1, // colStart\n      table.colCount - 1, // colEnd\n      table.frozenRowCount, // rowStart\n      // Math.min(proxy.firstScreenRowLimit, table.rowCount - 1 - table.bottomFrozenRowCount), // rowEnd\n      distRow - table.bottomFrozenRowCount,\n      table.isPivotChart() ? 'rowHeader' : 'body', // isHeader\n      table\n    );\n  }\n\n  if (table.bottomFrozenRowCount > 0 && table.rightFrozenColCount > 0) {\n    // create right bottom frozen Group\n    createColGroup(\n      rightBottomCornerGroup,\n      xOrigin,\n      yOrigin,\n      table.colCount - 1 - table.rightFrozenColCount + 1, // colStart\n      table.colCount - 1, // colEnd\n      table.rowCount - 1 - table.bottomFrozenRowCount + 1, // rowStart\n      table.rowCount - 1, // rowEnd\n      'body', // isHeader\n      table\n    );\n  }\n\n  // create bodyGroup\n  distCol - table.rightFrozenColCount >= table.frozenColCount &&\n    createColGroup(\n      bodyGroup,\n      xOrigin,\n      yOrigin,\n      table.frozenColCount, // colStart\n      // Math.min(proxy.firstScreenColLimit, table.colCount - 1 - table.rightFrozenColCount), // colEnd\n      distCol - table.rightFrozenColCount,\n      table.frozenRowCount, // rowStart\n      // Math.min(proxy.firstScreenRowLimit, table.rowCount - 1 - table.bottomFrozenRowCount), // rowEnd\n      distRow - table.bottomFrozenRowCount,\n      'body', // isHeader\n      table\n    );\n\n  // update progress information\n  if (\n    !bodyGroup.firstChild &&\n    !colHeaderGroup.firstChild &&\n    !cornerHeaderGroup.firstChild &&\n    !rowHeaderGroup.firstChild\n  ) {\n    // 无数据\n    proxy.currentRow = proxy.totalRow;\n    proxy.rowEnd = proxy.currentRow;\n    proxy.rowUpdatePos = proxy.rowEnd + 1;\n    proxy.referenceRow = proxy.rowStart + Math.floor((proxy.rowEnd - proxy.rowStart) / 2);\n\n    proxy.currentCol = proxy.totalCol;\n    proxy.colEnd = proxy.currentCol;\n    proxy.colUpdatePos = proxy.colEnd + 1;\n    proxy.referenceCol = proxy.colStart + Math.floor((proxy.colEnd - proxy.colStart) / 2);\n  } else {\n    proxy.currentRow =\n      (bodyGroup.firstChild as Group)?.rowNumber ?? (rowHeaderGroup.firstChild as Group)?.rowNumber ?? proxy.totalRow;\n    proxy.rowEnd = proxy.currentRow;\n    proxy.rowUpdatePos = proxy.rowEnd + 1;\n    proxy.referenceRow = proxy.rowStart + Math.floor((proxy.rowEnd - proxy.rowStart) / 2);\n\n    proxy.currentCol =\n      (bodyGroup.lastChild as Group)?.col ??\n      (colHeaderGroup.lastChild as Group)?.col ??\n      (rowHeaderGroup.lastChild as Group)?.col ??\n      (cornerHeaderGroup.lastChild as Group)?.col ??\n      proxy.totalCol;\n    proxy.colEnd = proxy.currentCol;\n    proxy.colUpdatePos = proxy.colEnd + 1;\n    proxy.referenceCol = proxy.colStart + Math.floor((proxy.colEnd - proxy.colStart) / 2);\n\n    // 开始异步任务\n    proxy.progress();\n  }\n}\n"]}