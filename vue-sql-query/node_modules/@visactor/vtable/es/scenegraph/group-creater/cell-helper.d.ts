import type { IThemeSpec, Group as VGroup } from './../../vrender';
import type { CellRange, ColumnDefine, ColumnTypeOption } from '../../ts-types';
import type { Group } from '../graphic/group';
import type { BaseTableAPI } from '../../ts-types/base-table';
export declare function createCell(type: ColumnTypeOption, value: string, define: ColumnDefine, table: BaseTableAPI, col: number, row: number, colWidth: number, cellWidth: number, cellHeight: number, columnGroup: Group, y: number, padding: [number, number, number, number], textAlign: CanvasTextAlign, textBaseline: CanvasTextBaseline, mayHaveIcon: boolean, cellTheme: IThemeSpec, range: CellRange | undefined, customResult?: {
    elementsGroup?: VGroup;
    renderDefault: boolean;
}): Group;
export declare function updateCell(col: number, row: number, table: BaseTableAPI, addNew?: boolean, isShadow?: boolean, forceFastUpdate?: boolean): Group;
export declare function dealWithMergeCellSize(range: CellRange, cellWidth: number, cellHeight: number, padding: [number, number, number, number], textAlign: CanvasTextAlign, textBaseline: CanvasTextBaseline, table: BaseTableAPI): void;
export declare function dealWithMergeCellSizeForShadow(range: CellRange, cellWidth: number, cellHeight: number, padding: [number, number, number, number], textAlign: CanvasTextAlign, textBaseline: CanvasTextBaseline, table: BaseTableAPI, cellGroup: Group): void;
export declare function resizeCellGroup(cellGroup: Group, rangeWidth: number, rangeHeight: number, range: CellRange, table: BaseTableAPI): {
    widthChange: boolean;
    heightChange: boolean;
};
export declare function getCustomCellMergeCustom(col: number, row: number, cellGroup: Group, table: BaseTableAPI): CellRange;
