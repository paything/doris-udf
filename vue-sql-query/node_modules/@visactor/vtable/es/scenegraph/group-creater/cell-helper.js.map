{"version":3,"sources":["../src/scenegraph/group-creater/cell-helper.ts"],"names":[],"mappings":"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","file":"cell-helper.js","sourcesContent":["import type { Cursor, IGraphic, IThemeSpec, Rect, Group as VGroup } from './../../vrender';\nimport type { ProgressBarStyle } from '../../body-helper/style/ProgressBarStyle';\nimport { regUrl } from '../../tools/global';\nimport type {\n  CellRange,\n  ChartColumnDefine,\n  CheckboxColumnDefine,\n  ColumnDefine,\n  ColumnTypeOption,\n  ImageColumnDefine,\n  ProgressbarColumnDefine,\n  IRowSeriesNumber,\n  TextColumnDefine,\n  RadioColumnDefine,\n  ListTableConstructorOptions,\n  SwitchColumnDefine,\n  ButtonColumnDefine\n} from '../../ts-types';\nimport { dealWithCustom } from '../component/custom';\nimport type { Group } from '../graphic/group';\nimport { getProp } from '../utils/get-prop';\nimport type { CreateChartCellGroup } from './cell-type/chart-cell';\nimport type { CreateImageCellGroup } from './cell-type/image-cell';\nimport type { CreateProgressBarCell } from './cell-type/progress-bar-cell';\nimport type { CreateSparkLineCellGroup } from './cell-type/spark-line-cell';\nimport type { CreateTextCellGroup } from './cell-type/text-cell';\nimport type { CreateVideoCellGroup } from './cell-type/video-cell';\nimport type { BaseTableAPI, HeaderData } from '../../ts-types/base-table';\nimport { getCellCornerRadius, getStyleTheme } from '../../core/tableHelper';\nimport { getOrApply, isPromise } from '../../tools/helper';\nimport { dealPromiseData } from '../utils/deal-promise-data';\nimport type { ICartesianAxis } from '../../components/axis/axis';\nimport { Factory } from '../../core/factory';\nimport type { CreateCheckboxCellGroup } from './cell-type/checkbox-cell';\nimport { getHierarchyOffset } from '../utils/get-hierarchy-offset';\nimport { getQuadProps } from '../utils/padding';\nimport { updateCellContentHeight, updateCellContentWidth } from '../utils/text-icon-layout';\nimport { isArray, isNumber, isValid } from '@visactor/vutils';\nimport { breakString } from '../utils/break-string';\nimport type { CreateRadioCellGroup } from './cell-type/radio-cell';\nimport { onBeforeAttributeUpdateForInvertHighlight } from '../../plugins/invert-highlight';\nimport { getCellBorderStrokeWidth } from '../utils/cell-border-stroke-width';\nimport type { CreateSwitchCellGroup } from './cell-type/switch-cell';\nimport type { CreateButtonCellGroup } from './cell-type/button-cell';\n\nexport function createCell(\n  type: ColumnTypeOption,\n  value: string,\n  define: ColumnDefine,\n  table: BaseTableAPI,\n  col: number,\n  row: number,\n  colWidth: number,\n  cellWidth: number,\n  cellHeight: number,\n  columnGroup: Group,\n  y: number,\n  padding: [number, number, number, number],\n  textAlign: CanvasTextAlign,\n  textBaseline: CanvasTextBaseline,\n  mayHaveIcon: boolean,\n  cellTheme: IThemeSpec,\n  range: CellRange | undefined,\n  customResult?: {\n    elementsGroup?: VGroup;\n    renderDefault: boolean;\n  }\n): Group {\n  let isAsync = false;\n  let cellGroup: Group;\n  if (isPromise(value)) {\n    if (table.scenegraph.highPerformanceGetCell(col, row).role !== 'cell') {\n      // avoid nouse async create cell\n      return cellGroup;\n    }\n    value = table.getCellValue(col, row);\n    isAsync = true;\n  }\n  // let bgColorFunc: Function;\n  // // 判断是否有mapping  遍历dataset中mappingRules\n  // if ((table.internalProps as PivotTableProtected)?.dataConfig?.mappingRules && !table.isHeader(col, row)) {\n  //   (table.internalProps as PivotTableProtected)?.dataConfig?.mappingRules?.forEach(\n  //     (mappingRule: MappingRule, i: number) => {\n  //       if (\n  //         mappingRule.bgColor &&\n  //         (table.internalProps.layoutMap as PivotHeaderLayoutMap).getIndicatorKey(col, row) ===\n  //           mappingRule.bgColor.indicatorKey\n  //       ) {\n  //         bgColorFunc = mappingRule.bgColor.mapping;\n  //       }\n  //     }\n  //   );\n  // }\n\n  // customMerge&customLayout cell as text cell\n  if (type === 'text' || type === 'link' || customResult) {\n    if (type === 'link') {\n      //如果是超链接 颜色按照linkColor绘制 TODO：放到方法_getCellStyle中\n      // const columnDefine = table.getHeaderDefine(col, row);\n      const cellValue = value;\n      const cellOriginValue = table.getCellOriginValue(col, row);\n      const headerStyle = table._getCellStyle(col, row);\n\n      if (\n        type === 'link' &&\n        (('templateLink' in define && define.templateLink) ||\n          !(\n            'linkDetect' in define &&\n            getOrApply(define.linkDetect, {\n              col,\n              row,\n              table,\n              value: cellValue,\n              dataValue: cellOriginValue,\n              cellHeaderPaths: undefined\n            })\n          ) ||\n          regUrl.test(cellValue))\n      ) {\n        if (cellTheme) {\n          cellTheme.text.fill = getProp('linkColor', headerStyle, col, row, table);\n          (cellTheme as any).group.cursor = 'pointer';\n        } else {\n          cellTheme = {\n            text: {\n              fill: getProp('linkColor', headerStyle, col, row, table)\n            },\n            group: {\n              cursor: 'pointer' as Cursor\n            }\n          };\n        }\n      }\n    }\n    // 判断是否有mapping  遍历dataset中mappingRules 但这里还需要根据fieldName来判断\n    // if (bgColorFunc) {\n    //   const cellValue = table.getCellOriginValue(col, row);\n    //   const bgColor = bgColorFunc(table, cellValue);\n    //   if (bgColor) {\n    //     if (cellTheme) {\n    //       cellTheme.group.fill = bgColor;\n    //     } else {\n    //       cellTheme = {\n    //         group: {\n    //           fill: bgColor\n    //         }\n    //       };\n    //     }\n    //   }\n    // }\n\n    const { customElementsGroup, renderDefault } = _generateCustomElementsGroup(\n      table,\n      define,\n      col,\n      row,\n      cellWidth,\n      cellHeight,\n      padding,\n      range,\n      customResult\n    );\n\n    const createTextCellGroup = Factory.getFunction('createTextCellGroup') as CreateTextCellGroup;\n    cellGroup = createTextCellGroup(\n      table,\n      value,\n      columnGroup,\n      0,\n      y,\n      col,\n      row,\n      colWidth,\n      cellWidth,\n      cellHeight,\n      padding,\n      textAlign,\n      textBaseline,\n      mayHaveIcon,\n      customElementsGroup,\n      renderDefault,\n      cellTheme,\n      range,\n      isAsync\n    );\n\n    const axisConfig = table.internalProps.layoutMap.getAxisConfigInPivotChart(col, row);\n    if (axisConfig) {\n      const CartesianAxis: ICartesianAxis = Factory.getComponent('axis');\n      const axis = new CartesianAxis(\n        axisConfig,\n        cellGroup.attribute.width,\n        cellGroup.attribute.height,\n        axisConfig.__vtablePadding ?? padding,\n        table\n      );\n      cellGroup.clear();\n      cellGroup.appendChild(axis.component);\n      axis.overlap();\n    } else if (table.internalProps.layoutMap.isEmpty(col, row)) {\n      cellGroup.setAttributes({\n        fill: false,\n        stroke: false\n      });\n      cellGroup.clear();\n    } else if (table.internalProps.layoutMap.isAxisCell(col, row)) {\n      cellGroup.clear();\n    }\n  } else if (type === 'image') {\n    // 创建图片单元格\n    const createImageCellGroup = Factory.getFunction('createImageCellGroup') as CreateImageCellGroup;\n    cellGroup = createImageCellGroup(\n      columnGroup,\n      0,\n      y,\n      col,\n      row,\n      cellWidth,\n      cellHeight,\n      (define as ImageColumnDefine).keepAspectRatio,\n      (define as ImageColumnDefine).imageAutoSizing,\n      padding,\n      textAlign,\n      textBaseline,\n      mayHaveIcon,\n      table,\n      cellTheme,\n      range,\n      isAsync\n    );\n  } else if (type === 'video') {\n    // 创建视频单元格\n    const createVideoCellGroup = Factory.getFunction('createVideoCellGroup') as CreateVideoCellGroup;\n    cellGroup = createVideoCellGroup(\n      columnGroup,\n      0,\n      y,\n      col,\n      row,\n      cellWidth,\n      cellHeight,\n      (define as ImageColumnDefine).keepAspectRatio,\n      (define as ImageColumnDefine).imageAutoSizing,\n      padding,\n      textAlign,\n      textBaseline,\n      mayHaveIcon,\n      table,\n      cellTheme,\n      range,\n      isAsync\n    );\n  } else if (type === 'chart') {\n    const chartInstance = table.internalProps.layoutMap.getChartInstance(col, row);\n    const createChartCellGroup = Factory.getFunction('createChartCellGroup') as CreateChartCellGroup;\n    cellGroup = createChartCellGroup(\n      null,\n      columnGroup,\n      0,\n      y,\n      col,\n      row,\n      cellWidth,\n      cellHeight,\n      padding,\n      value,\n      (define as ChartColumnDefine).chartModule,\n      table.internalProps.layoutMap.getChartSpec(col, row),\n      chartInstance,\n      table.internalProps.layoutMap.getChartDataId(col, row) ?? 'data',\n      table,\n      cellTheme,\n      table.internalProps.layoutMap.isShareChartSpec(col, row),\n      isAsync,\n      table.internalProps.layoutMap.isNoChartDataRenderNothing(col, row)\n    );\n  } else if (type === 'progressbar') {\n    const { customElementsGroup, renderDefault } = _generateCustomElementsGroup(\n      table,\n      define,\n      col,\n      row,\n      cellWidth,\n      cellHeight,\n      padding,\n      range,\n      customResult\n    );\n    const style = table._getCellStyle(col, row) as ProgressBarStyle;\n    const dataValue = table.getCellOriginValue(col, row);\n    // 创建基础文字单元格\n    const createTextCellGroup = Factory.getFunction('createTextCellGroup') as CreateTextCellGroup;\n    cellGroup = createTextCellGroup(\n      table,\n      value,\n      columnGroup,\n      0,\n      y,\n      col,\n      row,\n      colWidth,\n      cellWidth,\n      cellHeight,\n      padding,\n      textAlign,\n      textBaseline,\n      false,\n      customElementsGroup,\n      renderDefault,\n      cellTheme,\n      range,\n      isAsync\n    );\n\n    // 创建bar group\n    const createProgressBarCell = Factory.getFunction('createProgressBarCell') as CreateProgressBarCell;\n    const progressBarGroup = createProgressBarCell(\n      define as ProgressbarColumnDefine,\n      style,\n      colWidth,\n      value,\n      dataValue,\n      col,\n      row,\n      padding,\n      table,\n      range\n    );\n    // 进度图插入到文字前，绘制在文字下\n    if (cellGroup.firstChild) {\n      cellGroup.insertBefore(progressBarGroup, cellGroup.firstChild);\n    } else {\n      cellGroup.appendChild(progressBarGroup);\n    }\n  } else if (type === 'sparkline') {\n    const createSparkLineCellGroup = Factory.getFunction('createSparkLineCellGroup') as CreateSparkLineCellGroup;\n    cellGroup = createSparkLineCellGroup(\n      null,\n      columnGroup,\n      0,\n      y,\n      col,\n      row,\n      cellWidth,\n      cellHeight,\n      padding,\n      table,\n      cellTheme,\n      isAsync\n    );\n  } else if (type === 'checkbox') {\n    const isAggregation =\n      'isAggregation' in table.internalProps.layoutMap && table.internalProps.layoutMap.isAggregation(col, row);\n    const isSeriesNumber = table.internalProps.layoutMap.isSeriesNumber(col, row);\n    if (isAggregation && isSeriesNumber) {\n      const createTextCellGroup = Factory.getFunction('createTextCellGroup') as CreateTextCellGroup;\n      cellGroup = createTextCellGroup(\n        table,\n        value,\n        columnGroup,\n        0,\n        y,\n        col,\n        row,\n        colWidth,\n        cellWidth,\n        cellHeight,\n        padding,\n        textAlign,\n        textBaseline,\n        false,\n        undefined,\n        true,\n        cellTheme,\n        range,\n        isAsync\n      );\n    } else {\n      const createCheckboxCellGroup = Factory.getFunction('createCheckboxCellGroup') as CreateCheckboxCellGroup;\n      cellGroup = createCheckboxCellGroup(\n        null,\n        columnGroup,\n        0,\n        y,\n        col,\n        row,\n        colWidth,\n        cellWidth,\n        cellHeight,\n        padding,\n        textAlign,\n        textBaseline,\n        mayHaveIcon,\n        table,\n        cellTheme,\n        define as CheckboxColumnDefine,\n        range,\n        isAsync\n      );\n    }\n  } else if (type === 'radio') {\n    const createRadioCellGroup = Factory.getFunction('createRadioCellGroup') as CreateRadioCellGroup;\n    cellGroup = createRadioCellGroup(\n      null,\n      columnGroup,\n      0,\n      y,\n      col,\n      row,\n      colWidth,\n      cellWidth,\n      cellHeight,\n      padding,\n      textAlign,\n      textBaseline,\n      table,\n      cellTheme,\n      define as RadioColumnDefine,\n      range\n    );\n  } else if (type === 'switch') {\n    const createSwitchCellGroup = Factory.getFunction('createSwitchCellGroup') as CreateSwitchCellGroup;\n    cellGroup = createSwitchCellGroup(\n      null,\n      columnGroup,\n      0,\n      y,\n      col,\n      row,\n      colWidth,\n      cellWidth,\n      cellHeight,\n      padding,\n      textAlign,\n      textBaseline,\n      mayHaveIcon,\n      table,\n      cellTheme,\n      define as SwitchColumnDefine,\n      range,\n      isAsync\n    );\n  } else if (type === 'button') {\n    const createButtonCellGroup = Factory.getFunction('createButtonCellGroup') as CreateButtonCellGroup;\n    cellGroup = createButtonCellGroup(\n      null,\n      columnGroup,\n      0,\n      y,\n      col,\n      row,\n      colWidth,\n      cellWidth,\n      cellHeight,\n      padding,\n      textAlign,\n      textBaseline,\n      mayHaveIcon,\n      table,\n      cellTheme,\n      define as ButtonColumnDefine,\n      range,\n      isAsync\n    );\n  }\n\n  cellGroup.onBeforeAttributeUpdate = onBeforeAttributeUpdateForInvertHighlight as any;\n  return cellGroup;\n}\n\nfunction _generateCustomElementsGroup(\n  table: BaseTableAPI,\n  define: ColumnDefine,\n  col: number,\n  row: number,\n  cellWidth: number,\n  cellHeight: number,\n  padding: [number, number, number, number],\n  range: CellRange | undefined,\n  customResult?: {\n    elementsGroup?: VGroup;\n    renderDefault: boolean;\n  }\n) {\n  let customElementsGroup;\n  let renderDefault = true;\n  if (customResult) {\n    // custom merge custom render\n    customElementsGroup = customResult.elementsGroup;\n    renderDefault = customResult.renderDefault;\n  } else if (range?.isCustom && !table.isCornerHeader(col, row)) {\n    // 判断不是角头单元格，来兼容corner中设置的customLayout\n    // custom merge && no custom render\n    // do not use column custom render\n  } else {\n    let customRender;\n    let customLayout;\n    const cellLocation = table.getCellLocation(col, row);\n    if (cellLocation !== 'body') {\n      customRender = define?.headerCustomRender;\n      customLayout = define?.headerCustomLayout;\n    } else {\n      customRender = define?.customRender || table.customRender;\n      customLayout = define?.customLayout;\n    }\n    if (customLayout || customRender) {\n      const customResult = dealWithCustom(\n        customLayout,\n        customRender,\n        col,\n        row,\n        cellWidth,\n        cellHeight,\n        false,\n        table.isAutoRowHeight(row),\n        padding,\n        range,\n        table\n      );\n      customElementsGroup = customResult.elementsGroup;\n      renderDefault = customResult.renderDefault;\n    }\n  }\n  return {\n    customElementsGroup,\n    renderDefault\n  };\n}\n\nexport function updateCell(\n  col: number,\n  row: number,\n  table: BaseTableAPI,\n  addNew?: boolean,\n  isShadow?: boolean,\n  forceFastUpdate?: boolean\n) {\n  // const oldCellGroup = table.scenegraph.getCell(col, row, true);\n  const oldCellGroup = table.scenegraph.highPerformanceGetCell(col, row, true);\n\n  if (oldCellGroup.role !== 'cell' && !addNew) {\n    return undefined;\n  }\n\n  const cellLocation = table.getCellLocation(col, row);\n  let value = table.getCellValue(col, row);\n\n  let isMerge;\n  let range;\n  let customStyle;\n  let customResult;\n  let isCustomMerge = false;\n  if (table.internalProps.customMergeCell) {\n    const customMerge = table.getCustomMerge(col, row);\n    if (customMerge) {\n      const {\n        range: customMergeRange,\n        text: customMergeText,\n        style: customMergeStyle,\n        customLayout,\n        customRender\n      } = customMerge;\n      range = customMergeRange;\n      isMerge = range.start.col !== range.end.col || range.start.row !== range.end.row;\n      value = customMergeText;\n      customStyle = customMergeStyle;\n      // if (customStyle) {\n      //   cellTheme = getStyleTheme(customStyle, table, range.start.col, range.start.row, getProp).theme;\n      //   cellTheme.group.cornerRadius = getCellCornerRadius(col, row, table);\n      // }\n\n      if (customLayout || customRender) {\n        customResult = dealWithCustom(\n          customLayout,\n          customRender,\n          customMergeRange.start.col,\n          customMergeRange.start.row,\n          table.getColsWidth(customMergeRange.start.col, customMergeRange.end.col),\n          table.getRowsHeight(customMergeRange.start.row, customMergeRange.end.row),\n          false,\n          table.isAutoRowHeight(row),\n          [0, 0, 0, 0],\n          range,\n          table\n        );\n      }\n\n      isCustomMerge = true;\n    }\n  }\n\n  // const define = cellLocation !== 'body' ? table.getHeaderDefine(col, row) : table.getBodyColumnDefine(col, row);\n  let colForDefine = col;\n  let rowForDefine = row;\n  if (range) {\n    colForDefine = range.start.col;\n    rowForDefine = range.start.row;\n  }\n  const define: TextColumnDefine = (\n    cellLocation !== 'body'\n      ? table.getHeaderDefine(colForDefine, rowForDefine)\n      : table.getBodyColumnDefine(colForDefine, rowForDefine)\n  ) as any;\n\n  let mayHaveIcon =\n    cellLocation !== 'body'\n      ? true\n      : (define as IRowSeriesNumber)?.dragOrder || !!define?.icon || !!(define as ColumnDefine)?.tree;\n\n  if (\n    !range &&\n    (table.internalProps.enableTreeNodeMerge || cellLocation !== 'body' || (define as TextColumnDefine)?.mergeCell)\n  ) {\n    // 只有表头或者column配置合并单元格后再进行信息获取\n    range = table.getCellRange(col, row);\n    isMerge = range.start.col !== range.end.col || range.start.row !== range.end.row;\n  }\n  let isVtableMerge = false;\n  if (table.internalProps.enableTreeNodeMerge && isMerge) {\n    const rawRecord = table.getCellRawRecord(range.start.col, range.start.row);\n    const { vtableMergeName, vtableMerge } = rawRecord ?? {};\n\n    isVtableMerge = vtableMerge;\n    if (vtableMerge) {\n      mayHaveIcon = true;\n      if ((table.options as ListTableConstructorOptions).groupTitleCustomLayout) {\n        customResult = dealWithCustom(\n          (table.options as ListTableConstructorOptions).groupTitleCustomLayout,\n          undefined,\n          range.start.col,\n          range.start.row,\n          table.getColsWidth(range.start.col, range.end.col),\n          table.getRowsHeight(range.start.row, range.end.row),\n          false,\n          table.isAutoRowHeight(row),\n          [0, 0, 0, 0],\n          range,\n          table\n        );\n      }\n      if ((table.options as ListTableConstructorOptions).groupTitleFieldFormat) {\n        value = (table.options as ListTableConstructorOptions).groupTitleFieldFormat(rawRecord, col, row, table);\n      } else if (vtableMergeName) {\n        value = vtableMergeName;\n      }\n    }\n  }\n\n  const cellStyle = customStyle || table._getCellStyle(range ? range.start.col : col, range ? range.start.row : row);\n  const autoWrapText = cellStyle.autoWrapText ?? table.internalProps.autoWrapText;\n  const cellTheme = getStyleTheme(\n    cellStyle,\n    table,\n    isMerge ? range.start.col : col,\n    isMerge ? range.start.row : row,\n    getProp\n  ).theme;\n\n  cellTheme.group.cornerRadius = getCellCornerRadius(col, row, table);\n\n  // fast method for text\n  if (\n    !addNew &&\n    !isMerge &&\n    !(define?.customLayout || define?.customRender || define?.headerCustomLayout || define?.headerCustomRender) &&\n    (forceFastUpdate || canUseFastUpdate(col, row, oldCellGroup, autoWrapText, mayHaveIcon, table))\n  ) {\n    // update group\n    const cellWidth = table.getColWidth(col);\n    const cellHeight = table.getRowHeight(row);\n    const strokeArrayWidth = getCellBorderStrokeWidth(col, row, cellTheme, table);\n\n    oldCellGroup.setAttributes({\n      width: cellWidth,\n      height: cellHeight,\n      // 背景相关，cell背景由cellGroup绘制\n      lineWidth: cellTheme?.group?.lineWidth ?? undefined,\n      fill: cellTheme?.group?.fill ?? undefined,\n      stroke: cellTheme?.group?.stroke ?? undefined,\n      strokeArrayWidth: strokeArrayWidth ?? undefined,\n      strokeArrayColor: (cellTheme?.group as any)?.strokeArrayColor ?? undefined,\n      cursor: (cellTheme?.group as any)?.cursor ?? undefined,\n      cornerRadius: cellTheme?.group?.cornerRadius ?? 0,\n      lineDash: cellTheme?.group?.lineDash ?? undefined,\n\n      y: table.scenegraph.getCellGroupY(row)\n    } as any);\n\n    oldCellGroup.forEachChildren((child: IGraphic) => {\n      child.setAttributes({\n        dx: 0,\n        dy: 0\n      });\n    });\n\n    // update text\n    const textMark = oldCellGroup.getChildByName('text');\n    if (forceFastUpdate && textMark) {\n      const attribute = {\n        textBaseline: 'top'\n      };\n      textMark.setAttributes(cellTheme.text ? (Object.assign({}, cellTheme.text, attribute) as any) : attribute);\n    } else if (textMark) {\n      const text = table.getCellValue(col, row);\n      const { text: textArr, moreThanMaxCharacters } = breakString(text, table);\n\n      const hierarchyOffset = getHierarchyOffset(col, row, table);\n      const lineClamp = cellStyle.lineClamp;\n      const padding = getQuadProps(getProp('padding', cellStyle, col, row, table)) ?? [0, 0, 0, 0];\n\n      const textAlign = cellTheme.text.textAlign;\n      let x = 0;\n      if (textAlign === 'center') {\n        x = padding[3] + (cellWidth - (padding[1] + padding[3])) / 2;\n      } else if (textAlign === 'right') {\n        x = padding[3] + cellWidth - (padding[1] + padding[3]);\n      } else {\n        x = padding[3];\n      }\n\n      const attribute = {\n        text: textArr.length === 1 && !autoWrapText ? textArr[0] : textArr, // 单行(no-autoWrapText)为字符串，多行(autoWrapText)为字符串数组\n        moreThanMaxCharacters,\n        maxLineWidth: cellWidth - (padding[1] + padding[3] + hierarchyOffset),\n        // fill: true,\n        // textAlign: 'left',\n        textBaseline: 'top',\n        autoWrapText,\n        lineClamp,\n        wordBreak: 'break-word',\n        // widthLimit: autoColWidth ? -1 : colWidth - (padding[1] + padding[3]),\n        heightLimit: cellHeight - Math.floor(padding[0] + padding[2]),\n        pickable: false,\n        dx: textAlign === 'left' ? hierarchyOffset : 0,\n        x\n      };\n      // const oldText = textMark.attribute.text;\n      textMark.setAttributes(cellTheme.text ? (Object.assign({}, cellTheme.text, attribute) as any) : attribute);\n      if (textMark.attribute.text) {\n        const textBaseline = cellTheme.text.textBaseline;\n        const height = cellHeight - (padding[0] + padding[2]);\n        let y = 0;\n        if (textBaseline === 'middle') {\n          y = padding[0] + (height - textMark.AABBBounds.height()) / 2;\n        } else if (textBaseline === 'bottom') {\n          y = padding[0] + height - textMark.AABBBounds.height();\n        } else {\n          y = padding[0];\n        }\n        textMark.setAttributes({\n          y\n        });\n      }\n    }\n    return oldCellGroup;\n  }\n\n  if (!addNew && oldCellGroup.role === 'empty') {\n    return undefined;\n  }\n\n  const type =\n    isVtableMerge || isCustomMerge\n      ? 'text'\n      : table.isHeader(col, row)\n      ? (table._getHeaderLayoutMap(col, row) as HeaderData).headerType ?? 'text'\n      : table.getBodyColumnType(col, row) ?? 'text';\n\n  const padding = cellTheme._vtable.padding;\n  const textAlign = cellTheme.text.textAlign;\n  const textBaseline = cellTheme.text.textBaseline;\n\n  let newCellGroup;\n  // let bgColorFunc: Function;\n  // 判断是否有mapping  遍历dataset中mappingRules\n  // if ((table.internalProps as PivotTableProtected)?.dataConfig?.mappingRules && !table.isHeader(col, row)) {\n  //   (table.internalProps as PivotTableProtected)?.dataConfig?.mappingRules?.forEach(\n  //     (mappingRule: MappingRule, i: number) => {\n  //       if (\n  //         mappingRule.bgColor &&\n  //         (table.internalProps.layoutMap as PivotHeaderLayoutMap).getIndicatorKey(col, row) ===\n  //           mappingRule.bgColor.indicatorKey\n  //       ) {\n  //         bgColorFunc = mappingRule.bgColor.mapping;\n  //       }\n  //     }\n  //   );\n  // }\n\n  let cellWidth;\n  let cellHeight;\n  if (range) {\n    cellWidth = table.getColsWidth(range.start.col, range.end.col);\n    cellHeight = table.getRowsHeight(range.start.row, range.end.row);\n  } else {\n    cellWidth = table.getColWidth(col);\n    cellHeight = table.getRowHeight(row);\n  }\n\n  // deal with promise data\n  if (isPromise(value)) {\n    // clear cell content sync\n    oldCellGroup.removeAllChild();\n\n    // update cell content async\n    dealPromiseData(\n      value,\n      table,\n      callUpdateCellContentForPromiseValue.bind(null, {\n        type,\n        value,\n        define,\n        table,\n        col,\n        row,\n        // bgColorFunc,\n        cellWidth,\n        cellHeight,\n        oldCellGroup,\n        padding,\n        textAlign,\n        textBaseline,\n        mayHaveIcon,\n        addNew,\n        range,\n        customResult,\n        customStyle\n      })\n    );\n  } else {\n    newCellGroup = updateCellContent(\n      type,\n      value,\n      define as ColumnDefine,\n      table,\n      col,\n      row,\n      // bgColorFunc,\n      cellWidth,\n      cellHeight,\n      oldCellGroup,\n      padding,\n      textAlign,\n      textBaseline,\n      mayHaveIcon,\n      addNew,\n      cellTheme,\n      range,\n      customResult\n    );\n  }\n\n  if (isMerge) {\n    // const rangeHeight = table.getRowHeight(row);\n    // const rangeWidth = table.getColWidth(col);\n\n    const { width: contentWidth } = newCellGroup.attribute;\n    const { height: contentHeight } = newCellGroup.attribute;\n    newCellGroup.contentWidth = contentWidth;\n    newCellGroup.contentHeight = contentHeight;\n\n    if (isShadow) {\n      dealWithMergeCellSizeForShadow(\n        range,\n        cellWidth,\n        cellHeight,\n        padding,\n        textAlign,\n        textBaseline,\n        table,\n        newCellGroup\n      );\n    } else {\n      dealWithMergeCellSize(range, cellWidth, cellHeight, padding, textAlign, textBaseline, table);\n    }\n  }\n\n  return newCellGroup;\n}\n\nfunction updateCellContent(\n  type: ColumnTypeOption,\n  value: string,\n  define: ColumnDefine,\n  table: BaseTableAPI,\n  col: number,\n  row: number,\n  // bgColorFunc: Function,\n  cellWidth: number,\n  cellHeight: number,\n  oldCellGroup: Group,\n  padding: [number, number, number, number],\n  textAlign: CanvasTextAlign,\n  textBaseline: CanvasTextBaseline,\n  mayHaveIcon: boolean,\n  addNew: boolean,\n  cellTheme: IThemeSpec,\n  range: CellRange | undefined,\n  customResult?: {\n    elementsGroup?: VGroup;\n    renderDefault: boolean;\n  }\n) {\n  if (isPromise(value)) {\n    value = table.getCellValue(col, row);\n  }\n  //解决报错 getCellByCache递归调用 死循环问题\n  if (!addNew && (oldCellGroup.row !== row || oldCellGroup.col !== col)) {\n    return null;\n  }\n  if (!addNew && oldCellGroup.parent) {\n    // clear react container\n    if (table.reactCustomLayout) {\n      const reactGroup = oldCellGroup.getChildByName('custom-container');\n      if (reactGroup) {\n        const { col, row } = reactGroup;\n        if (isNumber(col) && isNumber(row)) {\n          table.reactCustomLayout.removeCustomCell(col, row);\n        }\n      }\n    }\n  }\n  const newCellGroup = createCell(\n    type,\n    value,\n    define,\n    table,\n    col,\n    row,\n    table.getColWidth(col),\n    cellWidth,\n    cellHeight,\n    // oldCellGroup.parent,\n    addNew ? table.scenegraph.getColGroup(col) : oldCellGroup.parent,\n    // oldCellGroup.attribute.y,\n    addNew ? 0 : table.scenegraph.getCellGroupY(row), // y\n    padding,\n    textAlign,\n    textBaseline,\n    mayHaveIcon,\n    cellTheme,\n    range,\n    customResult\n  );\n  if (!addNew && oldCellGroup.parent) {\n    // update cell\n    oldCellGroup.parent.insertAfter(newCellGroup, oldCellGroup);\n    oldCellGroup.parent.removeChild(oldCellGroup);\n\n    // update cache\n    if (table.scenegraph?.proxy.cellCache.get(col)) {\n      table.scenegraph?.proxy.cellCache.set(col, newCellGroup);\n    }\n  }\n  return newCellGroup;\n}\n\nfunction canUseFastUpdate(\n  col: number,\n  row: number,\n  oldCellGroup: Group,\n  autoWrapText: boolean,\n  mayHaveIcon: boolean,\n  table: BaseTableAPI\n) {\n  // return false;\n  // const define = table.getBodyColumnDefine(col, row);\n  // const mayHaveIcon = !!define?.icon || !!(define as ColumnDefine)?.tree || (define as IRowSeriesNumber)?.dragOrder;\n  const cellType = table.getBodyColumnType(col, row);\n  const autoRowHeight = table.isAutoRowHeight(row);\n  const value = table.getCellValue(col, row);\n\n  if (\n    !table.isHeader(col, row) &&\n    oldCellGroup.role === 'cell' &&\n    cellType === 'text' &&\n    !autoWrapText &&\n    !autoRowHeight &&\n    !mayHaveIcon &&\n    oldCellGroup.firstChild?.type === 'text' && // judgement for none text\n    !isPromise(value)\n  ) {\n    return true;\n  }\n  return false;\n}\nfunction callUpdateCellContentForPromiseValue(updateCellArgs: any) {\n  const {\n    type,\n    value,\n    define,\n    table,\n    col,\n    row,\n    cellWidth,\n    cellHeight,\n    oldCellGroup,\n    padding,\n    textAlign,\n    textBaseline,\n    mayHaveIcon,\n    addNew,\n    range,\n    customResult,\n    customStyle\n  } = updateCellArgs;\n  const cellStyle = customStyle || table._getCellStyle(range ? range.start.col : col, range ? range.start.row : row);\n  const cellTheme = getStyleTheme(\n    cellStyle,\n    table,\n    range ? range.start.col : col,\n    range ? range.start.row : row,\n    getProp\n  ).theme;\n\n  cellTheme.group.cornerRadius = getCellCornerRadius(col, row, table);\n  updateCellContent(\n    type,\n    value,\n    define,\n    table,\n    col,\n    row,\n    // bgColorFunc,\n    cellWidth,\n    cellHeight,\n    oldCellGroup,\n    padding,\n    textAlign,\n    textBaseline,\n    mayHaveIcon,\n    addNew,\n    cellTheme,\n    range,\n    customResult\n  );\n}\nexport function dealWithMergeCellSize(\n  range: CellRange,\n  cellWidth: number,\n  cellHeight: number,\n  padding: [number, number, number, number],\n  textAlign: CanvasTextAlign,\n  textBaseline: CanvasTextBaseline,\n  table: BaseTableAPI\n) {\n  for (let col = range.start.col; col <= range.end.col; col++) {\n    for (let row = range.start.row; row <= range.end.row; row++) {\n      // const cellGroup = table.scenegraph.getCell(col, row, true);\n      const cellGroup = table.scenegraph.highPerformanceGetCell(col, row, true);\n\n      if (cellGroup.role !== 'cell') {\n        continue;\n      }\n\n      if (range.start.row !== range.end.row && cellGroup.contentHeight !== cellHeight) {\n        updateCellContentHeight(\n          cellGroup,\n          cellHeight,\n          cellHeight,\n          table.isAutoRowHeight(row),\n          padding,\n          textAlign,\n          textBaseline,\n          table\n          // 'middle'\n        );\n      }\n      if (range.start.col !== range.end.col && cellGroup.contentWidth !== cellWidth) {\n        updateCellContentWidth(\n          cellGroup,\n          cellWidth,\n          cellHeight,\n          0,\n          table.isAutoRowHeight(row),\n          padding,\n          textAlign,\n          textBaseline,\n          table.scenegraph\n        );\n      }\n\n      cellGroup.contentWidth = cellWidth;\n      cellGroup.contentHeight = cellHeight;\n\n      const rangeHeight = table.getRowHeight(row);\n      const rangeWidth = table.getColWidth(col);\n\n      resizeCellGroup(cellGroup, rangeWidth, rangeHeight, range, table);\n    }\n  }\n}\n\nexport function dealWithMergeCellSizeForShadow(\n  range: CellRange,\n  cellWidth: number,\n  cellHeight: number,\n  padding: [number, number, number, number],\n  textAlign: CanvasTextAlign,\n  textBaseline: CanvasTextBaseline,\n  table: BaseTableAPI,\n  cellGroup: Group\n) {\n  const { col, row } = cellGroup;\n  if (range.start.row !== range.end.row && cellGroup.contentHeight !== cellHeight) {\n    updateCellContentHeight(\n      cellGroup,\n      cellHeight,\n      cellHeight,\n      table.isAutoRowHeight(row),\n      padding,\n      textAlign,\n      textBaseline,\n      table\n      // 'middle'\n    );\n  }\n  if (range.start.col !== range.end.col && cellGroup.contentWidth !== cellWidth) {\n    updateCellContentWidth(\n      cellGroup,\n      cellWidth,\n      cellHeight,\n      0,\n      table.isAutoRowHeight(row),\n      padding,\n      textAlign,\n      textBaseline,\n      table.scenegraph\n    );\n  }\n\n  cellGroup.contentWidth = cellWidth;\n  cellGroup.contentHeight = cellHeight;\n\n  const rangeHeight = table.getRowHeight(row);\n  const rangeWidth = table.getColWidth(col);\n\n  resizeCellGroup(cellGroup, rangeWidth, rangeHeight, range, table);\n}\n\nexport function resizeCellGroup(\n  cellGroup: Group,\n  rangeWidth: number,\n  rangeHeight: number,\n  range: CellRange,\n  table: BaseTableAPI\n) {\n  const { col, row } = cellGroup;\n  const dx = -table.getColsWidth(range.start.col, col - 1);\n  let dy = 0;\n  if (table.options.customConfig?._disableColumnAndRowSizeRound) {\n    // temply fix for fs merge position; bugserverId: 673af513801d3000b3cd9e8f\n    for (let i = range.start.row; i <= row - 1; i++) {\n      dy -= table.getRowHeight(i);\n    }\n  } else {\n    dy = -table.getRowsHeight(range.start.row, row - 1);\n  }\n\n  cellGroup.forEachChildren((child: IGraphic) => {\n    // 利用_dx hack解决掉 合并单元格的范围内的格子依次执行该方法 如果挨个调用updateCell的话 执行多次后dx累计问题\n    if (typeof child._dx === 'number') {\n      child.skipMergeUpdate = true;\n      child.setAttributes({\n        dx: (child._dx ?? 0) + dx\n      });\n      child.skipMergeUpdate = false;\n    } else {\n      child.skipMergeUpdate = true;\n      child._dx = child.attribute.dx ?? 0;\n      child.setAttributes({\n        dx: (child.attribute.dx ?? 0) + dx\n      });\n      child.skipMergeUpdate = false;\n    }\n\n    if (typeof child._dy === 'number') {\n      child.skipMergeUpdate = true;\n      child.setAttributes({\n        dy: (child._dy ?? 0) + dy\n      });\n      child.skipMergeUpdate = false;\n    } else {\n      child._dy = child.attribute.dy ?? 0;\n      child.skipMergeUpdate = true;\n      child.setAttributes({\n        dy: (child.attribute.dy ?? 0) + dy\n      });\n      child.skipMergeUpdate = false;\n    }\n  });\n\n  const lineWidth = (cellGroup.attribute as any).strokeArrayWidth ?? cellGroup.attribute.lineWidth;\n  const isLineWidthArray = isArray(lineWidth);\n  const newLineWidth = [0, 0, 0, 0];\n\n  if (col === range.start.col) {\n    newLineWidth[3] = isLineWidthArray ? lineWidth[3] : lineWidth;\n  }\n  if (row === range.start.row) {\n    newLineWidth[0] = isLineWidthArray ? lineWidth[0] : lineWidth;\n  }\n  if (col === range.end.col) {\n    newLineWidth[1] = isLineWidthArray ? lineWidth[1] : lineWidth;\n  }\n  if (row === range.end.row) {\n    newLineWidth[2] = isLineWidthArray ? lineWidth[2] : lineWidth;\n  }\n\n  const widthChange = rangeWidth !== cellGroup.attribute.width;\n  const heightChange = rangeHeight !== cellGroup.attribute.height;\n\n  (cellGroup as any).skipMergeUpdate = true;\n  cellGroup.setAttributes({\n    width: rangeWidth,\n    height: rangeHeight,\n    strokeArrayWidth: newLineWidth\n  } as any);\n  (cellGroup as any).skipMergeUpdate = false;\n\n  cellGroup.mergeStartCol = range.start.col;\n  cellGroup.mergeStartRow = range.start.row;\n  cellGroup.mergeEndCol = range.end.col;\n  cellGroup.mergeEndRow = range.end.row;\n\n  return {\n    widthChange,\n    heightChange\n  };\n}\n\nexport function getCustomCellMergeCustom(col: number, row: number, cellGroup: Group, table: BaseTableAPI) {\n  if (table.internalProps.customMergeCell) {\n    const customMerge = table.getCustomMerge(col, row);\n    if (customMerge) {\n      const {\n        range: customMergeRange,\n        text: customMergeText,\n        style: customMergeStyle,\n        customLayout: customMergeLayout,\n        customRender: customMergeRender\n      } = customMerge;\n\n      if (customMergeLayout || customMergeRender) {\n        const customResult = dealWithCustom(\n          customMergeLayout,\n          customMergeRender,\n          customMergeRange.start.col,\n          customMergeRange.start.row,\n          table.getColsWidth(customMergeRange.start.col, customMergeRange.end.col),\n          table.getRowsHeight(customMergeRange.start.row, customMergeRange.end.row),\n          false,\n          table.isAutoRowHeight(row),\n          [0, 0, 0, 0],\n          customMergeRange,\n          table\n        );\n\n        const customElementsGroup = customResult.elementsGroup;\n\n        if (cellGroup.childrenCount > 0 && customElementsGroup) {\n          cellGroup.insertBefore(customElementsGroup, cellGroup.firstChild);\n        } else if (customElementsGroup) {\n          cellGroup.appendChild(customElementsGroup);\n        }\n\n        const rangeHeight = table.getRowHeight(row);\n        const rangeWidth = table.getColWidth(col);\n\n        const { width: contentWidth } = cellGroup.attribute;\n        const { height: contentHeight } = cellGroup.attribute;\n        cellGroup.contentWidth = contentWidth;\n        cellGroup.contentHeight = contentHeight;\n\n        resizeCellGroup(cellGroup, rangeWidth, rangeHeight, customMergeRange, table);\n\n        return customMergeRange;\n      }\n    }\n  }\n\n  return undefined;\n}\n"]}