{"version":3,"sources":["../src/scenegraph/group-creater/column-helper.ts"],"names":[],"mappings":"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","file":"column-helper.js","sourcesContent":["/* eslint-disable no-undef */\nimport type { IThemeSpec } from './../../vrender';\nimport type {\n  CellLocation,\n  CellRange,\n  ColumnDefine,\n  IRowSeriesNumber,\n  ListTableConstructorOptions,\n  TextColumnDefine\n} from '../../ts-types';\nimport { Group } from '../graphic/group';\nimport { getProp, getRawProp } from '../utils/get-prop';\nimport type { MergeMap } from '../scenegraph';\nimport { createCell, dealWithMergeCellSize, resizeCellGroup } from './cell-helper';\nimport type { BaseTableAPI, HeaderData } from '../../ts-types/base-table';\nimport { getCellCornerRadius, getStyleTheme } from '../../core/tableHelper';\nimport { isPromise } from '../../tools/helper';\nimport { dealPromiseData } from '../utils/deal-promise-data';\nimport { dealWithCustom } from '../component/custom';\n/**\n * 创建复合列 同一列支持创建不同类型单元格\n * @param columnGroup 列Group\n * @param col\n * @param colWidth 配置列宽\n * @param rowStart\n * @param rowEnd\n * @param mergeMap merge单元格信息\n * @param defaultRowHeight\n * @param table\n * @param cellLocation\n * @param rowLimit\n * @param customRender\n * @param customLayout\n * @returns\n */\nexport function createComplexColumn(\n  columnGroup: Group,\n  col: number,\n  colWidth: number,\n  rowStart: number,\n  rowEnd: number,\n  mergeMap: MergeMap,\n  defaultRowHeight: number | number[],\n  table: BaseTableAPI,\n  // cellLocation: CellLocation,\n  rowLimit?: number\n) {\n  let padding;\n  let textAlign;\n  let textBaseline;\n  /** useColumnTheme 判断是否可以使用columnTheme */\n  // insert cell into column group top\n  let y = 0;\n  // if (columnGroup.colHeight) {\n  //   // insert cell into column group bottom\n  //   y = columnGroup.colHeight;\n  // }\n  if (columnGroup.lastChild && (columnGroup.lastChild as Group).row === rowStart - 1) {\n    y = (columnGroup.lastChild as Group).attribute.y + (columnGroup.lastChild as Group).attribute.height;\n  } else if (columnGroup.colHeight) {\n    y = columnGroup.colHeight;\n  }\n\n  for (let j = rowStart; j <= rowEnd; j++) {\n    const row = j;\n    let cellLocation = table.getCellLocation(col, row);\n    let value = table.getCellValue(col, row);\n\n    // 处理单元格合并\n    let cellWidth = colWidth;\n    // let cellHeight = table.internalProps.autoRowHeight ? 0 : table.getRowHeight(row);\n    let cellHeight = table.getRowHeight(row);\n    let range;\n    let isMerge;\n    let customStyle;\n    let customResult;\n    let isCustomMerge = false;\n    if (table.internalProps.customMergeCell) {\n      const customMerge = table.getCustomMerge(col, row);\n      if (customMerge) {\n        const {\n          range: customMergeRange,\n          text: customMergeText,\n          style: customMergeStyle,\n          customLayout,\n          customRender\n        } = customMerge;\n        range = customMergeRange;\n        isMerge = range.start.col !== range.end.col || range.start.row !== range.end.row;\n        if (isMerge) {\n          const needUpdateRange = rowStart > range.start.row;\n          const mergeSize = dealMerge(range, mergeMap, table, needUpdateRange);\n          cellWidth = mergeSize.cellWidth;\n          cellHeight = mergeSize.cellHeight;\n        }\n        value = customMergeText;\n        customStyle = customMergeStyle;\n\n        if (customLayout || customRender) {\n          customResult = dealWithCustom(\n            customLayout,\n            customRender,\n            customMergeRange.start.col,\n            customMergeRange.start.row,\n            table.getColsWidth(customMergeRange.start.col, customMergeRange.end.col),\n            table.getRowsHeight(customMergeRange.start.row, customMergeRange.end.row),\n            false,\n            table.isAutoRowHeight(row),\n            [0, 0, 0, 0],\n            range,\n            table\n          );\n        }\n\n        isCustomMerge = true;\n      }\n    }\n\n    let colForDefine = col;\n    let rowForDefine = row;\n    if (range) {\n      colForDefine = range.start.col;\n      rowForDefine = range.start.row;\n    }\n\n    // adjust cellLocation for top frozen row\n    if (\n      !table.isPivotTable() &&\n      (cellLocation === 'columnHeader' || cellLocation === 'cornerHeader') &&\n      row >= table.columnHeaderLevelCount\n    ) {\n      cellLocation = 'body';\n    }\n    let define;\n    if (!table.isPivotTable() && table.isSeriesNumberInBody(col, row)) {\n      // 序号列 传入的cellLocation是'rowHeader'(不清楚为什么)。这里处理下获取到的define值\n      define = table.getBodyColumnDefine(colForDefine, rowForDefine);\n    } else {\n      define =\n        cellLocation !== 'body'\n          ? table.getHeaderDefine(colForDefine, rowForDefine)\n          : table.getBodyColumnDefine(colForDefine, rowForDefine);\n    }\n    const isAggregation =\n      'isAggregation' in table.internalProps.layoutMap && table.internalProps.layoutMap.isAggregation(col, row);\n    const isSeriesNumber = table.internalProps.layoutMap.isSeriesNumber(col, row);\n\n    let mayHaveIcon =\n      cellLocation !== 'body'\n        ? true\n        : ((define as IRowSeriesNumber)?.dragOrder || !!define?.icon || !!(define as ColumnDefine)?.tree) &&\n          !(isAggregation && isSeriesNumber);\n    if (\n      !range &&\n      (table.internalProps.enableTreeNodeMerge || cellLocation !== 'body' || (define as TextColumnDefine)?.mergeCell)\n    ) {\n      // 只有表头或者column配置合并单元格后再进行信息获取\n      range = table.getCellRange(col, row);\n      isMerge = range.start.col !== range.end.col || range.start.row !== range.end.row;\n      // 所有Merge单元格，只保留左上角一个真实的单元格，其他使用空Group占位\n      if (isMerge) {\n        const needUpdateRange = rowStart > range.start.row;\n        const mergeSize = dealMerge(range, mergeMap, table, needUpdateRange);\n        cellWidth = mergeSize.cellWidth;\n        cellHeight = mergeSize.cellHeight;\n      }\n    }\n    let isVtableMerge = false;\n    if (table.internalProps.enableTreeNodeMerge && isMerge) {\n      const rawRecord = table.getCellRawRecord(range.start.col, range.start.row);\n      const { vtableMergeName, vtableMerge } = rawRecord ?? {};\n\n      isVtableMerge = vtableMerge;\n      if (vtableMerge) {\n        mayHaveIcon = true;\n        if ((table.options as ListTableConstructorOptions).groupTitleCustomLayout) {\n          customResult = dealWithCustom(\n            (table.options as ListTableConstructorOptions).groupTitleCustomLayout,\n            undefined,\n            range.start.col,\n            range.start.row,\n            table.getColsWidth(range.start.col, range.end.col),\n            table.getRowsHeight(range.start.row, range.end.row),\n            false,\n            table.isAutoRowHeight(row),\n            [0, 0, 0, 0],\n            range,\n            table\n          );\n        }\n        if ((table.options as ListTableConstructorOptions).groupTitleFieldFormat) {\n          value = (table.options as ListTableConstructorOptions).groupTitleFieldFormat(rawRecord, col, row, table);\n        } else if (vtableMergeName) {\n          value = vtableMergeName;\n        }\n      }\n    }\n\n    const type =\n      isVtableMerge || isCustomMerge\n        ? 'text'\n        : (table.isHeader(col, row)\n            ? (table._getHeaderLayoutMap(col, row) as HeaderData).headerType ?? 'text'\n            : table.getBodyColumnType(col, row)) ?? 'text';\n\n    // deal with promise data\n    if (isPromise(value)) {\n      createEmptyCellGroup(col, row, 0, y, cellWidth, cellHeight, columnGroup);\n      dealPromiseData(\n        value,\n        table,\n        callCreateCellForPromiseValue.bind(null, {\n          type,\n          value,\n          define,\n          table,\n          col,\n          row,\n          colWidth,\n          cellWidth,\n          cellHeight,\n          columnGroup,\n          y,\n          customStyle,\n          mayHaveIcon,\n          cellLocation,\n          range,\n          customResult,\n          defaultRowHeight\n        })\n      );\n      columnGroup.updateColumnRowNumber(row);\n      const height = table.getRowHeight(row);\n      columnGroup.updateColumnHeight(height);\n      y += height;\n    } else {\n      const cellStyle =\n        customStyle || table._getCellStyle(range ? range.start.col : col, range ? range.start.row : row);\n      const cellTheme = getStyleTheme(\n        cellStyle,\n        table,\n        range ? range.start.col : col,\n        range ? range.start.row : row,\n        getProp\n      ).theme;\n      cellTheme.group.cornerRadius = getCellCornerRadius(col, row, table);\n      cellTheme.group.width = colWidth;\n      cellTheme.group.height = Array.isArray(defaultRowHeight) ? defaultRowHeight[row] : defaultRowHeight;\n      if (cellTheme._vtable.padding) {\n        padding = cellTheme._vtable.padding;\n      }\n      if (cellTheme.text.textAlign) {\n        textAlign = cellTheme.text.textAlign;\n      }\n      if (cellTheme.text.textBaseline) {\n        textBaseline = cellTheme.text.textBaseline;\n      }\n\n      // enable clip body\n      if (cellLocation !== 'body' && !cellTheme.group.fill) {\n        cellTheme.group.fill = '#fff';\n      }\n      const cellGroup = createCell(\n        type,\n        value,\n        define as ColumnDefine,\n        table,\n        col,\n        row,\n        colWidth,\n        cellWidth,\n        cellHeight,\n        columnGroup,\n        y,\n        padding,\n        textAlign,\n        textBaseline,\n        mayHaveIcon,\n        cellTheme,\n        range,\n        customResult\n      );\n      columnGroup.updateColumnRowNumber(row);\n      if (isMerge) {\n        const rangeHeight = table.getRowHeight(row);\n        const rangeWidth = table.getColWidth(col);\n\n        const { width: contentWidth } = cellGroup.attribute;\n        const { height: contentHeight } = cellGroup.attribute;\n        cellGroup.contentWidth = contentWidth;\n        cellGroup.contentHeight = contentHeight;\n\n        // resizeCellGroup(cellGroup, rangeWidth, rangeHeight, range, table);\n        dealWithMergeCellSize(range, contentWidth, contentHeight, padding, textAlign, textBaseline, table);\n        columnGroup.updateColumnHeight(rangeHeight);\n        y += rangeHeight;\n      } else {\n        // columnGroup.updateColumnHeight(cellGroup.attribute.height);\n        // y += cellGroup.attribute.height;\n        columnGroup.updateColumnHeight(cellHeight);\n        y += cellHeight;\n      }\n    }\n    if (rowLimit && row > rowLimit) {\n      break;\n    }\n  }\n\n  columnGroup.setAttribute('width', colWidth);\n  return {\n    width: colWidth,\n    height: y\n  };\n}\n\n/**\n * 获取列分组主题\n * @param col 列索引\n * @param colWidth 列宽\n * @param table 表格实例\n * @returns 列分组主题\n */\nexport function getColumnGroupTheme(\n  col: number,\n  colWidth: number,\n  table: BaseTableAPI\n): { theme: IThemeSpec & { _vtable: any }; hasFunctionPros: boolean } {\n  const style = table._getCellStyle(col, table.columnHeaderLevelCount); // to be fixed\n  const { theme: columnTheme, hasFunctionPros } = getStyleTheme(\n    style,\n    table,\n    col,\n    table.columnHeaderLevelCount,\n    getRawProp\n  );\n\n  // get column header style\n  columnTheme.group.width = colWidth;\n  columnTheme.group.height = 0;\n  return { theme: columnTheme, hasFunctionPros };\n}\nfunction callCreateCellForPromiseValue(createCellArgs: any) {\n  let padding;\n  let textAlign;\n  let textBaseline;\n  const {\n    type,\n    value,\n    define,\n    table,\n    col,\n    row,\n    colWidth,\n    cellWidth,\n    cellHeight,\n    columnGroup,\n    y,\n    cellLocation,\n    mayHaveIcon,\n    customStyle,\n    range,\n    customResult,\n    defaultRowHeight\n  } = createCellArgs;\n  const cellStyle = customStyle || table._getCellStyle(range ? range.start.col : col, range ? range.start.row : row);\n  const cellTheme = getStyleTheme(\n    cellStyle,\n    table,\n    range ? range.start.col : col,\n    range ? range.start.row : row,\n    getProp\n  ).theme;\n  cellTheme.group.cornerRadius = getCellCornerRadius(col, row, table);\n  cellTheme.group.width = colWidth;\n  cellTheme.group.height = Array.isArray(defaultRowHeight) ? defaultRowHeight[row] : defaultRowHeight;\n  if (cellTheme._vtable.padding) {\n    padding = cellTheme._vtable.padding;\n  }\n  if (cellTheme.text.textAlign) {\n    textAlign = cellTheme.text.textAlign;\n  }\n  if (cellTheme.text.textBaseline) {\n    textBaseline = cellTheme.text.textBaseline;\n  }\n\n  // enable clip body\n  if (cellLocation !== 'body' && !cellTheme.group.fill) {\n    cellTheme.group.fill = '#fff';\n  }\n  createCell(\n    type,\n    value,\n    define,\n    table,\n    col,\n    row,\n    colWidth,\n    cellWidth,\n    cellHeight,\n    columnGroup,\n    y,\n    padding,\n    textAlign,\n    textBaseline,\n    mayHaveIcon,\n    cellTheme,\n    range,\n    customResult\n  );\n}\nfunction dealMerge(range: CellRange, mergeMap: MergeMap, table: BaseTableAPI, forceUpdate: boolean) {\n  let cellWidth = 0;\n  let cellHeight = 0;\n  const mergeResult = mergeMap.get(`${range.start.col},${range.start.row};${range.end.col},${range.end.row}`);\n  if (!mergeResult || forceUpdate) {\n    for (let col = range.start.col; col <= range.end.col; col++) {\n      cellWidth += table.getColWidth(col);\n    }\n\n    // let cellHeight = 0;\n    for (let i = range.start.row; i <= range.end.row; i++) {\n      cellHeight += table.getRowHeight(i);\n    }\n\n    mergeMap.set(`${range.start.col},${range.start.row};${range.end.col},${range.end.row}`, {\n      cellWidth,\n      cellHeight\n    });\n  } else {\n    cellWidth = mergeResult.cellWidth;\n    cellHeight = mergeResult.cellHeight;\n  }\n  return {\n    cellWidth,\n    cellHeight\n  };\n}\n\nfunction createEmptyCellGroup(\n  col: number,\n  row: number,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  columnGroup: Group\n) {\n  const cellGroup = new Group({\n    x,\n    y,\n    width,\n    height\n  });\n  cellGroup.role = 'cell';\n  cellGroup.col = col;\n  cellGroup.row = row;\n  columnGroup.addChild(cellGroup);\n}\n"]}