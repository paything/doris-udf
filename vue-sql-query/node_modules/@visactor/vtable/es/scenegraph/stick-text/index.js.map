{"version":3,"sources":["../src/scenegraph/stick-text/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import type { IGraphic, Image, Text } from './../../vrender';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport type { Group } from '../graphic/group';\nimport type { PivotHeaderLayoutMap } from '../../layout/pivot-header-layout';\nimport type { ITextStyleOption, StickCell } from '../../ts-types';\nimport { isNumber, min } from '@visactor/vutils';\nimport { getCellMergeRange } from '../../tools/merge-range';\n\nexport function resetTextStick(table: BaseTableAPI) {\n  // reset\n  const { changedCells } = table.internalProps.stick; // changedCells only cache one time\n  changedCells.forEach((cellPos: StickCell) => {\n    const cellGroup = table.scenegraph.getCell(cellPos.col, cellPos.row);\n    cellGroup.forEachChildren((child: IGraphic) => {\n      child.setAttributes({\n        dx: cellPos.dx,\n        dy: cellPos.dy\n      });\n    });\n  });\n  changedCells.clear();\n  return changedCells;\n}\n\nexport function handleTextStick(table: BaseTableAPI) {\n  const changedCells = resetTextStick(table);\n\n  const { scrollTop, scrollLeft, frozenRowCount, frozenColCount } = table;\n  const frozenRowsHeight = table.getFrozenRowsHeight();\n  const frozenColsWidth = table.getFrozenColsWidth();\n  // 计算非冻结\n  const { row: rowTop } = table.getRowAt(scrollTop + frozenRowsHeight + 1);\n  const { col: colLeft } = table.getColAt(scrollLeft + frozenColsWidth + 1);\n  const rowStart = Math.max(rowTop, table.frozenRowCount);\n  const colStart = Math.max(colLeft, table.frozenColCount);\n  const rowEnd =\n    table.getAllRowsHeight() > table.tableNoFrameHeight\n      ? table.getRowAt(scrollTop + table.tableNoFrameHeight - table.getBottomFrozenRowsHeight() - 1).row\n      : table.rowCount - table.bottomFrozenRowCount - 1;\n  const colEnd =\n    table.getAllColsWidth() > table.tableNoFrameWidth\n      ? table.getColAt(scrollLeft + table.tableNoFrameWidth - table.getRightFrozenColsWidth() - 1).col\n      : table.colCount - table.rightFrozenColCount - 1;\n  if (colEnd < 0 || rowEnd < 0) {\n    return;\n  }\n\n  // column header\n  for (let row = 0; row < frozenRowCount; row++) {\n    if (colEnd < colStart) {\n      break;\n    }\n    [colStart, colEnd].forEach((col: number) => {\n      const style = table._getCellStyle(col, row);\n      if (style?.textStick && style?.textStick !== 'vertical') {\n        const cellGroup = table.scenegraph.getCell(col, row);\n        // adjust cell Horizontal\n        adjustCellContentHorizontalLayout(\n          cellGroup,\n          frozenColsWidth + table.tableX,\n          table.tableNoFrameWidth - table.getRightFrozenColsWidth() + table.tableX,\n          changedCells,\n          style?.textStickBaseOnAlign,\n          table\n        );\n      }\n    });\n  }\n\n  // row header\n  for (let col = 0; col < frozenColCount; col++) {\n    if (rowEnd < rowStart) {\n      break;\n    }\n    [rowStart, rowEnd].forEach((row: number) => {\n      const style = table._getCellStyle(col, row);\n      if (\n        style?.textStick &&\n        // (table.internalProps.layoutMap as PivotHeaderLayoutMap).rowHierarchyType !== 'tree' &&\n        style?.textStick !== 'horizontal'\n      ) {\n        const cellGroup = table.scenegraph.getCell(col, row);\n        // adjust cell vertical\n        adjustCellContentVerticalLayout(\n          cellGroup,\n          frozenRowsHeight + table.tableY,\n          table.tableNoFrameHeight - table.getBottomFrozenRowsHeight() + table.tableY,\n          changedCells,\n          style?.textStickBaseOnAlign,\n          table\n        );\n      }\n    });\n  }\n\n  // body\n  for (let col = colStart; col <= colEnd; col++) {\n    if (rowEnd < rowStart) {\n      break;\n    }\n    [rowStart, rowEnd].forEach((row: number) => {\n      const style = table._getCellStyle(col, row);\n      if (style?.textStick && style?.textStick !== 'horizontal') {\n        const cellGroup = table.scenegraph.getCell(col, row);\n        // adjust cell vertical\n        adjustCellContentVerticalLayout(\n          cellGroup,\n          frozenRowsHeight + table.tableY,\n          table.tableNoFrameHeight - table.getBottomFrozenRowsHeight() + table.tableY,\n          changedCells,\n          style?.textStickBaseOnAlign,\n          table\n        );\n      }\n    });\n  }\n  for (let row = rowStart; row <= rowEnd; row++) {\n    if (colEnd < colStart) {\n      break;\n    }\n    [colStart, colEnd].forEach((col: number) => {\n      const style = table._getCellStyle(col, row);\n      if (style?.textStick && style?.textStick !== 'vertical') {\n        const cellGroup = table.scenegraph.getCell(col, row);\n        // adjust cell Horizontal\n        adjustCellContentHorizontalLayout(\n          cellGroup,\n          frozenColsWidth + table.tableX,\n          table.tableNoFrameWidth - table.getRightFrozenColsWidth() + table.tableX,\n          changedCells,\n          style?.textStickBaseOnAlign,\n          table\n        );\n      }\n    });\n  }\n}\n\n/*\n * adjust cell content vertical layout\n * @param {Group} cellGroup\n * @param {number} scrollTop\n */\nfunction adjustCellContentVerticalLayout(\n  cellGroup: Group,\n  minTop: number,\n  maxTop: number,\n  changedCells: Map<string, StickCell>,\n  textStickBaseOnAlign: boolean | undefined,\n  table: BaseTableAPI\n) {\n  if (\n    isNumber(cellGroup.mergeStartCol) &&\n    isNumber(cellGroup.mergeStartRow) &&\n    isNumber(cellGroup.mergeEndCol) &&\n    isNumber(cellGroup.mergeEndRow)\n  ) {\n    const { colStart, colEnd, rowStart, rowEnd } = getCellMergeRange(cellGroup, table.scenegraph);\n    for (let col = colStart; col <= colEnd; col++) {\n      for (let row = rowStart; row <= rowEnd; row++) {\n        const singleCellGroup = table.scenegraph.getCell(col, row);\n        if (singleCellGroup.role !== 'cell') {\n          continue;\n        }\n        dealVertical(singleCellGroup, minTop, maxTop, changedCells, textStickBaseOnAlign);\n      }\n    }\n  } else {\n    dealVertical(cellGroup, minTop, maxTop, changedCells, textStickBaseOnAlign);\n  }\n}\n\nfunction dealVertical(\n  cellGroup: Group,\n  minTop: number,\n  maxTop: number,\n  changedCells: Map<string, StickCell>,\n  textStickBaseOnAlign: boolean | undefined\n) {\n  // get text element\n  const graphic =\n    (cellGroup.getChildByName('text', true) as Text) || (cellGroup.getChildByName('image', true) as Image);\n  if (!graphic) {\n    return;\n  }\n  if (graphic.type === 'image') {\n    const { image: url } = graphic.attribute;\n    if (!url || !graphic.resources) {\n      return;\n    }\n    const res = graphic.resources.get(url as any);\n    if (res.state !== 'success') {\n      return;\n    }\n  }\n\n  // const textBaseline = (graphic as any).attribute.textBaseline ?? (graphic as any).textBaseline ?? 'top';\n  const textBaseline = (graphic as any).textBaseline ?? 'top';\n\n  graphic.AABBBounds.width();\n  const textTop = graphic.globalAABBBounds.y1;\n  const textBottom = graphic.globalAABBBounds.y2;\n\n  if (textBaseline === 'middle' && textStickBaseOnAlign) {\n    const cellTop = cellGroup.globalAABBBounds.y1 + ((cellGroup.firstChild as IGraphic)?.attribute.dy ?? 0);\n    const cellBottom = cellTop + (cellGroup.contentHeight ?? cellGroup.attribute.height ?? 0);\n    if (cellTop < minTop || cellBottom > maxTop) {\n      const visibleCellTop = Math.max(cellTop, minTop);\n      const visibleCellBottom = Math.min(cellBottom, maxTop);\n      const delta =\n        graphic.globalTransMatrix.f - (visibleCellBottom + visibleCellTop) / 2 + graphic.AABBBounds.height() / 2;\n      !changedCells.has(`${cellGroup.col}-${cellGroup.row}`) &&\n        changedCells.set(`${cellGroup.col}-${cellGroup.row}`, {\n          col: cellGroup.col,\n          row: cellGroup.row,\n          dx: (cellGroup.firstChild as IGraphic)?.attribute.dx ?? 0,\n          dy: (cellGroup.firstChild as IGraphic)?.attribute.dy ?? 0\n        });\n      cellGroup.forEachChildren((child: IGraphic) => {\n        child.setAttribute('dy', (child.attribute.dy ?? 0) - delta + 2); // 2 is the buffer\n      });\n    }\n  } else if (textTop < minTop) {\n    const deltaHeight = textTop - minTop;\n    // text is out of view, move all elements down\n    !changedCells.has(`${cellGroup.col}-${cellGroup.row}`) &&\n      changedCells.set(`${cellGroup.col}-${cellGroup.row}`, {\n        col: cellGroup.col,\n        row: cellGroup.row,\n        dx: (cellGroup.firstChild as IGraphic)?.attribute.dx ?? 0,\n        dy: (cellGroup.firstChild as IGraphic)?.attribute.dy ?? 0\n      });\n    cellGroup.forEachChildren((child: IGraphic) => {\n      child.setAttribute('dy', (child.attribute.dy ?? 0) - deltaHeight + 2); // 2 is the buffer\n    });\n  } else if (textBottom > maxTop) {\n    const deltaHeight = textBottom - maxTop;\n    // text is out of view, move all elements down\n    !changedCells.has(`${cellGroup.col}-${cellGroup.row}`) &&\n      changedCells.set(`${cellGroup.col}-${cellGroup.row}`, {\n        col: cellGroup.col,\n        row: cellGroup.row,\n        dx: (cellGroup.firstChild as IGraphic)?.attribute.dx ?? 0,\n        dy: (cellGroup.firstChild as IGraphic)?.attribute.dy ?? 0\n      });\n    cellGroup.forEachChildren((child: IGraphic) => {\n      child.setAttribute('dy', (child.attribute.dy ?? 0) - deltaHeight); // 2 is the buffer\n    });\n  }\n}\n\n/*\n * adjust cell content horizontal layout\n * @param {Group} cellGroup\n * @param {number} scrollLeft\n */\nfunction adjustCellContentHorizontalLayout(\n  cellGroup: Group,\n  minLeft: number,\n  maxLeft: number,\n  changedCells: Map<string, StickCell>,\n  textStickBaseOnAlign: boolean | undefined,\n  table: BaseTableAPI\n) {\n  if (\n    isNumber(cellGroup.mergeStartCol) &&\n    isNumber(cellGroup.mergeStartRow) &&\n    isNumber(cellGroup.mergeEndCol) &&\n    isNumber(cellGroup.mergeEndRow)\n  ) {\n    const { colStart, colEnd, rowStart, rowEnd } = getCellMergeRange(cellGroup, table.scenegraph);\n    for (let col = colStart; col <= colEnd; col++) {\n      for (let row = rowStart; row <= rowEnd; row++) {\n        const singleCellGroup = table.scenegraph.getCell(col, row);\n        if (singleCellGroup.role !== 'cell') {\n          continue;\n        }\n        dealHorizontal(singleCellGroup, minLeft, maxLeft, changedCells, textStickBaseOnAlign);\n      }\n    }\n  } else {\n    dealHorizontal(cellGroup, minLeft, maxLeft, changedCells, textStickBaseOnAlign);\n  }\n}\n\nfunction dealHorizontal(\n  cellGroup: Group,\n  minLeft: number,\n  maxLeft: number,\n  changedCells: Map<string, StickCell>,\n  textStickBaseOnAlign: boolean | undefined\n) {\n  // get text element\n  // const text = cellGroup.getChildByName('text', true) as Text;\n  // if (!text) {\n  //   return;\n  // }\n\n  // get text element\n  const graphic =\n    (cellGroup.getChildByName('text', true) as Text) || (cellGroup.getChildByName('image', true) as Image);\n  if (!graphic) {\n    return;\n  }\n  if (graphic.type === 'image') {\n    const { image: url } = graphic.attribute;\n    if (!url || !graphic.resources) {\n      return;\n    }\n    const res = graphic.resources.get(url as any);\n    if (res.state !== 'success') {\n      return;\n    }\n  }\n  const textAlign = (graphic as any).attribute.textAlign ?? (graphic as any).textAlign ?? 'left';\n  graphic.AABBBounds.width();\n  const textLeft = graphic.globalAABBBounds.x1;\n  const textRight = graphic.globalAABBBounds.x2;\n  if (textAlign === 'center' && textStickBaseOnAlign) {\n    const cellLeft = cellGroup.globalAABBBounds.x1 + ((cellGroup.firstChild as IGraphic)?.attribute.dx ?? 0);\n    const cellRight = cellLeft + (cellGroup.contentWidth ?? cellGroup.attribute.width ?? 0);\n    if (cellLeft < minLeft || cellRight > maxLeft) {\n      const visibleCellLeft = Math.max(cellLeft, minLeft);\n      const visibleCellRight = Math.min(cellRight, maxLeft);\n      const delta = graphic.globalTransMatrix.e - (visibleCellRight + visibleCellLeft) / 2;\n      !changedCells.has(`${cellGroup.col}-${cellGroup.row}`) &&\n        changedCells.set(`${cellGroup.col}-${cellGroup.row}`, {\n          col: cellGroup.col,\n          row: cellGroup.row,\n          dx: (cellGroup.firstChild as IGraphic)?.attribute.dx ?? 0,\n          dy: (cellGroup.firstChild as IGraphic)?.attribute.dy ?? 0\n        });\n      cellGroup.forEachChildren((child: IGraphic) => {\n        child.setAttribute('dx', (child.attribute.dx ?? 0) - delta + 2); // 2 is the buffer\n      });\n    }\n  } else if (textLeft < minLeft) {\n    const deltaWidth = textLeft - minLeft;\n    // text is out of view, move all elements right\n    !changedCells.has(`${cellGroup.col}-${cellGroup.row}`) &&\n      changedCells.set(`${cellGroup.col}-${cellGroup.row}`, {\n        col: cellGroup.col,\n        row: cellGroup.row,\n        dx: (cellGroup.firstChild as IGraphic)?.attribute.dx ?? 0,\n        dy: (cellGroup.firstChild as IGraphic)?.attribute.dy ?? 0\n      });\n    cellGroup.forEachChildren((child: IGraphic) => {\n      child.setAttribute('dx', (child.attribute.dx ?? 0) - deltaWidth + 2); // 2 is the buffer\n    });\n  } else if (textRight > maxLeft) {\n    const deltaWidth = textRight - maxLeft;\n    // text is out of view, move all elements down\n    !changedCells.has(`${cellGroup.col}-${cellGroup.row}`) &&\n      changedCells.set(`${cellGroup.col}-${cellGroup.row}`, {\n        col: cellGroup.col,\n        row: cellGroup.row,\n        dx: (cellGroup.firstChild as IGraphic)?.attribute.dx ?? 0,\n        dy: (cellGroup.firstChild as IGraphic)?.attribute.dy ?? 0\n      });\n    cellGroup.forEachChildren((child: IGraphic) => {\n      child.setAttribute('dx', (child.attribute.dx ?? 0) - deltaWidth); // 2 is the buffer\n    });\n  }\n}\n\nexport function checkHaveTextStick(table: BaseTableAPI) {\n  const headerObjects = table.internalProps.layoutMap.headerObjects;\n  const columnObjects = table.internalProps.layoutMap.columnObjects;\n  for (let i = 0; i < headerObjects.length; i++) {\n    const header = headerObjects[i];\n    if (header && (header.style as ITextStyleOption)?.textStick) {\n      return true;\n    }\n  }\n  for (let i = 0; i < columnObjects.length; i++) {\n    const column = columnObjects[i];\n    if (column && (column.style as ITextStyleOption)?.textStick) {\n      return true;\n    }\n  }\n  const themeStick =\n    table.theme.headerStyle.textStick || table.theme.rowHeaderStyle.textStick || table.theme.bodyStyle.textStick;\n  if (themeStick) {\n    return true;\n  }\n  return false;\n}\n"]}