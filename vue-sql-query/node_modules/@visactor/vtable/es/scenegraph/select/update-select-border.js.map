{"version":3,"sources":["../src/scenegraph/select/update-select-border.ts"],"names":[],"mappings":"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","file":"update-select-border.js","sourcesContent":["import { type IRect } from './../../vrender';\nimport type { Scenegraph } from '../scenegraph';\nimport type { CellRange, CellSubLocation } from '../../ts-types';\nimport { getCellMergeInfo } from '../utils/get-cell-merge';\n\nexport function updateAllSelectComponent(scene: Scenegraph) {\n  scene.customSelectedRangeComponents.forEach((selectComp: { rect: IRect; role: CellSubLocation }, key: string) => {\n    updateComponent(selectComp, key, scene);\n  });\n\n  scene.selectingRangeComponents.forEach(\n    (selectComp: { rect: IRect; fillhandle?: IRect; role: CellSubLocation }, key: string) => {\n      updateComponent(selectComp, key, scene);\n    }\n  );\n  scene.selectedRangeComponents.forEach(\n    (selectComp: { rect: IRect; fillhandle?: IRect; role: CellSubLocation }, key: string) => {\n      updateComponent(selectComp, key, scene);\n    }\n  );\n}\n\nfunction updateComponent(\n  selectComp: { rect: IRect; fillhandle?: IRect; role: CellSubLocation },\n  key: string,\n  scene: Scenegraph\n) {\n  const table = scene.table;\n  const [startColStr, startRowStr, endColStr, endRowStr] = key.split('-');\n  const startCol = parseInt(startColStr, 10);\n  const startRow = parseInt(startRowStr, 10);\n  const endCol = parseInt(endColStr, 10);\n  const endRow = parseInt(endRowStr, 10);\n  // 下面为计算选中区域使用的行列值\n  let computeRectCellRangeStartCol = startCol;\n  let computeRectCellRangeStartRow = startRow;\n  let computeRectCellRangeEndCol = endCol;\n  let computeRectCellRangeEndRow = endRow;\n  // 下面逻辑根据选中区域所属表格部分 来判断可视区域内容的选中单元格范围\n  let visibleCellRange;\n  switch (selectComp.role) {\n    case 'rowHeader':\n      visibleCellRange = table.getBodyVisibleRowRange();\n      if (visibleCellRange) {\n        computeRectCellRangeStartRow = Math.max(startRow, visibleCellRange.rowStart - 1);\n        computeRectCellRangeEndRow = Math.min(endRow, visibleCellRange.rowEnd + 1);\n      }\n      break;\n    case 'columnHeader':\n      visibleCellRange = table.getBodyVisibleCellRange();\n      if (visibleCellRange) {\n        computeRectCellRangeStartCol = Math.max(startCol, visibleCellRange.colStart - 1);\n        computeRectCellRangeEndCol = Math.min(endCol, visibleCellRange.colEnd + 1);\n      }\n      break;\n    case 'cornerHeader':\n      break;\n    case 'bottomFrozen':\n      visibleCellRange = table.getBodyVisibleCellRange();\n      if (visibleCellRange) {\n        computeRectCellRangeStartCol = Math.max(startCol, visibleCellRange.colStart - 1);\n        computeRectCellRangeEndCol = Math.min(endCol, visibleCellRange.colEnd + 1);\n      }\n      break;\n    case 'rightFrozen':\n      visibleCellRange = table.getBodyVisibleCellRange();\n      if (visibleCellRange) {\n        computeRectCellRangeStartRow = Math.max(startRow, visibleCellRange.rowStart - 1);\n        computeRectCellRangeEndRow = Math.min(endRow, visibleCellRange.rowEnd + 1);\n      }\n      break;\n    case 'rightTopCorner':\n      break;\n    case 'leftBottomCorner':\n      break;\n    case 'rightBottomCorner':\n      break;\n    default:\n      visibleCellRange = table.getBodyVisibleCellRange();\n      if (visibleCellRange) {\n        computeRectCellRangeStartRow = Math.max(startRow, visibleCellRange.rowStart - 1);\n        computeRectCellRangeEndRow = Math.min(endRow, visibleCellRange.rowEnd + 1);\n        computeRectCellRangeStartCol = Math.max(startCol, visibleCellRange.colStart - 1);\n        computeRectCellRangeEndCol = Math.min(endCol, visibleCellRange.colEnd + 1);\n      }\n      break;\n  }\n  // const cellRange = table.getCellRange(startCol, startRow);\n  // const colsWidth = table.getColsWidth(cellRange.start.col, endCol);\n  // const rowsHeight = table.getRowsHeight(cellRange.start.row, endRow);\n  const colsWidth = table.getColsWidth(computeRectCellRangeStartCol, computeRectCellRangeEndCol);\n  const rowsHeight = table.getRowsHeight(computeRectCellRangeStartRow, computeRectCellRangeEndRow);\n  const firstCellBound = scene.highPerformanceGetCell(\n    computeRectCellRangeStartCol,\n    computeRectCellRangeStartRow\n  ).globalAABBBounds;\n\n  selectComp.rect.setAttributes({\n    x: firstCellBound.x1 - scene.tableGroup.attribute.x, //坐标xy在下面的逻辑中会做适当调整\n    y: firstCellBound.y1 - scene.tableGroup.attribute.y,\n    width: colsWidth,\n    height: rowsHeight,\n    visible: true\n  });\n  if (selectComp.fillhandle) {\n    const fillHandle = scene.table.options.excelOptions?.fillHandle;\n    let visible = true;\n    if (typeof fillHandle === 'function') {\n      visible = fillHandle({ selectRanges: scene.table.stateManager.select.ranges, table: scene.table });\n    }\n    //#region 计算填充柄小方块的位置\n\n    let lastCellBound;\n    //当选择区域没有到到最后一列时\n    if (computeRectCellRangeEndCol < table.colCount - 1) {\n      lastCellBound = scene.highPerformanceGetCell(\n        computeRectCellRangeEndCol,\n        computeRectCellRangeEndRow\n      ).globalAABBBounds;\n    } else {\n      // 最后一列\n      lastCellBound = scene.highPerformanceGetCell(\n        computeRectCellRangeStartCol - 1,\n        computeRectCellRangeEndRow\n      ).globalAABBBounds;\n    }\n    const handlerX = lastCellBound.x2 - scene.tableGroup.attribute.x - 3;\n    //当选择区域没有到到最后一行时\n    if (computeRectCellRangeEndRow < table.rowCount - 1) {\n      lastCellBound = scene.highPerformanceGetCell(\n        computeRectCellRangeEndCol,\n        computeRectCellRangeEndRow\n      ).globalAABBBounds;\n    } else {\n      // 最后一行\n      lastCellBound = scene.highPerformanceGetCell(\n        computeRectCellRangeEndCol,\n        computeRectCellRangeStartRow - 1\n      ).globalAABBBounds;\n    }\n    const handlerY = lastCellBound.y2 - scene.tableGroup.attribute.y - 3;\n    //#endregion\n\n    selectComp.fillhandle?.setAttributes({\n      x: handlerX, // 调整小方块位置\n      y: handlerY, // 调整小方块位置\n      width: 6,\n      height: 6,\n      visible\n    });\n  }\n\n  //#region 判断是不是按着表头部分的选中框 因为绘制层级的原因 线宽会被遮住一半，因此需要动态调整层级\n  let isNearRowHeader = table.frozenColCount ? startCol === table.frozenColCount : false;\n  if (!isNearRowHeader && table.frozenColCount && table.scrollLeft > 0 && startCol >= table.frozenColCount) {\n    const startColRelativePosition = table.getColsWidth(0, startCol - 1) - table.scrollLeft;\n    if (startColRelativePosition < table.getFrozenColsWidth()) {\n      isNearRowHeader = true;\n    }\n  }\n\n  let isNearRightRowHeader = table.rightFrozenColCount\n    ? table.rightFrozenColCount > 0 && endCol === table.colCount - table.rightFrozenColCount - 1\n    : false;\n  if (!isNearRightRowHeader && table.rightFrozenColCount && endCol < table.colCount - table.rightFrozenColCount) {\n    const endColRelativePosition = table.getColsWidth(0, endCol) - table.scrollLeft;\n    if (endColRelativePosition > table.tableNoFrameWidth - table.getRightFrozenColsWidth()) {\n      isNearRightRowHeader = true;\n    }\n  }\n\n  let isNearColHeader = table.frozenRowCount ? startRow === table.frozenRowCount : true;\n  if (!isNearColHeader && table.frozenRowCount && table.scrollTop > 0 && startRow >= table.frozenRowCount) {\n    const startRowRelativePosition = table.getRowsHeight(0, startRow - 1) - table.scrollTop;\n    if (startRowRelativePosition < table.getFrozenRowsHeight()) {\n      isNearColHeader = true;\n    }\n  }\n\n  let isNearBottomColHeader = table.bottomFrozenRowCount\n    ? endRow === table.rowCount - table.bottomFrozenRowCount - 1\n    : false;\n  if (!isNearBottomColHeader && table.bottomFrozenRowCount && endRow < table.rowCount - table.bottomFrozenRowCount) {\n    const endRowRelativePosition = table.getRowsHeight(0, endRow) - table.scrollTop;\n    if (endRowRelativePosition > table.tableNoFrameHeight - table.getBottomFrozenRowsHeight()) {\n      isNearBottomColHeader = true;\n    }\n  }\n\n  const { dynamicUpdateSelectionSize } = table.theme.selectionStyle;\n  if (\n    (isNearRowHeader && (selectComp.rect.attribute.stroke[3] || dynamicUpdateSelectionSize)) ||\n    (isNearRightRowHeader && (selectComp.rect.attribute.stroke[1] || dynamicUpdateSelectionSize)) ||\n    (isNearColHeader && (selectComp.rect.attribute.stroke[0] || dynamicUpdateSelectionSize)) ||\n    (isNearBottomColHeader && (selectComp.rect.attribute.stroke[2] || dynamicUpdateSelectionSize))\n  ) {\n    if (isNearRowHeader && selectComp.rect.attribute.stroke[3]) {\n      scene.tableGroup.insertAfter(\n        selectComp.rect,\n        selectComp.role === 'columnHeader'\n          ? scene.cornerHeaderGroup\n          : selectComp.role === 'bottomFrozen'\n          ? scene.leftBottomCornerGroup\n          : scene.rowHeaderGroup\n      );\n    }\n\n    if (isNearBottomColHeader && selectComp.rect.attribute.stroke[2]) {\n      scene.tableGroup.insertAfter(\n        selectComp.rect,\n        selectComp.role === 'rowHeader'\n          ? scene.leftBottomCornerGroup\n          : selectComp.role === 'rightFrozen'\n          ? scene.rightBottomCornerGroup\n          : scene.bottomFrozenGroup\n      );\n    }\n\n    if (isNearColHeader && selectComp.rect.attribute.stroke[0]) {\n      scene.tableGroup.insertAfter(\n        selectComp.rect,\n        selectComp.role === 'rowHeader'\n          ? scene.cornerHeaderGroup\n          : selectComp.role === 'rightFrozen'\n          ? scene.rightTopCornerGroup\n          : scene.colHeaderGroup\n      );\n    }\n    if (isNearRightRowHeader && selectComp.rect.attribute.stroke[1]) {\n      scene.tableGroup.insertAfter(\n        selectComp.rect,\n        selectComp.role === 'columnHeader'\n          ? scene.rightTopCornerGroup\n          : selectComp.role === 'bottomFrozen'\n          ? scene.rightBottomCornerGroup\n          : scene.rightFrozenGroup\n      );\n    }\n\n    //#region 调整层级后 滚动情况下会出现绘制范围出界 如body的选中框 渲染在了rowheader上面，所有需要调整选中框rect的 边界\n    if (\n      selectComp.rect.attribute.x < table.getFrozenColsWidth() &&\n      // selectComp.rect.attribute.x + selectComp.rect.attribute.width > scene.rowHeaderGroup.attribute.width &&\n      table.scrollLeft > 0 &&\n      (selectComp.role === 'body' || selectComp.role === 'columnHeader' || selectComp.role === 'bottomFrozen')\n    ) {\n      const width = selectComp.rect.attribute.width - (table.getFrozenColsWidth() - selectComp.rect.attribute.x);\n      selectComp.rect.setAttributes({\n        x: selectComp.rect.attribute.x + (table.getFrozenColsWidth() - selectComp.rect.attribute.x),\n        width: width > 0 ? width : 0\n      });\n      selectComp.fillhandle?.setAttributes({\n        visible: width > 0\n      });\n    }\n    if (\n      // selectComp.rect.attribute.x < scene.rightFrozenGroup.attribute.x &&\n      table.getRightFrozenColsWidth() > 0 && // right冻结列存在的情况下\n      scene.rightFrozenGroup.attribute.height > 0 &&\n      selectComp.rect.attribute.x + selectComp.rect.attribute.width > scene.rightFrozenGroup.attribute.x &&\n      (selectComp.role === 'body' || selectComp.role === 'columnHeader' || selectComp.role === 'bottomFrozen')\n    ) {\n      const width = scene.rightFrozenGroup.attribute.x - selectComp.rect.attribute.x;\n      selectComp.rect.setAttributes({\n        x: selectComp.rect.attribute.x,\n        width: width > 0 ? width : 0\n      });\n      selectComp.fillhandle?.setAttributes({\n        visible: width - colsWidth > 0\n      });\n    }\n    if (\n      selectComp.rect.attribute.y < scene.colHeaderGroup.attribute.height &&\n      table.scrollTop > 0 &&\n      (selectComp.role === 'body' || selectComp.role === 'rowHeader' || selectComp.role === 'rightFrozen')\n    ) {\n      const height =\n        selectComp.rect.attribute.height - (scene.colHeaderGroup.attribute.height - selectComp.rect.attribute.y);\n      selectComp.rect.setAttributes({\n        y: selectComp.rect.attribute.y + (scene.colHeaderGroup.attribute.height - selectComp.rect.attribute.y),\n        height: height > 0 ? height : 0\n      });\n      selectComp.fillhandle?.setAttributes({\n        visible: height > 0\n      });\n    }\n    if (\n      scene.bottomFrozenGroup.attribute.width > 0 &&\n      scene.bottomFrozenGroup.attribute.height > 0 &&\n      selectComp.rect.attribute.y + selectComp.rect.attribute.height > scene.bottomFrozenGroup.attribute.y &&\n      (selectComp.role === 'body' || selectComp.role === 'rowHeader' || selectComp.role === 'rightFrozen')\n    ) {\n      const height = scene.bottomFrozenGroup.attribute.y - selectComp.rect.attribute.y;\n      selectComp.rect.setAttributes({\n        y: selectComp.rect.attribute.y,\n        height: height > 0 ? height : 0\n      });\n      selectComp.fillhandle?.setAttributes({\n        visible: height - rowsHeight > 0\n      });\n    }\n    //#endregion\n  } else {\n    scene.tableGroup.insertAfter(\n      selectComp.rect,\n      selectComp.role === 'body'\n        ? scene.bodyGroup\n        : selectComp.role === 'columnHeader'\n        ? scene.colHeaderGroup\n        : selectComp.role === 'rowHeader'\n        ? scene.rowHeaderGroup\n        : selectComp.role === 'cornerHeader'\n        ? scene.cornerHeaderGroup\n        : selectComp.role === 'rightTopCorner'\n        ? scene.rightTopCornerGroup\n        : selectComp.role === 'rightFrozen'\n        ? scene.rightFrozenGroup\n        : selectComp.role === 'leftBottomCorner'\n        ? scene.leftBottomCornerGroup\n        : selectComp.role === 'bottomFrozen'\n        ? scene.bottomFrozenGroup\n        : scene.rightBottomCornerGroup\n    );\n  }\n  //#endregion\n\n  //#region 处理边缘被截问题\n  let diffSize = 0;\n  if (typeof selectComp.rect.attribute.lineWidth === 'number') {\n    diffSize = Math.ceil(selectComp.rect.attribute.lineWidth / 2);\n  }\n  if (endCol === table.colCount - 1) {\n    if (Array.isArray(selectComp.rect.attribute.lineWidth)) {\n      diffSize = Math.ceil((selectComp.rect.attribute.lineWidth[1] ?? 0) / 2);\n    }\n    selectComp.rect.setAttributes({\n      width: selectComp.rect.attribute.width - diffSize\n    });\n    // selectComp.fillhandle?.setAttributes({\n    //   width: selectComp.rect.attribute.width - diffSize\n    // });\n  }\n  if (startCol === 0) {\n    if (Array.isArray(selectComp.rect.attribute.lineWidth)) {\n      diffSize = Math.ceil((selectComp.rect.attribute.lineWidth[3] ?? 0) / 2);\n    }\n    selectComp.rect.setAttributes({\n      x: selectComp.rect.attribute.x + diffSize,\n      width: selectComp.rect.attribute.width - diffSize\n    });\n    // selectComp.fillhandle?.setAttributes({\n    //   x: selectComp.rect.attribute.x + diffSize,\n    //   width: selectComp.rect.attribute.width - diffSize\n    // });\n  }\n  if (endRow === table.rowCount - 1) {\n    if (Array.isArray(selectComp.rect.attribute.lineWidth)) {\n      diffSize = Math.ceil((selectComp.rect.attribute.lineWidth[2] ?? 0) / 2);\n    }\n    selectComp.rect.setAttributes({\n      height: selectComp.rect.attribute.height - diffSize\n    });\n    // selectComp.fillhandle?.setAttributes({\n    //   height: selectComp.rect.attribute.height - diffSize\n    // });\n  }\n  if (startRow === 0) {\n    if (Array.isArray(selectComp.rect.attribute.lineWidth)) {\n      diffSize = Math.ceil((selectComp.rect.attribute.lineWidth[0] ?? 0) / 2);\n    }\n    selectComp.rect.setAttributes({\n      y: selectComp.rect.attribute.y + diffSize,\n      height: selectComp.rect.attribute.height - diffSize\n    });\n    // selectComp.fillhandle?.setAttributes({\n    //   y: selectComp.rect.attribute.y + diffSize,\n    //   height: selectComp.rect.attribute.height - diffSize\n    // });\n  }\n  //#endregion\n}\n\nexport function updateCellSelectBorder(\n  scene: Scenegraph,\n  selectRange: CellRange & { skipBodyMerge?: boolean },\n  ifExtendSelectRange: boolean = true\n) {\n  const table = scene.table;\n  const newStartCol = selectRange.start.col;\n  const newStartRow = selectRange.start.row;\n  const newEndCol = selectRange.end.col;\n  const newEndRow = selectRange.end.row;\n  const skipBodyMerge = selectRange.skipBodyMerge;\n\n  let startCol = Math.max(Math.min(newEndCol, newStartCol), 0);\n  let startRow = Math.max(Math.min(newEndRow, newStartRow), 0);\n  let endCol = Math.min(Math.max(newEndCol, newStartCol), table.colCount - 1);\n  let endRow = Math.min(Math.max(newEndRow, newStartRow), table.rowCount - 1);\n  //#region region 校验四周的单元格有没有合并的情况，如有则扩大范围\n  const extendSelectRange = () => {\n    let isExtend = false;\n    for (let col = startCol; col <= endCol; col++) {\n      if (col === startCol) {\n        for (let row = startRow; row <= endRow; row++) {\n          if (!table.isHeader(col, row) && skipBodyMerge) {\n            continue;\n          }\n          const mergeInfo = getCellMergeInfo(table, col, row);\n          if (mergeInfo && mergeInfo.start.col < startCol) {\n            startCol = mergeInfo.start.col;\n            isExtend = true;\n            break;\n          }\n        }\n      }\n      if (!isExtend && col === endCol) {\n        for (let row = startRow; row <= endRow; row++) {\n          if (!table.isHeader(col, row) && skipBodyMerge) {\n            continue;\n          }\n          const mergeInfo = getCellMergeInfo(table, col, row);\n          if (mergeInfo && Math.min(mergeInfo.end.col, table.colCount - 1) > endCol) {\n            endCol = mergeInfo.end.col;\n            isExtend = true;\n            break;\n          }\n        }\n      }\n\n      if (isExtend) {\n        break;\n      }\n    }\n    if (!isExtend) {\n      for (let row = startRow; row <= endRow; row++) {\n        if (row === startRow) {\n          for (let col = startCol; col <= endCol; col++) {\n            if (!table.isHeader(col, row) && skipBodyMerge) {\n              continue;\n            }\n            const mergeInfo = getCellMergeInfo(table, col, row);\n            if (mergeInfo && mergeInfo.start.row < startRow) {\n              startRow = mergeInfo.start.row;\n              isExtend = true;\n              break;\n            }\n          }\n        }\n        if (!isExtend && row === endRow) {\n          for (let col = startCol; col <= endCol; col++) {\n            if (!table.isHeader(col, row) && skipBodyMerge) {\n              continue;\n            }\n            const mergeInfo = getCellMergeInfo(table, col, row);\n            if (mergeInfo && Math.min(mergeInfo.end.row, table.rowCount - 1) > endRow) {\n              endRow = mergeInfo.end.row;\n              isExtend = true;\n              break;\n            }\n          }\n        }\n\n        if (isExtend) {\n          break;\n        }\n      }\n    }\n    if (isExtend) {\n      extendSelectRange();\n    }\n  };\n  if (ifExtendSelectRange) {\n    extendSelectRange();\n    if (selectRange.start.col > selectRange.end.col) {\n      selectRange.start.col = Math.max(startCol, endCol);\n      selectRange.end.col = Math.min(startCol, endCol);\n    } else {\n      selectRange.start.col = Math.min(startCol, endCol);\n      selectRange.end.col = Math.max(startCol, endCol);\n    }\n    if (selectRange.start.row > selectRange.end.row) {\n      selectRange.start.row = Math.max(startRow, endRow);\n      selectRange.end.row = Math.min(startRow, endRow);\n    } else {\n      selectRange.start.row = Math.min(startRow, endRow);\n      selectRange.end.row = Math.max(startRow, endRow);\n    }\n  }\n  //#endregion\n  scene.selectingRangeComponents.forEach(\n    (selectComp: { rect: IRect; fillhandle?: IRect; role: CellSubLocation }, key: string) => {\n      selectComp.rect.delete();\n      selectComp.fillhandle?.delete();\n    }\n  );\n  scene.selectingRangeComponents = new Map();\n\n  let needRowHeader = false;\n  let needRightRowHeader = false; // 右侧冻结\n  let needColumnHeader = false;\n  let needBottomColumnHeader = false; // 底部冻结\n  let needBody = false;\n  let needCornerHeader = false;\n  let needRightTopCornerHeader = false;\n  let needRightBottomCornerHeader = false;\n  let needLeftBottomCornerHeader = false;\n  if (startCol <= table.frozenColCount - 1 && startRow <= table.frozenRowCount - 1) {\n    needCornerHeader = true;\n  }\n  if (endCol >= table.colCount - table.rightFrozenColCount && startRow <= table.frozenRowCount - 1) {\n    needRightTopCornerHeader = true;\n  }\n\n  if (startCol <= table.frozenColCount - 1 && endRow >= table.rowCount - table.bottomFrozenRowCount) {\n    needLeftBottomCornerHeader = true;\n  }\n\n  if (endCol >= table.colCount - table.rightFrozenColCount && endRow >= table.rowCount - table.bottomFrozenRowCount) {\n    needRightBottomCornerHeader = true;\n  }\n\n  if (\n    startCol <= table.frozenColCount - 1 &&\n    endRow >= table.frozenRowCount &&\n    startRow <= table.rowCount - table.bottomFrozenRowCount - 1\n  ) {\n    needRowHeader = true;\n  }\n  if (\n    endCol >= table.colCount - table.rightFrozenColCount &&\n    endRow >= table.frozenRowCount &&\n    startRow <= table.rowCount - table.bottomFrozenRowCount - 1\n  ) {\n    needRightRowHeader = true;\n  }\n\n  if (\n    startRow <= table.frozenRowCount - 1 &&\n    endCol >= table.frozenColCount &&\n    startCol <= table.colCount - table.rightFrozenColCount - 1\n  ) {\n    needColumnHeader = true;\n  }\n  if (\n    endRow >= table.rowCount - table.bottomFrozenRowCount &&\n    endCol >= table.frozenColCount &&\n    startCol <= table.colCount - table.rightFrozenColCount - 1\n  ) {\n    needBottomColumnHeader = true;\n  }\n  if (\n    startCol <= table.colCount - table.rightFrozenColCount - 1 &&\n    endCol >= table.frozenColCount &&\n    startRow <= table.rowCount - table.bottomFrozenRowCount - 1 &&\n    endRow >= table.frozenRowCount\n  ) {\n    needBody = true;\n  }\n\n  // TODO 可以尝试不拆分三个表头和body【前提是theme中合并配置】 用一个SelectBorder 需要结合clip，并动态设置border的范围【依据区域范围 已经是否跨表头及body】\n  if (needCornerHeader) {\n    const cornerEndCol = Math.min(endCol, table.frozenColCount - 1);\n    const cornerEndRow = Math.min(endRow, table.frozenRowCount - 1);\n    const strokeArray = [true, !needColumnHeader, !needRowHeader, true];\n    scene.createCellSelectBorder(\n      startCol,\n      startRow,\n      cornerEndCol,\n      cornerEndRow,\n      'cornerHeader',\n      `${startCol}${startRow}${endCol}${endRow}`,\n      strokeArray\n    );\n  }\n  if (needRightTopCornerHeader) {\n    const cornerStartCol = Math.max(startCol, table.colCount - table.rightFrozenColCount);\n    const cornerEndRow = Math.min(endRow, table.frozenRowCount - 1);\n    const strokeArray = [true, true, !needRightRowHeader, !needColumnHeader];\n    scene.createCellSelectBorder(\n      cornerStartCol,\n      startRow,\n      endCol,\n      cornerEndRow,\n      'rightTopCorner',\n      `${startCol}${startRow}${endCol}${endRow}`,\n      strokeArray\n    );\n  }\n\n  if (needLeftBottomCornerHeader) {\n    const cornerEndCol = Math.min(endCol, table.frozenColCount - 1);\n    const cornerStartRow = Math.max(startRow, table.rowCount - table.bottomFrozenRowCount);\n    const strokeArray = [!needRowHeader, !needBottomColumnHeader, true, true];\n    scene.createCellSelectBorder(\n      startCol,\n      cornerStartRow,\n      cornerEndCol,\n      endRow,\n      'leftBottomCorner',\n      `${startCol}${startRow}${endCol}${endRow}`,\n      strokeArray\n    );\n  }\n  if (needRightBottomCornerHeader) {\n    const cornerStartCol = Math.max(startCol, table.colCount - table.rightFrozenColCount);\n    const cornerStartRow = Math.max(startRow, table.rowCount - table.bottomFrozenRowCount);\n    const strokeArray = [!needRightRowHeader, true, true, !needBottomColumnHeader];\n    scene.createCellSelectBorder(\n      cornerStartCol,\n      cornerStartRow,\n      endCol,\n      endRow,\n      'rightBottomCorner',\n      `${startCol}${startRow}${endCol}${endRow}`,\n      strokeArray\n    );\n  }\n  if (needColumnHeader) {\n    const columnHeaderStartCol = Math.max(startCol, table.frozenColCount);\n    const columnHeaderEndCol = Math.min(endCol, table.colCount - table.rightFrozenColCount - 1);\n    const columnHeaderEndRow = Math.min(endRow, table.frozenRowCount - 1);\n    const strokeArray = [true, !needRightTopCornerHeader, !needBody, !needCornerHeader];\n    scene.createCellSelectBorder(\n      columnHeaderStartCol,\n      startRow,\n      columnHeaderEndCol,\n      columnHeaderEndRow,\n      'columnHeader',\n      `${startCol}${startRow}${endCol}${endRow}`,\n      strokeArray\n    );\n  }\n  if (needBottomColumnHeader) {\n    const columnHeaderStartCol = Math.max(startCol, table.frozenColCount);\n    const columnHeaderEndCol = Math.min(endCol, table.colCount - table.rightFrozenColCount - 1);\n    const columnHeaderStartRow = Math.max(startRow, table.rowCount - table.bottomFrozenRowCount);\n    const strokeArray = [!needBody, !needRightBottomCornerHeader, true, !needLeftBottomCornerHeader];\n    scene.createCellSelectBorder(\n      columnHeaderStartCol,\n      columnHeaderStartRow,\n      columnHeaderEndCol,\n      endRow,\n      'bottomFrozen',\n      `${startCol}${startRow}${endCol}${endRow}`,\n      strokeArray\n    );\n  }\n  if (needRowHeader) {\n    const columnHeaderStartRow = Math.max(startRow, table.frozenRowCount);\n    const columnHeaderEndRow = Math.min(endRow, table.rowCount - table.bottomFrozenRowCount - 1);\n    const columnHeaderEndCol = Math.min(endCol, table.frozenColCount - 1);\n    const strokeArray = [!needCornerHeader, !needBody, !needLeftBottomCornerHeader, true];\n    scene.createCellSelectBorder(\n      startCol,\n      columnHeaderStartRow,\n      columnHeaderEndCol,\n      columnHeaderEndRow,\n      'rowHeader',\n      `${startCol}${startRow}${endCol}${endRow}`,\n      strokeArray\n    );\n  }\n  if (needRightRowHeader) {\n    const columnHeaderStartRow = Math.max(startRow, table.frozenRowCount);\n    const columnHeaderEndRow = Math.min(endRow, table.rowCount - table.bottomFrozenRowCount - 1);\n    const columnHeaderStartCol = Math.max(startCol, table.colCount - table.rightFrozenColCount);\n    const strokeArray = [!needRightTopCornerHeader, true, !needRightBottomCornerHeader, !needBody];\n    scene.createCellSelectBorder(\n      columnHeaderStartCol,\n      columnHeaderStartRow,\n      endCol,\n      columnHeaderEndRow,\n      'rightFrozen',\n      `${startCol}${startRow}${endCol}${endRow}`,\n      strokeArray\n    );\n  }\n  if (needBody) {\n    const columnHeaderStartCol = Math.max(startCol, table.frozenColCount);\n    const columnHeaderStartRow = Math.max(startRow, table.frozenRowCount);\n    const columnHeaderEndCol = Math.min(endCol, table.colCount - table.rightFrozenColCount - 1);\n    const columnHeaderEndRow = Math.min(endRow, table.rowCount - table.bottomFrozenRowCount - 1);\n    const strokeArray = [!needColumnHeader, !needRightRowHeader, !needBottomColumnHeader, !needRowHeader];\n    scene.createCellSelectBorder(\n      columnHeaderStartCol,\n      columnHeaderStartRow,\n      columnHeaderEndCol,\n      columnHeaderEndRow,\n      'body',\n      `${startCol}${startRow}${endCol}${endRow}`,\n      strokeArray\n    );\n  }\n}\n\nexport function hideCellSelectBorder(scene: Scenegraph) {\n  scene.selectingRangeComponents.forEach((selectComp: { rect: IRect; role: CellSubLocation }, key: string) => {\n    selectComp.rect.setAttribute('opacity', 0);\n  });\n  scene.selectedRangeComponents.forEach((selectComp: { rect: IRect; role: CellSubLocation }, key: string) => {\n    selectComp.rect.setAttribute('opacity', 0);\n  });\n}\n\nexport function restoreCellSelectBorder(scene: Scenegraph) {\n  scene.selectingRangeComponents.forEach((selectComp: { rect: IRect; role: CellSubLocation }, key: string) => {\n    selectComp.rect.setAttribute('opacity', 1);\n  });\n  scene.selectedRangeComponents.forEach((selectComp: { rect: IRect; role: CellSubLocation }, key: string) => {\n    selectComp.rect.setAttribute('opacity', 1);\n  });\n}\n"]}