{"version":3,"sources":["../src/scenegraph/select/create-select-border.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAM7C,MAAM,UAAU,sBAAsB,CACpC,KAAiB,EACjB,SAAiB,EACjB,SAAiB,EACjB,OAAe,EACf,OAAe,EACf,eAAgC,EAChC,QAAgB,EAChB,OAAkB;;IAGlB,IAAI,mBAAmB,GAAG,CAAC,CAAC,CAAA,MAAA,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,0CAAE,UAAU,CAAA,CAAC;IACzE,IAAI,CAAA,MAAA,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,0CAAE,MAAM,IAAG,CAAC,EAAE;QACtD,mBAAmB,GAAG,KAAK,CAAC;QAC5B,KAAK,CAAC,oCAAoC,EAAE,CAAC;KAC9C;SAAM,IAAI,CAAA,MAAA,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,0CAAE,MAAM,MAAK,CAAC,EAAE;QAC/D,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CACrB,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EACnD,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAClD,CAAC;QACF,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CACrB,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EACnD,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAClD,CAAC;QACF,IAAI,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;YACxC,mBAAmB,GAAG,KAAK,CAAC;SAC7B;KACF;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;QAC5E,mBAAmB,GAAG,KAAK,CAAC;KAC7B;IACD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAC9C,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAC5C,MAAM,cAAc,GAAG,KAAK,CAAC,sBAAsB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,gBAAgB,CAAC;IACzF,MAAM,aAAa,GAAG,KAAK,CAAC,sBAAsB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,gBAAgB,CAAC;IACpF,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;IAEhC,MAAM,oBAAoB,GAAG,MAAA,KAAK,CAAC,cAAc,0CAAE,eAAe,CAAC;IACnE,MAAM,kBAAkB,GAAG,MAAA,KAAK,CAAC,cAAc,0CAAE,mBAAmB,CAAC;IACrE,MAAM,IAAI,GAAG,UAAU,CAAC;QACtB,QAAQ,EAAE,KAAK;QACf,IAAI,EACF,CAAA,MAAA,KAAK,CAAC,cAAc,0CAAE,iBAAiB,MAAK,SAAS;YACnD,CAAC,CAAC,KAAK;YACP,CAAC,CAAC,MAAC,MAAA,KAAK,CAAC,cAAc,0CAAE,WAAmB,mCAAI,qBAAqB;QAEzE,SAAS,EAAE,kBAA4B;QAEvC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC3B,IAAI,MAAM,EAAE;gBACV,OAAO,oBAA8B,CAAC;aACvC;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QACF,CAAC,EAAE,cAAc,CAAC,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACnD,CAAC,EAAE,cAAc,CAAC,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACnD,KAAK,EAAE,CAAC;QACR,MAAM,EAAE,CAAC;QACT,OAAO,EAAE,IAAI;QACb,YAAY,EAAE,eAAe,CAC3B,eAAe,EACf,MAAA,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,0CAAE,YAAY,EAC1C,SAAS,EACT,SAAS,EACT,OAAO,EACP,OAAO,EACP,KAAK,CAAC,KAAK,CACZ;KACF,CAAC,CAAC;IAEH,IAAI,UAAU,CAAC;IACf,IAAI,mBAAmB,EAAE;QACvB,UAAU,GAAG,UAAU,CAAC;YACtB,QAAQ,EAAE,KAAK;YACf,IAAI,EAAE,oBAA8B;YAEpC,MAAM,EAAE,oBAA8B;YACtC,CAAC,EAAE,aAAa,CAAC,EAAE,GAAG,CAAC;YACvB,CAAC,EAAE,aAAa,CAAC,EAAE,GAAG,CAAC;YACvB,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;YAET,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;KACJ;IACD,KAAK,CAAC,YAAY,GAAG,QAAQ,CAAC;IAC9B,KAAK,CAAC,wBAAwB,CAAC,GAAG,CAAC,GAAG,QAAQ,IAAI,QAAQ,IAAI,MAAM,IAAI,MAAM,IAAI,QAAQ,EAAE,EAAE;QAC5F,IAAI;QACJ,UAAU;QACV,IAAI,EAAE,eAAe;KACtB,CAAC,CAAC;IACH,KAAK,CAAC,UAAU,CAAC,WAAW,CAC1B,IAAI,EACJ,eAAe,KAAK,MAAM;QACxB,CAAC,CAAC,KAAK,CAAC,SAAS;QACjB,CAAC,CAAC,eAAe,KAAK,cAAc;YACpC,CAAC,CAAC,KAAK,CAAC,cAAc;YACtB,CAAC,CAAC,eAAe,KAAK,WAAW;gBACjC,CAAC,CAAC,KAAK,CAAC,cAAc;gBACtB,CAAC,CAAC,eAAe,KAAK,cAAc;oBACpC,CAAC,CAAC,KAAK,CAAC,iBAAiB;oBACzB,CAAC,CAAC,eAAe,KAAK,gBAAgB;wBACtC,CAAC,CAAC,KAAK,CAAC,mBAAmB;wBAC3B,CAAC,CAAC,eAAe,KAAK,aAAa;4BACnC,CAAC,CAAC,KAAK,CAAC,gBAAgB;4BACxB,CAAC,CAAC,eAAe,KAAK,kBAAkB;gCACxC,CAAC,CAAC,KAAK,CAAC,qBAAqB;gCAC7B,CAAC,CAAC,eAAe,KAAK,cAAc;oCACpC,CAAC,CAAC,KAAK,CAAC,iBAAiB;oCACzB,CAAC,CAAC,KAAK,CAAC,sBAAsB,CACjC,CAAC;IACF,mBAAmB;QACjB,KAAK,CAAC,UAAU,CAAC,WAAW,CAC1B,UAAU,EACV,eAAe,KAAK,MAAM;YACxB,CAAC,CAAC,KAAK,CAAC,SAAS;YACjB,CAAC,CAAC,eAAe,KAAK,cAAc;gBACpC,CAAC,CAAC,KAAK,CAAC,cAAc;gBACtB,CAAC,CAAC,eAAe,KAAK,WAAW;oBACjC,CAAC,CAAC,KAAK,CAAC,cAAc;oBACtB,CAAC,CAAC,eAAe,KAAK,cAAc;wBACpC,CAAC,CAAC,KAAK,CAAC,iBAAiB;wBACzB,CAAC,CAAC,eAAe,KAAK,gBAAgB;4BACtC,CAAC,CAAC,KAAK,CAAC,mBAAmB;4BAC3B,CAAC,CAAC,eAAe,KAAK,aAAa;gCACnC,CAAC,CAAC,KAAK,CAAC,gBAAgB;gCACxB,CAAC,CAAC,eAAe,KAAK,kBAAkB;oCACxC,CAAC,CAAC,KAAK,CAAC,qBAAqB;oCAC7B,CAAC,CAAC,eAAe,KAAK,cAAc;wCACpC,CAAC,CAAC,KAAK,CAAC,iBAAiB;wCACzB,CAAC,CAAC,KAAK,CAAC,sBAAsB,CACjC,CAAC;AACN,CAAC;AAGD,SAAS,eAAe,CACtB,eAAgC,EAChC,YAAmE,EACnE,SAAiB,EACjB,SAAiB,EACjB,OAAe,EACf,OAAe,EACf,KAAmB;IAEnB,IAAI,CAAC,YAAY,EAAE;QACjB,OAAO,SAAS,CAAC;KAClB;IACD,MAAM,iBAAiB,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;QACnD,CAAC,CAAC,YAAY;QACd,CAAC,CAAC,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;IAE7D,MAAM,aAAa,GAAG,CAAC,CAAC;IACxB,MAAM,aAAa,GAAG,CAAC,CAAC;IACxB,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;IACvC,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;IAEvC,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5B,IAAI,OAAO,GAAG,KAAK,CAAC;IAEpB,IAAI,SAAS,KAAK,aAAa,IAAI,SAAS,KAAK,aAAa,EAAE;QAE9D,MAAM,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACjC,OAAO,GAAG,IAAI,CAAC;KAChB;SAAM,IAAI,OAAO,KAAK,WAAW,IAAI,OAAO,KAAK,WAAW,EAAE;QAE7D,MAAM,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACjC,OAAO,GAAG,IAAI,CAAC;KAChB;SAAM,IAAI,SAAS,KAAK,aAAa,IAAI,OAAO,KAAK,WAAW,EAAE;QAEjE,MAAM,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACjC,OAAO,GAAG,IAAI,CAAC;KAChB;SAAM,IAAI,OAAO,KAAK,WAAW,IAAI,SAAS,KAAK,aAAa,EAAE;QAEjE,MAAM,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACjC,OAAO,GAAG,IAAI,CAAC;KAChB;IAED,IAAI,OAAO,EAAE;QACX,OAAO,MAAM,CAAC;KACf;IAED,OAAO,SAAS,CAAC;AACnB,CAAC","file":"create-select-border.js","sourcesContent":["import { createRect } from './../../vrender';\nimport type { CellSubLocation } from '../../ts-types';\nimport type { Scenegraph } from '../scenegraph';\nimport { table } from 'console';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\n\nexport function createCellSelectBorder(\n  scene: Scenegraph,\n  start_Col: number,\n  start_Row: number,\n  end_Col: number,\n  end_Row: number,\n  selectRangeType: CellSubLocation,\n  selectId: string, //整体区域${endRow}-${startCol}${startRow}${endCol}${endRow}作为其编号\n  strokes: boolean[]\n  // isHasFillHandleRect: boolean\n) {\n  let isHasFillHandleRect = !!scene.table.options.excelOptions?.fillHandle;\n  if (scene.table.stateManager.select.ranges?.length > 1) {\n    isHasFillHandleRect = false;\n    scene.removeFillHandleFromSelectComponents();\n  } else if (scene.table.stateManager.select.ranges?.length === 1) {\n    const maxRow = Math.max(\n      scene.table.stateManager.select.ranges[0].start.row,\n      scene.table.stateManager.select.ranges[0].end.row\n    );\n    const maxCol = Math.max(\n      scene.table.stateManager.select.ranges[0].start.col,\n      scene.table.stateManager.select.ranges[0].end.col\n    );\n    if (scene.table.isHeader(maxCol, maxRow)) {\n      isHasFillHandleRect = false;\n    }\n  }\n  if (Array.isArray(strokes) && (strokes[1] === false || strokes[2] === false)) {\n    isHasFillHandleRect = false;\n  }\n  const startCol = Math.min(start_Col, end_Col);\n  const startRow = Math.min(start_Row, end_Row);\n  const endCol = Math.max(start_Col, end_Col);\n  const endRow = Math.max(start_Row, end_Row);\n  const firstCellBound = scene.highPerformanceGetCell(startCol, startRow).globalAABBBounds;\n  const lastCellBound = scene.highPerformanceGetCell(endCol, endRow).globalAABBBounds;\n  const theme = scene.table.theme;\n  // 框选外边框\n  const bodyClickBorderColor = theme.selectionStyle?.cellBorderColor;\n  const bodyClickLineWidth = theme.selectionStyle?.cellBorderLineWidth;\n  const rect = createRect({\n    pickable: false,\n    fill:\n      theme.selectionStyle?.selectionFillMode === 'replace'\n        ? false\n        : (theme.selectionStyle?.cellBgColor as any) ?? 'rgba(0, 0, 255,0.1)',\n\n    lineWidth: bodyClickLineWidth as number,\n    // stroke: bodyClickBorderColor as string,\n    stroke: strokes.map(stroke => {\n      if (stroke) {\n        return bodyClickBorderColor as string;\n      }\n      return false;\n    }),\n    x: firstCellBound.x1 - scene.tableGroup.attribute.x, // 坐标xy及宽高width height 不需要这里计算具体值 update-select-border文件中updateComponent方法中有逻辑  且该方法调用时间是render\n    y: firstCellBound.y1 - scene.tableGroup.attribute.y,\n    width: 0,\n    height: 0,\n    visible: true,\n    cornerRadius: getCornerRadius(\n      selectRangeType,\n      scene.table.theme.frameStyle?.cornerRadius,\n      start_Col,\n      start_Row,\n      end_Col,\n      end_Row,\n      scene.table\n    )\n  });\n  // 创建右下角小方块\n  let fillhandle;\n  if (isHasFillHandleRect) {\n    fillhandle = createRect({\n      pickable: false,\n      fill: bodyClickBorderColor as string,\n      // lineWidth: bodyClickLineWidth as number,\n      stroke: bodyClickBorderColor as string, // 右下角小方块边框颜色\n      x: lastCellBound.x2 - 3, // 调整小方块位置\n      y: lastCellBound.y2 - 3, // 调整小方块位置\n      width: 6,\n      height: 6,\n\n      visible: true\n    });\n  }\n  scene.lastSelectId = selectId;\n  scene.selectingRangeComponents.set(`${startCol}-${startRow}-${endCol}-${endRow}-${selectId}`, {\n    rect,\n    fillhandle,\n    role: selectRangeType\n  });\n  scene.tableGroup.insertAfter(\n    rect,\n    selectRangeType === 'body'\n      ? scene.bodyGroup\n      : selectRangeType === 'columnHeader'\n      ? scene.colHeaderGroup\n      : selectRangeType === 'rowHeader'\n      ? scene.rowHeaderGroup\n      : selectRangeType === 'cornerHeader'\n      ? scene.cornerHeaderGroup\n      : selectRangeType === 'rightTopCorner'\n      ? scene.rightTopCornerGroup\n      : selectRangeType === 'rightFrozen'\n      ? scene.rightFrozenGroup\n      : selectRangeType === 'leftBottomCorner'\n      ? scene.leftBottomCornerGroup\n      : selectRangeType === 'bottomFrozen'\n      ? scene.bottomFrozenGroup\n      : scene.rightBottomCornerGroup\n  );\n  isHasFillHandleRect &&\n    scene.tableGroup.insertAfter(\n      fillhandle,\n      selectRangeType === 'body'\n        ? scene.bodyGroup\n        : selectRangeType === 'columnHeader'\n        ? scene.colHeaderGroup\n        : selectRangeType === 'rowHeader'\n        ? scene.rowHeaderGroup\n        : selectRangeType === 'cornerHeader'\n        ? scene.cornerHeaderGroup\n        : selectRangeType === 'rightTopCorner'\n        ? scene.rightTopCornerGroup\n        : selectRangeType === 'rightFrozen'\n        ? scene.rightFrozenGroup\n        : selectRangeType === 'leftBottomCorner'\n        ? scene.leftBottomCornerGroup\n        : selectRangeType === 'bottomFrozen'\n        ? scene.bottomFrozenGroup\n        : scene.rightBottomCornerGroup\n    );\n}\n\n// set corner radius in select rect which covers the corner of the table\nfunction getCornerRadius(\n  selectRangeType: CellSubLocation,\n  cornerRadius: undefined | number | [number, number, number, number],\n  start_Col: number,\n  start_Row: number,\n  end_Col: number,\n  end_Row: number,\n  table: BaseTableAPI\n) {\n  if (!cornerRadius) {\n    return undefined;\n  }\n  const cornerRadiusArray = Array.isArray(cornerRadius)\n    ? cornerRadius\n    : [cornerRadius, cornerRadius, cornerRadius, cornerRadius]; // [left top, right top, right bottom, left bottom]\n\n  const tableStartCol = 0;\n  const tableStartRow = 0;\n  const tableEndCol = table.colCount - 1;\n  const tableEndRow = table.rowCount - 1;\n\n  const result = [0, 0, 0, 0];\n  let changed = false;\n\n  if (start_Col === tableStartCol && start_Row === tableStartRow) {\n    // select rect covers the left top corner of the table\n    result[0] = cornerRadiusArray[0];\n    changed = true;\n  } else if (end_Col === tableEndCol && end_Row === tableEndRow) {\n    // select rect covers the right bottom corner of the table\n    result[2] = cornerRadiusArray[2];\n    changed = true;\n  } else if (start_Col === tableStartCol && end_Row === tableEndRow) {\n    // select rect covers the left bottom corner of the table\n    result[3] = cornerRadiusArray[3];\n    changed = true;\n  } else if (end_Col === tableEndCol && start_Row === tableStartRow) {\n    // select rect covers the right top corner of the table\n    result[1] = cornerRadiusArray[1];\n    changed = true;\n  }\n\n  if (changed) {\n    return result;\n  }\n\n  return undefined;\n}\n"]}