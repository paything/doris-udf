{"version":3,"sources":["../src/core/FouseInput.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC;AAEnC,MAAM,OAAO,UAAW,SAAQ,WAAW;IAIzC,YAAY,KAAgB,EAAE,aAA0B;QACtD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,GAAG,CAAC,IAAI,KAAK,MAAM,EAAE;YACvB,OAAO;SACR;QACD,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE1C,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;QACxB,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC9B,GAAG,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;QACjC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACrC,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9D,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACvB,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAC3C,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;QAChC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtB,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;IACxB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;IAC7C,CAAC;IACD,YAAY,CAAC,IAAU,EAAE,KAAa;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QAEpB,KAAK,CAAC,MAAM,EAAE,CAAC;QACf,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;QAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QAChD,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC;QACvC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC;QACzC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC;QAChD,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC;IACpD,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD,OAAO;;QAEL,MAAA,IAAI,CAAC,UAAU,CAAC,aAAa,0CAAE,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9D,CAAC;CACF","file":"FouseInput.js","sourcesContent":["import type { BaseTable } from '../core';\nimport type { Rect } from '../tools/Rect';\nimport { Env } from '../tools/env';\n\nexport class FocusInput extends EventTarget {\n  private _container: HTMLDivElement;\n  private _table: BaseTable;\n  private _input: HTMLInputElement;\n  constructor(table: BaseTable, parentElement: HTMLElement) {\n    super();\n    this._table = table;\n    if (Env.mode === 'node') {\n      return;\n    }\n    const div = document.createElement('div'); //再加一层 C360插件逻辑中用的window.getSelection()来判断的滚动\n    // div.style.position = 'fixed';//定位不能使用fixed 在父级transform非none的时候 都会有问题\n    div.style.opacity = '0';\n    div.dataset.vtable = 'vtable'; //这里不能变 C360取元素的依据\n    div.style.pointerEvents = 'none';\n    div.classList.add('input-container');\n    const input = (this._input = document.createElement('input'));\n    div.appendChild(input);\n    input.classList.add('table-focus-control');\n    input.dataset.vtable = 'vtable';\n    input.readOnly = true;\n    parentElement.appendChild(div);\n    this._container = div;\n  }\n\n  focus(): void {\n    this._input.focus({ preventScroll: true });\n  }\n  setFocusRect(rect: Rect, value: string): void {\n    const input = this._input;\n    input.value = value;\n    // input.focus({ preventScroll: true });\n    input.select();\n    const top = rect.top - this._table.scrollTop;\n    const left = rect.left - this._table.scrollLeft;\n    input.style.top = `${top.toFixed()}px`;\n    input.style.left = `${left.toFixed()}px`;\n    input.style.width = `${rect.width.toFixed()}px`;\n    input.style.height = `${rect.height.toFixed()}px`;\n  }\n  get input(): HTMLInputElement {\n    return this._input;\n  }\n  release(): void {\n    // document.removeChild(this._input);\n    this._container.parentElement?.removeChild(this._container);\n  }\n}\n"]}