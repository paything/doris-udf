{"version":3,"sources":["../src/core/style-helper.ts"],"names":[],"mappings":"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","file":"style-helper.js","sourcesContent":["import type { PivotHeaderLayoutMap } from '../layout/pivot-header-layout';\nimport { isLeftOrRightAxis, isTopOrBottomAxis } from '../layout/chart-helper/get-axis-config';\nimport { isFunction } from '@visactor/vutils';\nimport * as headerStyleContents from '../header-helper/style';\nimport * as columnStyleContents from '../body-helper/style';\nimport type { BaseTableAPI, HeaderData, PivotTableProtected } from '../ts-types/base-table';\nimport type { ColorPropertyDefine, FullExtendStyle, MappingRule } from '../ts-types';\nimport { mergeStyle } from '../plugins/custom-cell-style';\n\nconst EMPTY_STYLE = {};\n\n/**\n * 获取单元格的样式 内部逻辑使用 获取到的样式并不是计算后的\n * @param col\n * @param row\n * @returns\n */\nexport function getCellStyle(col: number, row: number, table: BaseTableAPI): FullExtendStyle {\n  const customCellStyle = table.customCellStylePlugin?.getCustomCellStyle(col, row);\n  const { layoutMap } = table.internalProps;\n  const isHeader = layoutMap.isHeader(col, row);\n  if (isHeader) {\n    // const cacheKey = `${col}-${row}`;\n    let cacheKey;\n    if (table.isPivotTable() && !table.isBottomFrozenRow(row) && !table.isRightFrozenColumn(col)) {\n      // use dimensionKey&indicatorKey to cache style object in pivot table\n      const define = table.getHeaderDefine(col, row) as any;\n      const isCorner = table.isCornerHeader(col, row);\n      cacheKey = define?.dimensionKey\n        ? isCorner\n          ? `dim-cor-${define.dimensionKey}`\n          : `dim-${define.dimensionKey}`\n        : define?.indicatorKey\n        ? `ind-${define.indicatorKey}`\n        : `${col}-${row}`;\n    } else {\n      cacheKey = `${col}-${row}`;\n    }\n    let cacheStyle = table.headerStyleCache.get(cacheKey);\n    if (cacheStyle) {\n      if (customCellStyle) {\n        return mergeStyle(cacheStyle, customCellStyle);\n      }\n      return cacheStyle;\n    }\n    const hd = layoutMap.getHeader(col, row);\n\n    let paddingForAxis;\n    if (\n      table.isPivotChart() &&\n      isTopOrBottomAxis(col, row, layoutMap as PivotHeaderLayoutMap) &&\n      layoutMap.isAxisCell(col, row)\n    ) {\n      // get chart padding for axis cell\n      const chartColumn = layoutMap.getBody(col, table.rowHeaderLevelCount);\n      const padding = (chartColumn.style as any)?.padding ?? table.theme.bodyStyle.padding;\n      paddingForAxis = padding;\n    } else if (\n      table.isPivotChart() &&\n      isLeftOrRightAxis(col, row, layoutMap as PivotHeaderLayoutMap) &&\n      layoutMap.isAxisCell(col, row)\n    ) {\n      // get chart padding for axis cell\n      const chartColumn = layoutMap.getBody(table.columnHeaderLevelCount, row);\n      const padding = (chartColumn.style as any)?.padding ?? table.theme.bodyStyle.padding;\n      paddingForAxis = padding;\n    }\n\n    if (\n      (!hd || (hd as HeaderData).isEmpty) &&\n      (layoutMap.isLeftBottomCorner(col, row) ||\n        layoutMap.isRightBottomCorner(col, row) ||\n        layoutMap.isCornerHeader(col, row) ||\n        layoutMap.isRightTopCorner(col, row))\n    ) {\n      return EMPTY_STYLE;\n    }\n\n    const styleClass = table.internalProps.headerHelper.getStyleClass((hd as HeaderData)?.headerType || 'text');\n    if (layoutMap.isBottomFrozenRow(col, row) && table.theme.bottomFrozenStyle) {\n      cacheStyle = <FullExtendStyle>headerStyleContents.of(\n        paddingForAxis ? { padding: paddingForAxis } : {},\n        table.theme.bottomFrozenStyle,\n        {\n          col,\n          row,\n          table: table as BaseTableAPI,\n          value: table.getCellValue(col, row),\n          dataValue: table.getCellOriginValue(col, row),\n          cellHeaderPaths: table.getCellHeaderPaths(col, row)\n        },\n        styleClass,\n        table.options.autoWrapText,\n        table.theme\n      );\n    } else if (layoutMap.isRightFrozenColumn(col, row) && table.theme.rightFrozenStyle) {\n      cacheStyle = <FullExtendStyle>headerStyleContents.of(\n        paddingForAxis ? { padding: paddingForAxis } : {},\n        table.theme.rightFrozenStyle,\n        {\n          col,\n          row,\n          table: table as BaseTableAPI,\n          value: table.getCellValue(col, row),\n          dataValue: table.getCellOriginValue(col, row),\n          cellHeaderPaths: table.getCellHeaderPaths(col, row)\n        },\n        styleClass,\n        table.options.autoWrapText,\n        table.theme\n      );\n    } else {\n      // let defaultStyle;\n      // if (layoutMap.isColumnHeader(col, row) || layoutMap.isBottomFrozenRow(col, row)) {\n      //   defaultStyle = table.theme.headerStyle;\n      // } else if (table.internalProps.transpose && layoutMap.isRowHeader(col, row)) {\n      //   defaultStyle = table.theme.headerStyle;\n      // } else if (layoutMap.isRowHeader(col, row) || layoutMap.isRightFrozenColumn(col, row)) {\n      //   defaultStyle = table.theme.rowHeaderStyle;\n      // } else {\n      //   defaultStyle = table.theme.cornerHeaderStyle;\n      // }\n      // const styleClass = hd.headerType.StyleClass; //BaseHeader文件\n      // const { style } = hd;\n      const style = hd?.style || {};\n      if (paddingForAxis) {\n        (style as any).padding = paddingForAxis;\n      }\n      cacheStyle = <FullExtendStyle>headerStyleContents.of(\n        style,\n        // defaultStyle,\n        layoutMap.isColumnHeader(col, row) || layoutMap.isBottomFrozenRow(col, row)\n          ? table.theme.headerStyle\n          : layoutMap.isRowHeader(col, row) || layoutMap.isRightFrozenColumn(col, row)\n          ? table.theme.rowHeaderStyle\n          : table.theme.cornerHeaderStyle,\n        {\n          col,\n          row,\n          table: table as BaseTableAPI,\n          value: table.getCellValue(col, row),\n          dataValue: table.getCellOriginValue(col, row),\n          cellHeaderPaths: table.getCellHeaderPaths(col, row)\n        },\n        styleClass,\n        table.options.autoWrapText,\n        table.theme\n      );\n    }\n    table.headerStyleCache.set(cacheKey, cacheStyle);\n    if (customCellStyle) {\n      return mergeStyle(cacheStyle, customCellStyle);\n    }\n    return cacheStyle;\n  }\n\n  let bgColorFunc: ColorPropertyDefine;\n  // 判断是否有mapping  遍历dataset中mappingRules\n  if ((table.internalProps as PivotTableProtected)?.dataConfig?.mappingRules && !table.isHeader(col, row)) {\n    (table.internalProps as PivotTableProtected)?.dataConfig?.mappingRules?.forEach(\n      (mappingRule: MappingRule, i: number) => {\n        if (\n          mappingRule.bgColor &&\n          (table.internalProps.layoutMap as PivotHeaderLayoutMap).getIndicatorKey(col, row) ===\n            mappingRule.bgColor.indicatorKey\n        ) {\n          bgColorFunc = mappingRule.bgColor.mapping;\n        }\n      }\n    );\n    // // 判断是否有mapping  遍历dataset中mappingRules 但这里还需要根据fieldName来判断\n    // if (bgColorFunc && typeof bgColorFunc === 'function') {\n    //   const cellValue = table.getCellOriginValue(col, row);\n    //   bgColor = bgColorFunc(this, cellValue);\n    // }\n  }\n\n  let cacheKey;\n  const cellType = table.getCellType(col, row);\n  const rawRecord = table.getCellOriginRecord(col, row);\n\n  //如果是主体部分，获取相应的style\n  if (rawRecord?.vtableMerge) {\n    cacheKey = 'merge-title';\n  } else if (table.isSeriesNumberInBody(col, row)) {\n    // 如果是行序号\n    cacheKey = `${col}-series-` + cellType;\n  } else if (\n    (table.isListTable() && !(table as any).transpose) ||\n    (table.isPivotTable() && (table.internalProps.layoutMap as PivotHeaderLayoutMap).indicatorsAsCol)\n  ) {\n    cacheKey = col + cellType;\n  } else {\n    cacheKey = row + cellType;\n  }\n  let cacheStyle;\n\n  if (rawRecord?.vtableMerge) {\n    cacheStyle = table.bodyMergeTitleCache.get(cacheKey);\n  } else if (layoutMap.isBottomFrozenRow(row)) {\n    cacheStyle = table.bodyBottomStyleCache.get(cacheKey);\n  } else {\n    cacheStyle = table.bodyStyleCache.get(cacheKey);\n  }\n  if (cacheStyle) {\n    if (customCellStyle) {\n      return mergeStyle(cacheStyle, customCellStyle);\n    }\n    return cacheStyle;\n  }\n  const column = layoutMap.getBody(col, row);\n  // const styleClass = column?.cellType?.StyleClass; //BaseColumn文件\n  const styleClass = table.internalProps.bodyHelper.getStyleClass(table.getCellType(col, row));\n  const style = column?.style;\n  cacheStyle = <FullExtendStyle>columnStyleContents.of(\n    style,\n    rawRecord?.vtableMerge && table.theme.groupTitleStyle\n      ? table.theme.groupTitleStyle\n      : layoutMap.isBottomFrozenRow(row) && table.theme.bottomFrozenStyle\n      ? table.theme.bottomFrozenStyle\n      : layoutMap.isRightFrozenColumn(col) && table.theme.rightFrozenStyle\n      ? table.theme.rightFrozenStyle\n      : table.theme.bodyStyle,\n    {\n      col,\n      row,\n      table: table,\n      value: table.getCellValue(col, row),\n      dataValue: table.getCellOriginValue(col, row),\n      cellHeaderPaths: table.getCellHeaderPaths(col, row)\n    },\n    styleClass,\n    table.options.autoWrapText,\n    table.theme\n  );\n  if (bgColorFunc) {\n    cacheStyle = mergeStyle(cacheStyle as any, { bgColor: bgColorFunc });\n  }\n  if (!isFunction(style)) {\n    if (layoutMap.isBottomFrozenRow(row)) {\n      table.bodyBottomStyleCache.set(cacheKey, cacheStyle);\n    } else {\n      table.bodyStyleCache.set(cacheKey, cacheStyle);\n    }\n  }\n  if (customCellStyle) {\n    return mergeStyle(cacheStyle as any, customCellStyle);\n  }\n  return cacheStyle;\n}\n"]}