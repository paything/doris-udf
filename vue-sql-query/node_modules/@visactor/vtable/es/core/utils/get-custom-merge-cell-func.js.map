{"version":3,"sources":["../src/core/utils/get-custom-merge-cell-func.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAGvD,MAAM,UAAU,sBAAsB,CAAC,eAAiC;IACtE,IAAI,UAAU,CAAC,eAAe,CAAC,EAAE;QAC/B,OAAO,eAAe,CAAC;KACxB;IACD,IAAI,OAAO,CAAC,eAAe,CAAC,EAAE;QAC5B,OAAO,CAAC,GAAW,EAAE,GAAW,EAAE,EAAE;YAClC,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACjC,OAAO,CACL,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG;oBAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG;oBACzB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG;oBAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAC1B,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;KACH;IACD,OAAO,SAAS,CAAC;AACnB,CAAC","file":"get-custom-merge-cell-func.js","sourcesContent":["import { isArray, isFunction } from '@visactor/vutils';\nimport type { CustomMergeCell } from '../../ts-types';\n\nexport function getCustomMergeCellFunc(customMergeCell?: CustomMergeCell) {\n  if (isFunction(customMergeCell)) {\n    return customMergeCell;\n  }\n  if (isArray(customMergeCell)) {\n    return (col: number, row: number) => {\n      return customMergeCell.find(item => {\n        return (\n          item.range.start.col <= col &&\n          item.range.end.col >= col &&\n          item.range.start.row <= row &&\n          item.range.end.row >= row\n        );\n      });\n    };\n  }\n  return undefined;\n}\n"]}