import type { CellAddressWithBound, ColumnInfo, RowInfo } from '../../ts-types';
import type { BaseTableAPI } from '../../ts-types/base-table';
export declare function getRowAt(absoluteY: number, _this: BaseTableAPI): RowInfo;
export declare function getColAt(absoluteX: number, _this: BaseTableAPI): ColumnInfo;
export declare function getCellAt(absoluteX: number, absoluteY: number, _this: BaseTableAPI): CellAddressWithBound;
export declare function getTargetColAt(absoluteX: number, _this: BaseTableAPI): ColumnInfo | null;
export declare function getTargetRowAt(absoluteY: number, _this: BaseTableAPI): RowInfo | null;
export declare function getTargetColAtConsiderRightFrozen(absoluteX: number, isConsider: boolean, _this: BaseTableAPI): ColumnInfo | null;
export declare function getTargetRowAtConsiderBottomFrozen(absoluteY: number, isConsider: boolean, _this: BaseTableAPI): RowInfo | null;
export declare function computeTargetRowByY(absoluteY: number, _this: BaseTableAPI): number;
export declare function computeTargetColByX(absoluteX: number, _this: BaseTableAPI): number;
export declare function getCellAtRelativePosition(x: number, y: number, _this: BaseTableAPI): CellAddressWithBound;
