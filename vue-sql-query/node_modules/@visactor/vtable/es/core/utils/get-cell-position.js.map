{"version":3,"sources":["../src/core/utils/get-cell-position.ts"],"names":[],"mappings":"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","file":"get-cell-position.js","sourcesContent":["import type { CellAddressWithBound, ColumnInfo, RowInfo } from '../../ts-types';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport { _getTargetFrozenColAt, _getTargetFrozenRowAt } from '../tableHelper';\n\n/**\n * 根据y值计算所在行\n * @param absoluteY 相对于表格左上角的y坐标（无滚动）\n * @returns\n */\nexport function getRowAt(absoluteY: number, _this: BaseTableAPI): RowInfo {\n  const frozen = _getTargetFrozenRowAt(_this, absoluteY);\n  if (frozen) {\n    return frozen;\n  }\n  return getTargetRowAt(absoluteY, _this) ?? { top: -1, row: -1, bottom: -1, height: -1 };\n}\n\n/**\n * 根据x值计算所在列\n * @param absoluteX 相对于表格左上角的x坐标（无滚动）\n * @returns\n */\nexport function getColAt(absoluteX: number, _this: BaseTableAPI): ColumnInfo {\n  const frozen = _getTargetFrozenColAt(_this, absoluteX);\n  if (frozen) {\n    return frozen;\n  }\n  return getTargetColAt(absoluteX, _this) ?? { left: -1, col: -1, right: -1, width: 1 };\n}\n/**\n * 根据坐标值获取行列位置，index和rect范围\n * @param absoluteX 表格左上角的x坐标（无滚动）\n * @param absoluteY 表格左上角的y坐标（无滚动）\n * @returns\n */\nexport function getCellAt(absoluteX: number, absoluteY: number, _this: BaseTableAPI): CellAddressWithBound {\n  const rowInfo = getRowAt(absoluteY, _this);\n  const { row, top, bottom, height } = rowInfo;\n  const colInfo = getColAt(absoluteX, _this);\n  const { col, left, right, width } = colInfo;\n  const rect = {\n    left,\n    right,\n    top,\n    bottom,\n    width,\n    height\n  };\n  return {\n    row,\n    col,\n    rect\n  };\n}\n\n/**\n * 根据x获取该位置所处列值\n * @param table\n * @param absoluteX 表格左上角的x坐标（无滚动）\n * @returns\n */\nexport function getTargetColAt(absoluteX: number, _this: BaseTableAPI): ColumnInfo | null {\n  if (absoluteX === 0) {\n    return { left: 0, col: 0, right: 0, width: 0 };\n  }\n  const findBefore = (startCol: number, startRight: number): ColumnInfo | null => {\n    let right = startRight;\n    for (let col = startCol; col >= 0; col--) {\n      const width = _this.getColWidth(col);\n      const left = right - width;\n      if (Math.round(left) <= Math.round(absoluteX) && Math.round(absoluteX) < Math.round(right)) {\n        return {\n          left,\n          col,\n          right,\n          width\n        };\n      }\n      right = left;\n    }\n    return null;\n  };\n  const findAfter = (startCol: number, startRight: number): ColumnInfo | null => {\n    let left = startRight - _this.getColWidth(startCol);\n    const { colCount } = _this.internalProps;\n    for (let col = startCol; col < colCount; col++) {\n      const width = _this.getColWidth(col);\n      const right = left + width;\n      if (Math.round(left) <= Math.round(absoluteX) && Math.round(absoluteX) < Math.round(right)) {\n        return {\n          left,\n          col,\n          right,\n          width\n        };\n      }\n      left = right;\n    }\n    return null;\n  };\n  //计算这个位置处是第几行\n  const candCol = computeTargetColByX(absoluteX, _this);\n  const right = _this.getColsWidth(0, candCol);\n  if (absoluteX >= right) {\n    return findAfter(candCol, right);\n  }\n  return findBefore(candCol, right);\n}\n\n/**\n * 根据y获取该位置所处行值\n * @param table\n * @param absoluteX 表格左上角的y坐标（无滚动）\n * @returns\n */\nexport function getTargetRowAt(absoluteY: number, _this: BaseTableAPI): RowInfo | null {\n  if (absoluteY === 0) {\n    return { top: 0, row: 0, bottom: 0, height: 0 };\n  }\n\n  const floorOrRound = _this.options.customConfig?._disableColumnAndRowSizeRound === true ? Math.floor : Math.round;\n\n  const findBefore = (startRow: number, startBottom: number): RowInfo | null => {\n    let bottom = startBottom;\n    for (let row = startRow; row >= 0; row--) {\n      const height = _this.getRowHeight(row);\n      const top = bottom - height;\n      if (floorOrRound(top) <= floorOrRound(absoluteY) && floorOrRound(absoluteY) < floorOrRound(bottom)) {\n        return {\n          top,\n          row,\n          bottom,\n          height\n        };\n      }\n      bottom = top;\n    }\n    return null;\n  };\n  const findAfter = (startRow: number, startBottom: number): RowInfo | null => {\n    let top = startBottom - _this.getRowHeight(startRow);\n    const { rowCount } = _this.internalProps;\n    for (let row = startRow; row < rowCount; row++) {\n      const height = _this.getRowHeight(row);\n      const bottom = top + height;\n      if (floorOrRound(top) <= floorOrRound(absoluteY) && floorOrRound(absoluteY) < floorOrRound(bottom)) {\n        return {\n          top,\n          row,\n          bottom,\n          height\n        };\n      }\n      top = bottom;\n    }\n    return null;\n  };\n  // const candRow = Math.min(\n  //   Math.ceil(absoluteY / this.internalProps.defaultRowHeight),\n  //   this.rowCount - 1\n  // );\n  //计算这个位置处是第几行\n  const candRow = computeTargetRowByY(absoluteY, _this);\n  const bottom = _this.getRowsHeight(0, candRow);\n  if (absoluteY >= bottom) {\n    return findAfter(candRow, bottom);\n  }\n  return findBefore(candRow, bottom);\n}\n\n/**\n * 根据x获取右侧冻结中该位置所处列值\n * @param table\n * @param absoluteX 屏幕坐标x值\n * @returns\n */\nexport function getTargetColAtConsiderRightFrozen(\n  absoluteX: number,\n  isConsider: boolean,\n  _this: BaseTableAPI\n): ColumnInfo | null {\n  if (absoluteX === 0) {\n    return { left: 0, col: 0, right: 0, width: 0 };\n  }\n  absoluteX = absoluteX - _this.tableX;\n  if (\n    isConsider &&\n    absoluteX > _this.tableNoFrameWidth - _this.getRightFrozenColsWidth() &&\n    absoluteX < _this.tableNoFrameWidth &&\n    absoluteX <= _this.getAllColsWidth()\n  ) {\n    for (let i = 0; i < _this.rightFrozenColCount; i++) {\n      if (absoluteX > _this.tableNoFrameWidth - _this.getColsWidth(_this.colCount - i - 1, _this.colCount - 1)) {\n        return {\n          col: _this.colCount - i - 1,\n          left: undefined,\n          right: undefined,\n          width: undefined\n        };\n      }\n    }\n  }\n  return getTargetColAt(absoluteX, _this);\n}\n\n/**\n * 根据y获取底部冻结该位置所处行值\n * @param table\n * @param absoluteX 屏幕坐标y值\n * @param isConsider 是否考Y值是否在底部冻结区域内\n * @returns\n */\nexport function getTargetRowAtConsiderBottomFrozen(\n  absoluteY: number,\n  isConsider: boolean,\n  _this: BaseTableAPI\n): RowInfo | null {\n  if (absoluteY === 0) {\n    return { top: 0, row: 0, bottom: 0, height: 0 };\n  }\n  absoluteY = absoluteY - _this.tableY;\n  if (\n    isConsider &&\n    absoluteY > _this.tableNoFrameHeight - _this.getBottomFrozenRowsHeight() &&\n    absoluteY < _this.tableNoFrameHeight\n  ) {\n    for (let i = 0; i < _this.rightFrozenColCount; i++) {\n      if (absoluteY > _this.tableNoFrameHeight - _this.getRowsHeight(_this.rowCount - i - 1, _this.rowCount - 1)) {\n        return {\n          row: _this.rowCount - i - 1,\n          top: undefined,\n          bottom: undefined,\n          height: undefined\n        };\n      }\n    }\n  }\n  return getTargetRowAt(absoluteY, _this);\n}\n\n/**\n * 根据y值（包括了scroll的）计算所在行\n * @param this\n * @param absoluteY 左边y值，包含了scroll滚动距离\n * @returns\n */\nexport function computeTargetRowByY(absoluteY: number, _this: BaseTableAPI): number {\n  let defaultRowHeight = _this.defaultRowHeight;\n\n  //使用二分法计算出row\n  if (_this._rowRangeHeightsMap.get(`$0$${_this.rowCount - 1}`)) {\n    defaultRowHeight = _this._rowRangeHeightsMap.get(`$0$${_this.rowCount - 1}`) / _this.rowCount;\n    // let startRow = 0;\n    // let endRow = this.rowCount - 1;\n    // while (endRow - startRow > 1) {\n    //   const midRow = Math.floor((startRow + endRow) / 2);\n    //   if (absoluteY < this._rowRangeHeightsMap.get(`$0$${midRow}`)) {\n    //     endRow = midRow;\n    //   } else if (absoluteY > this._rowRangeHeightsMap.get(`$0$${midRow}`)) {\n    //     startRow = midRow;\n    //   } else {\n    //     return midRow;\n    //   }\n    // }\n    // return endRow;\n  }\n  //否则使用defaultRowHeight大约计算一个row\n  return Math.min(Math.ceil(absoluteY / defaultRowHeight), _this.rowCount - 1);\n}\n\n/**\n * 根据x值（包括了scroll的）计算所在列 主要借助colRangeWidthsMap缓存来提高计算效率\n * @param this\n * @param absoluteX 左边x值，包含了scroll滚动距离\n * @returns\n */\nexport function computeTargetColByX(absoluteX: number, _this: BaseTableAPI): number {\n  //使用二分法计算出col\n  if (_this._colRangeWidthsMap.get(`$0$${_this.colCount - 1}`)) {\n    let startCol = 0;\n    let endCol = _this.colCount - 1;\n    while (endCol - startCol > 1) {\n      const midCol = Math.floor((startCol + endCol) / 2);\n      if (absoluteX < _this._colRangeWidthsMap.get(`$0$${midCol}`)) {\n        endCol = midCol;\n      } else if (absoluteX > _this._colRangeWidthsMap.get(`$0$${midCol}`)) {\n        startCol = midCol;\n      } else {\n        return midCol;\n      }\n    }\n    return endCol;\n  }\n  //否则使用defaultColWidth大约计算一个col\n  return Math.min(Math.ceil(absoluteX / _this.internalProps.defaultColWidth), _this.colCount - 1);\n}\n\n/**\n * 获取屏幕坐标对应的单元格信息，考虑滚动\n * @param this\n * @param relativeX 左边x值，相对于容器左上角，考虑表格滚动\n * @param relativeY 左边y值，相对于容器左上角，考虑表格滚动\n * @returns\n */\nexport function getCellAtRelativePosition(x: number, y: number, _this: BaseTableAPI): CellAddressWithBound {\n  // table border and outer component\n  x -= _this.tableX;\n  y -= _this.tableY;\n\n  // top frozen\n  let topFrozen = false;\n  if (y > 0 && y < _this.getFrozenRowsHeight()) {\n    topFrozen = true;\n  }\n\n  // left frozen\n  let leftFrozen = false;\n  if (x > 0 && x < _this.getFrozenColsWidth()) {\n    leftFrozen = true;\n  }\n\n  // bottom frozen\n  let bottomFrozen = false;\n  if (\n    y > _this.tableNoFrameHeight - _this.getBottomFrozenRowsHeight() &&\n    y < _this.tableNoFrameHeight &&\n    y <= _this.getAllRowsHeight()\n  ) {\n    bottomFrozen = true;\n  }\n  // right frozen\n  let rightFrozen = false;\n  if (\n    x > _this.tableNoFrameWidth - _this.getRightFrozenColsWidth() &&\n    x < _this.tableNoFrameWidth &&\n    x <= _this.getAllColsWidth()\n  ) {\n    rightFrozen = true;\n  }\n\n  // 加上 tableX 和 tableY 是因为在考虑冻结列和冻结行时，需要将坐标转换为相对于表格左上角的坐标\n  const colInfo = getTargetColAtConsiderRightFrozen(\n    (leftFrozen || rightFrozen ? x : x + _this.scrollLeft) + _this.tableX,\n    rightFrozen,\n    _this\n  );\n  const rowInfo = getTargetRowAtConsiderBottomFrozen(\n    (topFrozen || bottomFrozen ? y : y + _this.scrollTop) + _this.tableY,\n    bottomFrozen,\n    _this\n  );\n\n  if (colInfo && rowInfo) {\n    const { row, top, bottom, height } = rowInfo;\n    const { col, left, right, width } = colInfo;\n    const rect = {\n      left,\n      right,\n      top,\n      bottom,\n      width,\n      height\n    };\n    return {\n      row,\n      col,\n      rect\n    };\n  }\n  return { col: -1, row: -1 };\n}\n"]}