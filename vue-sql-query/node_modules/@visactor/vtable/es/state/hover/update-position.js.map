{"version":3,"sources":["../src/state/hover/update-position.ts"],"names":[],"mappings":"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","file":"update-position.js","sourcesContent":["import type { Scenegraph } from '../../scenegraph/scenegraph';\nimport type { CellRange } from '../../ts-types';\nimport { HighlightScope } from '../../ts-types';\nimport { CellPosition } from '../../ts-types';\n// import { HoverMode, SelectMode, StateManager } from '../state';\nimport type { StateManager } from '../state';\nimport { clearColHover, updateColHover } from './col';\nimport { clearRowHover, updateRowHover } from './row';\nimport { clearSingleHover, updateSingleHover } from './single';\n\n/**\n * @description: 更新hover位置\n * @param {StateManager} state\n * @param {number} col\n * @param {number} row\n * @return {*}\n */\nexport function updateHoverPosition(state: StateManager, col: number, row: number) {\n  const { table } = state;\n  const { scenegraph } = table;\n  const { highlightScope, singleStyle, disableHeader, cellPos, cellPosContainHeader } = state.hover;\n  const prevHoverCellCol = cellPos.col;\n  const prevHoverCellRow = cellPos.row;\n\n  if (\n    highlightScope === HighlightScope.none ||\n    (disableHeader && (cellPosContainHeader.col !== col || cellPosContainHeader.row !== row))\n  ) {\n    // disableHeader状态，更新hover图标状态依赖cellPosContainHeader\n    const prevHoverCellCol = cellPosContainHeader.col;\n    const prevHoverCellRow = cellPosContainHeader.row;\n    scenegraph.hideHoverIcon(prevHoverCellCol, prevHoverCellRow);\n    scenegraph.showHoverIcon(col, row);\n    cellPosContainHeader.col = col;\n    cellPosContainHeader.row = row;\n  }\n\n  if ((disableHeader && table.isHeader(col, row)) || highlightScope === HighlightScope.none) {\n    col = -1;\n    row = -1;\n  }\n\n  if (prevHoverCellCol === col && prevHoverCellRow === row) {\n    return;\n  }\n\n  if (!state.table.options.customConfig?.disableBuildInChartActive) {\n    // 将hover单元格的图表实例激活 并将上一个失去焦点\n    scenegraph.deactivateChart(prevHoverCellCol, prevHoverCellRow);\n    scenegraph.activateChart(col, row);\n  }\n\n  let updateScenegraph = false;\n  const {\n    // cellPosStart: selectStart,\n    // cellPosEnd: selectEnd,\n    ranges,\n    highlightScope: selectMode\n  } = state.select;\n  // 移出表格/移入表头清空hover\n  if (prevHoverCellCol !== -1 && prevHoverCellRow !== -1) {\n    updateScenegraph = clearHover(\n      scenegraph,\n      prevHoverCellCol,\n      prevHoverCellRow,\n      // selectStart,\n      // selectEnd,\n      ranges,\n      singleStyle,\n      highlightScope,\n      selectMode\n    );\n\n    if (!disableHeader) {\n      scenegraph.hideHoverIcon(prevHoverCellCol, prevHoverCellRow);\n    }\n  }\n\n  if (col === -1 || row === -1) {\n    cellPos.col = -1;\n    cellPos.row = -1;\n    if (updateScenegraph && (prevHoverCellCol !== col || prevHoverCellRow !== row)) {\n      state.table.scenegraph.updateNextFrame();\n    }\n    return;\n  }\n\n  // 更新hover单元格状态\n  if (highlightScope === HighlightScope.single) {\n    updateScenegraph = updateSingleHover(scenegraph, col, row, ranges, selectMode) ? true : updateScenegraph;\n  } else if (highlightScope === HighlightScope.row) {\n    updateScenegraph = updateRowHover(\n      scenegraph,\n      col,\n      row,\n      // selectStart,\n      // selectEnd,\n      ranges,\n      selectMode,\n      singleStyle\n    )\n      ? true\n      : updateScenegraph;\n  } else if (highlightScope === HighlightScope.column) {\n    updateScenegraph = updateColHover(\n      scenegraph,\n      col,\n      row,\n      // selectStart,\n      // selectEnd,\n      ranges,\n      selectMode,\n      singleStyle\n    )\n      ? true\n      : updateScenegraph;\n  } else if (highlightScope === HighlightScope.cross) {\n    updateScenegraph = updateRowHover(scenegraph, col, row, ranges, selectMode, singleStyle) ? true : updateScenegraph;\n    updateScenegraph = updateColHover(scenegraph, col, row, ranges, selectMode, singleStyle) ? true : updateScenegraph;\n  }\n\n  // if (!disableHeader) {\n  //   scenegraph.showHoverIcon(col, row);\n  // }\n  if (highlightScope !== HighlightScope.none && !disableHeader) {\n    scenegraph.showHoverIcon(col, row);\n  }\n\n  cellPos.col = col;\n  cellPos.row = row;\n  if (updateScenegraph) {\n    state.table.scenegraph.updateNextFrame();\n  }\n}\n\n/**\n * @description: 清空hover状态\n * @param {StateManager} state\n * @return {*}\n */\nfunction clearHover(\n  scenegraph: Scenegraph,\n  col: number,\n  row: number,\n  // selectStart: CellPosition,\n  // selectEnd: CellPosition,\n  selectRanges: CellRange[],\n  singleStyle: boolean,\n  mode: HighlightScope,\n  selectMode: HighlightScope\n) {\n  let updateScenegraph = false;\n  if (mode === HighlightScope.single) {\n    updateScenegraph = clearSingleHover(scenegraph, col, row, selectRanges, selectMode) ? true : updateScenegraph;\n  } else if (mode === HighlightScope.row) {\n    updateScenegraph = clearRowHover(scenegraph, col, row, selectRanges, selectMode) ? true : updateScenegraph;\n  } else if (mode === HighlightScope.column) {\n    updateScenegraph = clearColHover(scenegraph, col, row, selectRanges, selectMode) ? true : updateScenegraph;\n  } else if (mode === HighlightScope.cross) {\n    updateScenegraph = clearRowHover(scenegraph, col, row, selectRanges, selectMode) ? true : updateScenegraph;\n    updateScenegraph = clearColHover(scenegraph, col, row, selectRanges, selectMode) ? true : updateScenegraph;\n  }\n\n  return updateScenegraph;\n}\n"]}