import type { StateManager } from '../state';
import type { BaseTableAPI } from '../../ts-types/base-table';
export declare function setCheckedState(col: number, row: number, field: string | number, checked: boolean | 'indeterminate', state: StateManager): void;
export declare function setHeaderCheckedState(field: string | number, checked: boolean | 'indeterminate', state: StateManager): void;
export declare function syncCheckedState(col: number, row: number, field: string | number, checked: boolean, state: StateManager): boolean | 'indeterminate';
export declare function initCheckedState(records: any[], state: StateManager): void;
export declare function updateHeaderCheckedState(field: string | number, state: StateManager, col: number, row: number): boolean | 'indeterminate';
export declare function initLeftRecordsCheckState(records: any[], state: StateManager): void;
export declare function setCellCheckboxState(col: number, row: number, checked: boolean | 'indeterminate', table: BaseTableAPI): void;
export declare function setCellCheckboxStateByAttribute(col: number, row: number, checked: boolean | 'indeterminate', table: BaseTableAPI): void;
export declare function changeCheckboxOrder(sourceIndex: number, targetIndex: number, state: StateManager): void;
export declare function getGroupCheckboxState(table: BaseTableAPI): any[];
