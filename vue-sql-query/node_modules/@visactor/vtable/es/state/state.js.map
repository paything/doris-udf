{"version":3,"sources":["../src/state/state.ts"],"names":[],"mappings":"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","file":"state.js","sourcesContent":["import { Rect } from '../tools/Rect';\nimport { MenuType } from '../scenegraph/component/menu';\nimport type { Group } from '../scenegraph/graphic/group';\nimport type { Icon } from '../scenegraph/graphic/icon';\nimport type {\n  CellAddress,\n  CellPosition,\n  CellRange,\n  DropDownMenuHighlightInfo,\n  IDimensionInfo,\n  ListTableAPI,\n  MenuListItem,\n  PivotTableAPI,\n  SortOrder,\n  SortState\n} from '../ts-types';\nimport { HighlightScope, InteractionState, SortType } from '../ts-types';\nimport { IconFuncTypeEnum } from '../ts-types';\nimport { checkMultiCellInSelect } from './common/check-in-select';\nimport { updateHoverPosition } from './hover/update-position';\nimport { dealFreeze } from './frozen';\nimport { dealSort } from './sort';\nimport { selectEnd, updateSelectPosition } from './select/update-position';\nimport { cellInRange, getOrApply } from '../tools/helper';\nimport type { ListTable } from '../ListTable';\nimport { PIVOT_TABLE_EVENT_TYPE } from '../ts-types/pivot-table/PIVOT_TABLE_EVENT_TYPE';\nimport type { PivotHeaderLayoutMap } from '../layout/pivot-header-layout';\nimport { TABLE_EVENT_TYPE } from '../core/TABLE_EVENT_TYPE';\nimport { Bounds, isObject, isString, isValid } from '@visactor/vutils';\nimport { updateDrill } from './drill';\nimport { clearChartHover, updateChartHover } from './spark-line';\nimport { endMoveCol, startMoveCol, updateMoveCol } from './cell-move';\nimport type { FederatedWheelEvent, IRectGraphicAttribute } from './../vrender';\nimport type { TooltipOptions } from '../ts-types/tooltip';\nimport { getIconAndPositionFromTarget } from '../scenegraph/utils/icon';\nimport type { BaseTableAPI, HeaderData } from '../ts-types/base-table';\nimport { debounce } from '../tools/debounce';\nimport { updateResizeColumn } from './resize/update-resize-column';\nimport { changeRadioOrder, setRadioState, syncRadioState } from './radio/radio';\nimport {\n  changeCheckboxOrder,\n  initCheckedState,\n  initLeftRecordsCheckState,\n  setCheckedState,\n  setHeaderCheckedState,\n  syncCheckedState,\n  updateHeaderCheckedState\n} from './checkbox/checkbox';\nimport { updateResizeRow } from './resize/update-resize-row';\nimport { deleteAllSelectingBorder } from '../scenegraph/select/delete-select-border';\nimport type { PivotTable } from '../PivotTable';\nimport { traverseObject } from '../tools/util';\nimport type { ColumnData } from '../ts-types/list-table/layout-map/api';\nimport { addCustomSelectRanges, deletaCustomSelectRanges } from './select/custom-select';\nimport { expendCellRange } from '../tools/merge-range';\n\nexport type CustomSelectionStyle = {\n  cellBorderColor?: string; //边框颜色\n  cellBorderLineWidth?: number; //边框线宽度\n  cellBorderLineDash?: number[]; //边框线虚线\n  cellBgColor?: string; //选择框背景颜色\n};\n\nexport class StateManager {\n  table: BaseTableAPI;\n  /**\n   * Default 默认展示\n   * grabing 拖拽中\n   *   -Resize column 改变列宽\n   *   -column move 调整列顺序\n   *   -drag select 拖拽多选\n   * Scrolling 滚动中\n   */\n  interactionState: InteractionState;\n  interactionStateBeforeScroll?: InteractionState;\n  // select记录两个位置，第二个位置只在range模式生效\n  select: {\n    ranges: (CellRange & { skipBodyMerge?: boolean })[];\n    highlightScope: HighlightScope;\n    cellPos: CellPosition;\n    // cellPosStart: CellPosition;\n    // cellPosEnd: CellPosition;\n    singleStyle?: boolean; // select当前单元格是否使用单独样式\n    disableHeader?: boolean; // 是否禁用表头select\n    disableCtrlMultiSelect?: boolean; // 是否禁用ctrl多选框\n    /** 点击表头单元格效果\n     * 'inline': 点击行表头则整行选中，选择列表头则整列选中；\n     * 'cell': 仅仅选择当前点击的表头单元格；\n     * 'body': 不选择表头，点击行表头则选择该行所有 body 单元格，点击列表头则选择该列所有 body 单元格。\n     */\n    headerSelectMode?: 'inline' | 'cell' | 'body';\n    /** 点击表头corner单元格效果\n     * 'inline': 点击corner选择列表头则整列选中；\n     * 'cell': 仅仅选择当前点击的corner表头单元格；\n     * 'body': 点击corner列表头则选择该列所有 body 单元格。\n     * 'all': 点击corner选择整个图表\n     */\n    cornerHeaderSelectMode?: 'inline' | 'cell' | 'body' | 'all';\n    highlightInRange?: boolean;\n    selecting: boolean;\n    customSelectRanges?: {\n      range: CellRange;\n      style: CustomSelectionStyle;\n    }[];\n  };\n  fillHandle: {\n    direction?: 'top' | 'bottom' | 'left' | 'right';\n    directionRow?: boolean;\n    isFilling: boolean;\n    startX: number;\n    startY: number;\n    beforeFillMinCol?: number;\n    beforeFillMinRow?: number;\n    beforeFillMaxCol?: number;\n    beforeFillMaxRow?: number;\n  };\n  hover: {\n    highlightScope: HighlightScope; // hover模式\n    singleStyle?: boolean; // hover当前单元格是否使用单独样式\n    disableHeader?: boolean; // 是否禁用表头hover\n    cellPos: CellPosition; // 记录当前hover的位置\n    cellPosContainHeader?: CellPosition; // 记录当前hover的位置(在disableHeader时启用，记录真实位置)\n  };\n  hoverIcon: {\n    col: number;\n    row: number;\n    icon: Icon | null;\n  };\n  residentHoverIcon?: {\n    col: number;\n    row: number;\n    icon: Icon | null;\n  };\n  columnResize: {\n    col: number;\n    /** x坐标是相对table内坐标 */\n    x: number;\n    resizing: boolean;\n    isRightFrozen?: boolean;\n  };\n  rowResize: {\n    row: number;\n    /** x坐标是相对table内坐标 */\n    y: number;\n    resizing: boolean;\n    isBottomFrozen?: boolean;\n  };\n  columnMove: {\n    colSource: number;\n    colTarget: number;\n    rowSource: number;\n    rowTarget: number;\n    x: number;\n    y: number;\n    moving: boolean;\n  };\n  menu: {\n    x: number;\n    y: number;\n    isShow: boolean;\n    itemList: MenuListItem[];\n    bounds: Bounds;\n    highlightIndex: number;\n    dropDownMenuHighlight?: DropDownMenuHighlightInfo[];\n  };\n  sort: Array<{\n    col: number;\n    row: number;\n    field?: string;\n    // fieldKey?: string;\n    order: SortOrder;\n    icon?: Icon;\n  }>;\n  frozen: {\n    col: number;\n    row: number;\n    icon?: Icon;\n  };\n  scroll: {\n    horizontalBarPos: number;\n    verticalBarPos: number;\n  };\n  tablePosition: {\n    absoluteX: number;\n    absoluteY: number;\n  };\n  drill: {\n    dimensionKey?: string;\n    title?: string;\n    drillDown?: boolean;\n    drillUp?: boolean;\n    col: number;\n    row: number;\n  };\n  // 当鼠标hover到迷你图上时存储行列值，好在鼠标移动到其他单元格时清理Sparkline的高亮状态\n  sparkLine: {\n    col: number;\n    row: number;\n  };\n  _clearVerticalScrollBar: any;\n  _clearHorizontalScrollBar: any;\n\n  fastScrolling: boolean = false;\n\n  /**\n   * 对应原始数据列表顺序的checked状态\n   */\n  // checkedState: Record<string | number, boolean>[] = [];\n  checkedState: Map<string | number, Record<string | number, boolean | 'indeterminate'>> = new Map();\n  /**\n   * 对应表头checked状态\n   */\n  headerCheckedState: Record<string | number, boolean | 'indeterminate'> = {};\n\n  _checkboxCellTypeFields: (string | number)[] = [];\n\n  _headerCheckFuncs: Record<string | number, Function> = {};\n\n  radioState: Record<string | number, boolean | number | Record<number, number>> = {};\n  // 供滚动重置为default使用\n  resetInteractionState = debounce((state?: InteractionState) => {\n    this.updateInteractionState(state ?? InteractionState.default);\n  }, 100);\n  // _x: number = 0;\n  constructor(table: BaseTableAPI) {\n    this.table = table;\n    this.initState();\n\n    this.updateVerticalScrollBar = this.updateVerticalScrollBar.bind(this);\n    this.updateHorizontalScrollBar = this.updateHorizontalScrollBar.bind(this);\n  }\n\n  initState() {\n    this._initState();\n    this.setHoverState();\n    this.setSelectState();\n    this.setFrozenState();\n  }\n  /** updateOption更新配置的情况下 调用接口*/\n  updateOptionSetState() {\n    this._updateOptionSetState();\n    this.setHoverState();\n    this.setSelectState();\n    this.setFrozenState();\n  }\n  _updateOptionSetState() {\n    this.interactionState = InteractionState.default;\n    // this.select = {\n    //   highlightScope: HighlightScope.single,\n    //   ranges: [],\n    //   cellPos: {\n    //     col: -1,\n    //     row: -1\n    //   },\n    //   selecting: false\n    // };\n    // this.hover = {\n    //   highlightScope: HighlightScope.single,\n    //   cellPos: {\n    //     col: -1,\n    //     row: -1\n    //   }\n    // };\n    this.hoverIcon = {\n      col: -1,\n      row: -1,\n      icon: null\n    };\n    this.columnResize = {\n      col: -1,\n      x: 0,\n      resizing: false\n    };\n    this.rowResize = {\n      row: -1,\n      y: 0,\n      resizing: false\n    };\n    this.columnMove = {\n      colSource: -1,\n      colTarget: -1,\n      rowSource: -1,\n      rowTarget: -1,\n      x: 0,\n      y: 0,\n      moving: false\n    };\n    this.menu = {\n      x: -1,\n      y: -1,\n      isShow: false,\n      itemList: [],\n      bounds: new Bounds(),\n      highlightIndex: -1,\n      dropDownMenuHighlight: []\n    };\n    this.sort = [\n      {\n        col: -1,\n        row: -1,\n        order: 'normal'\n      }\n    ];\n    this.frozen = {\n      col: -1,\n      row: -1\n    };\n    // this.scroll = {\n    //   horizontalBarPos: 0,\n    //   verticalBarPos: 0\n    // };\n    this.tablePosition = {\n      absoluteX: 0,\n      absoluteY: 0\n    };\n    this.drill = {\n      col: -1,\n      row: -1\n    };\n    this.sparkLine = {\n      col: -1,\n      row: -1\n    };\n  }\n  _initState() {\n    this.interactionState = InteractionState.default;\n    this.select = {\n      highlightScope: HighlightScope.single,\n      ranges: [],\n      cellPos: {\n        col: -1,\n        row: -1\n      },\n      selecting: false\n    };\n    this.fillHandle = {\n      isFilling: false,\n      startX: undefined,\n      startY: undefined\n    };\n    this.hover = {\n      highlightScope: HighlightScope.single,\n      cellPos: {\n        col: -1,\n        row: -1\n      }\n    };\n    this.hoverIcon = {\n      col: -1,\n      row: -1,\n      icon: null\n    };\n    this.columnResize = {\n      col: -1,\n      x: 0,\n      resizing: false\n    };\n    this.rowResize = {\n      row: -1,\n      y: 0,\n      resizing: false\n    };\n    this.columnMove = {\n      colSource: -1,\n      colTarget: -1,\n      rowSource: -1,\n      rowTarget: -1,\n      x: 0,\n      y: 0,\n      moving: false\n    };\n    this.menu = {\n      x: -1,\n      y: -1,\n      isShow: false,\n      itemList: [],\n      bounds: new Bounds(),\n      highlightIndex: -1,\n      dropDownMenuHighlight: []\n    };\n    this.sort = [\n      {\n        col: -1,\n        row: -1,\n        order: 'normal'\n      }\n    ];\n    this.frozen = {\n      col: -1,\n      row: -1\n    };\n    this.scroll = {\n      horizontalBarPos: 0,\n      verticalBarPos: 0\n    };\n    this.tablePosition = {\n      absoluteX: 0,\n      absoluteY: 0\n    };\n    this.drill = {\n      col: -1,\n      row: -1\n    };\n    this.sparkLine = {\n      col: -1,\n      row: -1\n    };\n  }\n\n  setHoverState() {\n    const { highlightMode, disableHover, disableHeaderHover } = this.table.options.hover ?? {\n      highlightMode: 'cell'\n    };\n    if (!disableHover) {\n      if (highlightMode === 'cross') {\n        this.hover.highlightScope = HighlightScope.cross;\n      } else if (highlightMode === 'row') {\n        this.hover.highlightScope = HighlightScope.row;\n      } else if (highlightMode === 'column') {\n        this.hover.highlightScope = HighlightScope.column;\n      } else if (highlightMode === 'cell') {\n        this.hover.highlightScope = HighlightScope.single;\n      }\n    } else {\n      this.hover.highlightScope = HighlightScope.none;\n    }\n\n    this.hover.singleStyle = !disableHover;\n    this.hover.disableHeader = disableHeaderHover;\n    if (this.hover.highlightScope === HighlightScope.none || disableHeaderHover) {\n      this.hover.cellPosContainHeader = {\n        col: -1,\n        row: -1\n      };\n    }\n  }\n\n  setSelectState() {\n    const {\n      // enableRowHighlight,\n      // enableColumnHighlight,\n      /** 点击表头单元格时连带body整行或整列选中 或仅选中当前单元格，默认或整行或整列选中*/\n      headerSelectMode,\n      disableSelect,\n      disableHeaderSelect,\n      highlightMode,\n      highlightInRange\n    } = Object.assign(\n      {},\n      {\n        /** 点击表头单元格时连带body整行或整列选中 或仅选中当前单元格，默认或整行或整列选中*/\n        headerSelectMode: 'inline',\n        /** 不默认设置该值了，从用户传的 cornerHeaderSelectMode 中获取 */\n        // cornerHeaderSelectMode: '',\n        disableSelect: false,\n        disableHeaderSelect: false,\n        highlightMode: 'cell',\n        highlightInRange: false\n      },\n      this.table.options.select\n    );\n\n    /** 设置 cornerHeaderSelectMode */\n    const cornerHeaderSelectMode = this.table.options.select?.cornerHeaderSelectMode\n      ? this.table.options.select?.cornerHeaderSelectMode\n      : this.table.options.select?.headerSelectMode === 'body'\n      ? this.table.options.select?.headerSelectMode\n      : 'all';\n\n    // if (enableRowHighlight && enableColumnHighlight) {\n    //   this.select.highlightScope = HighlightScope.cross;\n    // } else if (enableRowHighlight) {\n    //   this.select.highlightScope = HighlightScope.row;\n    // } else if (enableColumnHighlight) {\n    //   this.select.highlightScope = HighlightScope.column;\n    // } else\n    if (disableSelect === true) {\n      this.select.highlightScope = HighlightScope.none;\n    } else {\n      if (highlightMode === 'cross') {\n        this.select.highlightScope = HighlightScope.cross;\n      } else if (highlightMode === 'row') {\n        this.select.highlightScope = HighlightScope.row;\n      } else if (highlightMode === 'column') {\n        this.select.highlightScope = HighlightScope.column;\n      } else {\n        this.select.highlightScope = HighlightScope.single;\n      }\n    }\n\n    this.select.singleStyle = !disableSelect;\n    this.select.disableHeader = disableHeaderSelect;\n    this.select.headerSelectMode = headerSelectMode;\n\n    this.select.cornerHeaderSelectMode = cornerHeaderSelectMode;\n    this.select.highlightInRange = highlightInRange;\n    this.select.disableCtrlMultiSelect = this.table.options.keyboardOptions?.ctrlMultiSelect === false;\n  }\n\n  isSelected(col: number, row: number): boolean {\n    // if (!this.select.selecting) {\n    //   return false;\n    // }\n    let seled = false;\n    this.select.ranges.forEach((range: CellRange) => {\n      if (cellInRange(range, col, row)) {\n        seled = true;\n      }\n    });\n    return seled;\n  }\n\n  setSortState(sortState: SortState | SortState[]) {\n    const state = this;\n    sortState = !sortState || Array.isArray(sortState) ? sortState : [sortState];\n    ////this.sort[this.sort.length - 1].field = sortState[sortState.length - 1]?.field as string;\n    // this.sort.fieldKey = sortState?.fieldKey as string;\n    ////this.sort[this.sort.length - 1].order = sortState[sortState.length - 1]?.order;\n    // // 这里有一个问题，目前sortState中一般只传入了fieldKey，但是getCellRangeByField需要field\n    // const range = this.table.getCellRangeByField(this.sort.field, 0);\n    // if (range) {\n    //   this.sort.col = range.start.col;\n    //   this.sort.row = range.start.row;\n    // }\n\n    function flattenColumns(columns: any) {\n      const result: Array<any> = [];\n\n      function flatten(cols: any, parentStartIndex = 0) {\n        cols.forEach((col: any) => {\n          const startIndex = col.startInTotal\n            ? col.startInTotal + state.table.internalProps.layoutMap.leftRowSeriesNumberColumnCount ?? 0\n            : parentStartIndex;\n          if (col.columns) {\n            flatten(col.columns, startIndex);\n          } else {\n            result.push({\n              ...col,\n              startIndex\n            });\n          }\n        });\n      }\n\n      flatten(columns);\n      return result;\n    }\n\n    const sort =\n      sortState &&\n      (sortState as SortState[]).reduce((prev, item) => {\n        const column = flattenColumns((this.table.internalProps as any).columns)?.find(\n          column => column?.field === item?.field\n        );\n        //let path = (item as any)?.event?.path?.findLast((item:any)=>item.col!=undefined);\n        if (this.table.internalProps.transpose) {\n          prev.push({\n            field: item.field,\n            order: item.order,\n            row: column?.startInTotal + this.table.internalProps.layoutMap.leftRowSeriesNumberColumnCount ?? 0,\n            col: column?.level\n          } as any);\n        } else {\n          prev.push({\n            field: item.field,\n            order: item.order,\n            col: column?.startInTotal + this.table.internalProps.layoutMap.leftRowSeriesNumberColumnCount ?? 0,\n            row: column?.level\n          } as any);\n        }\n\n        return prev;\n      }, []);\n\n    this.sort = sort || [];\n  }\n\n  setFrozenState() {\n    this.frozen.col = this.table.frozenColCount - 1;\n    // this.frozen.row = 0;\n  }\n\n  updateInteractionState(mode: InteractionState) {\n    if (this.interactionState === mode) {\n      return;\n    }\n\n    if (mode === InteractionState.scrolling) {\n      this.interactionStateBeforeScroll = this.interactionState;\n    }\n\n    // console.log('updateInteractionState', mode);\n    const oldState = this.interactionState;\n    this.interactionState = mode;\n    // 处理mode 更新后逻辑\n    if (oldState === InteractionState.scrolling && mode === InteractionState.default) {\n      // this.table.scenegraph.stage.disableDirtyBounds();\n      // this.table.scenegraph.stage.render();\n      // this.table.scenegraph.stage.enableDirtyBounds();\n    }\n  }\n\n  updateHoverhighlightScope(mode: HighlightScope) {\n    if (this.hover.highlightScope === mode) {\n      return;\n    }\n    this.hover.highlightScope = mode;\n    // 处理mode 更新后逻辑\n    // ......\n  }\n\n  updateHoverPos(col: number, row: number) {\n    updateHoverPosition(this, col, row);\n  }\n\n  updateSelectPos(\n    col: number,\n    row: number,\n    isShift: boolean = false,\n    isCtrl: boolean = false,\n    isSelectAll: boolean = false,\n    makeSelectCellVisible: boolean = true,\n    skipBodyMerge: boolean = false\n  ) {\n    if (row !== -1 && row !== -1) {\n      this.select.selecting = true;\n    }\n    // trim select position\n    if (col < 0) {\n      col = -1;\n    }\n    if (row < 0) {\n      row = -1;\n    }\n    if (col > this.table.colCount - 1) {\n      col = this.table.colCount - 1;\n    }\n    if (row > this.table.rowCount - 1) {\n      row = this.table.rowCount - 1;\n    }\n    updateSelectPosition(this, col, row, isShift, isCtrl, isSelectAll, makeSelectCellVisible, skipBodyMerge);\n  }\n\n  checkCellRangeInSelect(cellPosStart: CellAddress, cellPosEnd: CellAddress) {\n    return checkMultiCellInSelect(\n      cellPosStart,\n      cellPosEnd,\n      this.select.ranges,\n      // this.select.cellPosEnd,\n      this.select.highlightScope\n    );\n  }\n\n  updateHoverIcon(col: number, row: number, target: any, cellGroup: Group) {\n    if (this.residentHoverIcon?.icon && target === this.residentHoverIcon?.icon) {\n      return; // 常驻hover icon不更新交互\n    }\n    const iconInfo = getIconAndPositionFromTarget(target);\n    if (!iconInfo) {\n      // target非icon\n      if (this.hoverIcon.icon && this.hoverIcon.icon !== this.residentHoverIcon?.icon) {\n        this.table.scenegraph.setIconNormalStyle(this.hoverIcon.icon, this.hoverIcon.col, this.hoverIcon.row);\n\n        this.hoverIcon.col = -1;\n        this.hoverIcon.col = -1;\n        this.hoverIcon.icon = null;\n        this.table.scenegraph.updateNextFrame();\n      }\n      return;\n    }\n    if (iconInfo.type === 'richtext-icon') {\n      // richtext icon 特殊处理\n      const inlineIcon = iconInfo.icon;\n      // 清除当前hover icon\n      if (this.hoverIcon.icon && this.hoverIcon.icon !== this.residentHoverIcon?.icon) {\n        this.table.scenegraph.setIconNormalStyle(this.hoverIcon.icon, this.hoverIcon.col, this.hoverIcon.row);\n\n        this.hoverIcon.col = -1;\n        this.hoverIcon.col = -1;\n        this.hoverIcon.icon = null;\n        this.table.scenegraph.updateNextFrame();\n      }\n      // hover展示tooltip\n      if (inlineIcon.attribute.tooltip) {\n        const tooltipOptions: TooltipOptions = {\n          content: inlineIcon.attribute.tooltip.title,\n          referencePosition: {\n            rect: iconInfo.position,\n            placement: inlineIcon.attribute.tooltip.placement\n          },\n          style: Object.assign(\n            {},\n            this.table.internalProps.theme?.tooltipStyle,\n            inlineIcon.tooltip?.style,\n            inlineIcon.attribute?.tooltip?.style\n          ),\n          disappearDelay: inlineIcon.attribute.tooltip.disappearDelay\n        };\n        if (!this.table.internalProps.tooltipHandler.isBinded(tooltipOptions)) {\n          this.table.showTooltip(col, row, tooltipOptions);\n        }\n      }\n    } else {\n      // const icon = target as Icon;\n      const icon = iconInfo.icon;\n      if (icon !== this.hoverIcon.icon) {\n        if (this.hoverIcon.icon && this.hoverIcon.icon !== this.residentHoverIcon?.icon) {\n          this.table.scenegraph.setIconNormalStyle(this.hoverIcon.icon, this.hoverIcon.col, this.hoverIcon.row);\n        }\n\n        this.hoverIcon.col = col;\n        this.hoverIcon.row = row;\n        this.hoverIcon.icon = icon;\n\n        // 更新icon样式\n        this.table.scenegraph.setIconHoverStyle(icon, col, row, cellGroup);\n        this.table.scenegraph.updateNextFrame();\n      }\n    }\n  }\n\n  isResizeCol(): boolean {\n    return this.columnResize.resizing;\n  }\n  isResizeRow(): boolean {\n    return this.rowResize.resizing;\n  }\n  isFillHandle(): boolean {\n    return this.fillHandle.isFilling;\n  }\n  isSelecting(): boolean {\n    return this.select.selecting;\n  }\n  endSelectCells(fireListener: boolean = true, fireClear: boolean = true) {\n    if (this.select.selecting) {\n      this.select.selecting = false;\n      if (this.select.ranges.length === 0) {\n        return;\n      }\n\n      // this.select.ranges deduplication\n      const currentRange = this.select.ranges[this.select.ranges.length - 1];\n\n      // deal with merge cell\n      if (\n        !this.table.isSeriesNumber(this.select.cellPos.col, this.select.cellPos.row) &&\n        !this.table.isHeader(this.select.cellPos.col, this.select.cellPos.row)\n      ) {\n        expendCellRange(currentRange, this.table);\n      }\n\n      let isSame = false;\n      for (let i = 0; i < this.select.ranges.length - 1; i++) {\n        const range = this.select.ranges[i];\n        if (\n          range &&\n          range.start.col === currentRange.start.col &&\n          range.start.row === currentRange.start.row &&\n          range.end.col === currentRange.end.col &&\n          range.end.row === currentRange.end.row\n        ) {\n          isSame = true;\n          break;\n        }\n      }\n      if (isSame) {\n        this.select.ranges.pop();\n        // remove selecting rect\n        deleteAllSelectingBorder(this.table.scenegraph);\n        this.table.scenegraph.selectingRangeComponents.clear();\n      } else {\n        selectEnd(this.table.scenegraph);\n      }\n\n      // 触发SELECTED_CELL\n      const lastCol = this.select.ranges[this.select.ranges.length - 1].end.col;\n      const lastRow = this.select.ranges[this.select.ranges.length - 1].end.row;\n      fireListener &&\n        this.table.fireListeners(TABLE_EVENT_TYPE.SELECTED_CELL, {\n          ranges: this.select.ranges,\n          col: lastCol,\n          row: lastRow\n        });\n    } else if (fireClear) {\n      if (this.select.ranges.length === 0) {\n        this.table.fireListeners(TABLE_EVENT_TYPE.SELECTED_CLEAR, {});\n      }\n    }\n  }\n\n  endResizeCol() {\n    setTimeout(() => {\n      this.columnResize.resizing = false;\n    }, 0);\n    this.table.scenegraph.updateChartSizeForResizeColWidth(this.columnResize.col);\n    this.checkFrozen();\n    this.table.scenegraph.component.hideResizeCol();\n    this.table.scenegraph.updateNextFrame();\n  }\n  startResizeCol(col: number, x: number, y: number, isRightFrozen?: boolean) {\n    this.columnResize.resizing = true;\n    this.columnResize.col = col;\n    this.columnResize.x = x;\n    this.columnResize.isRightFrozen = isRightFrozen;\n\n    this.table.scenegraph.component.showResizeCol(col, y, isRightFrozen);\n\n    // // 调整列宽期间清空选中清空\n    // const isHasSelected = !!this.select.ranges?.length;\n    // this.updateSelectPos(-1, -1);\n    // this.endSelectCells(true, isHasSelected);\n    this.table.scenegraph.updateNextFrame();\n  }\n  updateResizeCol(xInTable: number, yInTable: number) {\n    updateResizeColumn(xInTable, yInTable, this);\n  }\n\n  endResizeRow() {\n    setTimeout(() => {\n      this.rowResize.resizing = false;\n    }, 0);\n    this.table.scenegraph.updateChartSizeForResizeRowHeight(this.rowResize.row);\n    // this.checkFrozen();\n    this.table.scenegraph.component.hideResizeRow();\n    this.table.scenegraph.updateNextFrame();\n  }\n  startResizeRow(row: number, x: number, y: number, isBottomFrozen?: boolean) {\n    this.rowResize.resizing = true;\n    this.rowResize.row = row;\n    this.rowResize.y = y;\n    this.rowResize.isBottomFrozen = isBottomFrozen;\n\n    this.table.scenegraph.component.showResizeRow(row, x, isBottomFrozen);\n\n    // // 调整列宽期间清空选中清空\n    // const isHasSelected = !!this.select.ranges?.length;\n    // this.updateSelectPos(-1, -1);\n    // this.endSelectCells(true, isHasSelected);\n    this.table.scenegraph.updateNextFrame();\n  }\n  updateResizeRow(xInTable: number, yInTable: number) {\n    updateResizeRow(xInTable, yInTable, this);\n  }\n\n  startFillSelect(x: number, y: number) {\n    this.fillHandle.isFilling = true;\n    this.fillHandle.startX = x;\n    this.fillHandle.startY = y;\n    const currentRange = this.select.ranges[this.select.ranges.length - 1];\n    this.fillHandle.beforeFillMinCol = Math.min(currentRange.start.col, currentRange.end.col);\n    this.fillHandle.beforeFillMinRow = Math.min(currentRange.start.row, currentRange.end.row);\n    this.fillHandle.beforeFillMaxCol = Math.max(currentRange.start.col, currentRange.end.col);\n    this.fillHandle.beforeFillMaxRow = Math.max(currentRange.start.row, currentRange.end.row);\n    // this.table.scenegraph.updateNextFrame();\n    this.table.fireListeners(TABLE_EVENT_TYPE.MOUSEDOWN_FILL_HANDLE, {});\n  }\n  endFillSelect() {\n    this.fillHandle.isFilling = false;\n    this.fillHandle.startX = undefined;\n    this.fillHandle.startY = undefined;\n    this.fillHandle.directionRow = undefined;\n    const currentMinCol = Math.min(this.select.ranges[0].start.col, this.select.ranges[0].end.col);\n    const currentMinRow = Math.min(this.select.ranges[0].start.row, this.select.ranges[0].end.row);\n    const currentMaxCol = Math.max(this.select.ranges[0].start.col, this.select.ranges[0].end.col);\n    const currentMaxRow = Math.max(this.select.ranges[0].start.row, this.select.ranges[0].end.row);\n    //如果选中区域没有发生变化 不触发事件\n    if (\n      this.fillHandle.beforeFillMinCol !== currentMinCol ||\n      this.fillHandle.beforeFillMinRow !== currentMinRow ||\n      this.fillHandle.beforeFillMaxCol !== currentMaxCol ||\n      this.fillHandle.beforeFillMaxRow !== currentMaxRow\n    ) {\n      this.table.eventManager.isDraging &&\n        this.table.fireListeners(TABLE_EVENT_TYPE.DRAG_FILL_HANDLE_END, { direction: this.fillHandle.direction });\n    }\n    this.fillHandle.beforeFillMaxCol = undefined;\n    this.fillHandle.beforeFillMaxRow = undefined;\n    this.fillHandle.beforeFillMinCol = undefined;\n    this.fillHandle.beforeFillMinRow = undefined;\n  }\n\n  startMoveCol(col: number, row: number, x: number, y: number, event: MouseEvent | PointerEvent | TouchEvent) {\n    startMoveCol(col, row, x, y, this, event);\n  }\n  updateMoveCol(col: number, row: number, x: number, y: number, event: MouseEvent | PointerEvent | TouchEvent) {\n    updateMoveCol(col, row, x, y, this, event);\n  }\n  isMoveCol(): boolean {\n    return this.columnMove.moving;\n  }\n  endMoveCol(): boolean {\n    return endMoveCol(this);\n  }\n\n  checkFrozen() {\n    // 判断固定列的总宽度 是否过大\n    // let originalFrozenColCount =\n    //   this.table.isListTable() && !this.table.internalProps.transpose\n    //     ? this.table.options.frozenColCount\n    //     : this.table.isPivotChart()\n    //     ? this.table.rowHeaderLevelCount ?? 0\n    //     : Math.max(\n    //         (this.table.rowHeaderLevelCount ?? 0) + this.table.internalProps.layoutMap.leftRowSeriesNumberColumnCount,\n    //         this.table.options.frozenColCount ?? 0\n    //       );\n    let originalFrozenColCount = this.table.options.frozenColCount\n      ? this.table.options.frozenColCount\n      : this.table.isPivotTable() || (this.table.isListTable() && this.table.internalProps.transpose)\n      ? (this.table.rowHeaderLevelCount ?? 0) + this.table.internalProps.layoutMap.leftRowSeriesNumberColumnCount\n      : 0;\n\n    if (originalFrozenColCount) {\n      if (originalFrozenColCount > this.table.colCount) {\n        originalFrozenColCount = this.table.colCount;\n      }\n\n      const maxFrozenWidth = this.table._getMaxFrozenWidth();\n      if (this.table.getColsWidth(0, originalFrozenColCount - 1) > maxFrozenWidth) {\n        if (this.table.internalProps.unfreezeAllOnExceedsMaxWidth) {\n          this.table._setFrozenColCount(0);\n          this.setFrozenCol(-1);\n        } else {\n          const computedFrozenColCount = this.table._getComputedFrozenColCount(originalFrozenColCount);\n          this.table._setFrozenColCount(computedFrozenColCount);\n          this.setFrozenCol(computedFrozenColCount);\n        }\n      } else if (this.table.frozenColCount !== originalFrozenColCount) {\n        this.table._setFrozenColCount(originalFrozenColCount);\n        this.setFrozenCol(originalFrozenColCount);\n      }\n    }\n  }\n  setFrozenCol(col: number) {\n    if (col !== this.frozen.col) {\n      // const oldFrozenCol = this.frozen.col;\n      this.frozen.col = col;\n\n      // 更新scenegraph，这里因为dealFreeze更新了table里存储的frozen信息，会影响scenegraph里的getCell\n      // 因此先更新scenegraph结构再更新icon\n      this.table.scenegraph.updateFrozen();\n\n      // 更新icon\n      this.table.scenegraph.updateFrozenIcon(0, this.table.colCount - 1);\n    } else {\n      this.table.scenegraph.updateFrozenIcon(0, this.table.colCount - 1);\n    }\n  }\n  setFrozenRow(row: number) {\n    if (row !== this.frozen.row) {\n      // const oldFrozenCol = this.frozen.col;\n      this.frozen.row = row;\n\n      // 更新scenegraph，这里因为dealFreeze更新了table里存储的frozen信息，会影响scenegraph里的getCell\n      // 因此先更新scenegraph结构再更新icon\n      this.table.scenegraph.updateRowFrozen();\n    }\n  }\n  checkVerticalScrollBarEnd() {\n    const totalHeight = this.table.getAllRowsHeight();\n    const scrollTop = this.scroll.verticalBarPos;\n    const viewHeight = this.table.tableNoFrameHeight;\n\n    if (scrollTop + viewHeight >= totalHeight) {\n      this.table.fireListeners(TABLE_EVENT_TYPE.SCROLL_VERTICAL_END, {\n        scrollTop,\n        scrollLeft: this.scroll.horizontalBarPos,\n        scrollHeight: this.table.theme.scrollStyle?.width,\n        scrollWidth: this.table.theme.scrollStyle?.width,\n        viewHeight,\n        viewWidth: this.table.tableNoFrameWidth\n      });\n    }\n  }\n  checkHorizontalScrollBarEnd() {\n    const totalWidth = this.table.getAllColsWidth();\n    const scrollLeft = this.scroll.horizontalBarPos;\n    const viewWidth = this.table.tableNoFrameWidth;\n\n    if (scrollLeft + viewWidth >= totalWidth) {\n      this.table.fireListeners(TABLE_EVENT_TYPE.SCROLL_HORIZONTAL_END, {\n        scrollTop: this.scroll.verticalBarPos,\n        scrollLeft,\n        scrollHeight: this.table.theme.scrollStyle?.width,\n        scrollWidth: this.table.theme.scrollStyle?.width,\n        viewHeight: this.table.tableNoFrameHeight,\n        viewWidth\n      });\n    }\n  }\n  updateVerticalScrollBar(yRatio: number) {\n    const totalHeight = this.table.getAllRowsHeight();\n    const oldVerticalBarPos = this.scroll.verticalBarPos;\n\n    let verticalBarPos = Math.ceil(yRatio * (totalHeight - this.table.scenegraph.height));\n    if (!isValid(verticalBarPos) || isNaN(verticalBarPos)) {\n      verticalBarPos = 0;\n    }\n    // verticalBarPos -= this.table.scenegraph.proxy.deltaY;\n    const dy = verticalBarPos - this.table.scenegraph.proxy.deltaY - oldVerticalBarPos;\n\n    const canScroll = this.table.fireListeners(TABLE_EVENT_TYPE.CAN_SCROLL, {\n      event: undefined,\n      scrollTop: verticalBarPos - this.table.scenegraph.proxy.deltaY,\n      scrollLeft: this.scroll.horizontalBarPos,\n      scrollHeight: this.table.theme.scrollStyle?.width,\n      scrollWidth: this.table.theme.scrollStyle?.width,\n      viewHeight: this.table.tableNoFrameHeight,\n      viewWidth: this.table.tableNoFrameWidth,\n      scrollDirection: 'vertical',\n      scrollRatioY: yRatio,\n      dy\n    });\n\n    if (canScroll.some(value => value === false)) {\n      // reset scrollbar pos\n      const yRatio = this.scroll.verticalBarPos / (totalHeight - this.table.scenegraph.height);\n      this.table.scenegraph.component.updateVerticalScrollBarPos(yRatio);\n      return;\n    }\n\n    this.scroll.verticalBarPos = verticalBarPos;\n    this.table.scenegraph.setY(-this.scroll.verticalBarPos, yRatio === 1);\n    this.scroll.verticalBarPos -= this.table.scenegraph.proxy.deltaY;\n    this.table.scenegraph.proxy.deltaY = 0;\n\n    // 滚动期间清空选中清空\n    this.updateHoverPos(-1, -1);\n    // this.updateSelectPos(-1, -1);\n\n    this.table.fireListeners(TABLE_EVENT_TYPE.SCROLL, {\n      event: undefined,\n      scrollTop: this.scroll.verticalBarPos,\n      scrollLeft: this.scroll.horizontalBarPos,\n      scrollHeight: this.table.theme.scrollStyle?.width,\n      scrollWidth: this.table.theme.scrollStyle?.width,\n      viewHeight: this.table.tableNoFrameHeight,\n      viewWidth: this.table.tableNoFrameWidth,\n      scrollDirection: 'vertical',\n      scrollRatioY: yRatio,\n      dy\n    });\n\n    if (oldVerticalBarPos !== this.scroll.verticalBarPos) {\n      this.checkVerticalScrollBarEnd();\n    }\n  }\n  updateHorizontalScrollBar(xRatio: number) {\n    const totalWidth = this.table.getAllColsWidth();\n    const oldHorizontalBarPos = this.scroll.horizontalBarPos;\n\n    let horizontalBarPos = Math.ceil(xRatio * (totalWidth - this.table.scenegraph.width));\n    if (!isValid(horizontalBarPos) || isNaN(horizontalBarPos)) {\n      horizontalBarPos = 0;\n    }\n    // horizontalBarPos -= this.table.scenegraph.proxy.deltaX;\n    const dx = horizontalBarPos - this.table.scenegraph.proxy.deltaX - oldHorizontalBarPos;\n\n    const canScroll = this.table.fireListeners(TABLE_EVENT_TYPE.CAN_SCROLL, {\n      event: undefined,\n      scrollTop: this.scroll.verticalBarPos,\n      scrollLeft: horizontalBarPos - this.table.scenegraph.proxy.deltaX,\n      scrollHeight: this.table.theme.scrollStyle?.width,\n      scrollWidth: this.table.theme.scrollStyle?.width,\n      viewHeight: this.table.tableNoFrameHeight,\n      viewWidth: this.table.tableNoFrameWidth,\n      scrollDirection: 'horizontal',\n      scrollRatioX: xRatio,\n      dx: dx\n    });\n\n    if (canScroll.some(value => value === false)) {\n      // reset scrollbar pos\n      const xRatio = this.scroll.horizontalBarPos / (totalWidth - this.table.scenegraph.width);\n      this.table.scenegraph.component.updateHorizontalScrollBarPos(xRatio);\n      return;\n    }\n\n    // this.scroll.horizontalBarPos = Math.ceil(xRatio * (totalWidth - this.table.scenegraph.width));\n    // if (!isValid(this.scroll.horizontalBarPos) || isNaN(this.scroll.horizontalBarPos)) {\n    //   this.scroll.horizontalBarPos = 0;\n    // }\n    this.scroll.horizontalBarPos = horizontalBarPos;\n    this.table.scenegraph.setX(-this.scroll.horizontalBarPos, xRatio === 1);\n    this.scroll.horizontalBarPos -= this.table.scenegraph.proxy.deltaX;\n    this.table.scenegraph.proxy.deltaX = 0;\n    // console.log(this.table.scenegraph.bodyGroup.lastChild.attribute);\n    // this.table.scenegraph.bodyGroup.lastChild.onBeforeAttributeUpdate = attr => {\n    //   if (attr.x) {\n    //     debugger;\n    //   }\n    // };\n    // 滚动期间清空选中清空\n    this.updateHoverPos(-1, -1);\n    // this.updateSelectPos(-1, -1);\n    this.table.fireListeners(TABLE_EVENT_TYPE.SCROLL, {\n      event: undefined,\n      scrollTop: this.scroll.verticalBarPos,\n      scrollLeft: this.scroll.horizontalBarPos,\n      scrollHeight: this.table.theme.scrollStyle?.width,\n      scrollWidth: this.table.theme.scrollStyle?.width,\n      viewHeight: this.table.tableNoFrameHeight,\n      viewWidth: this.table.tableNoFrameWidth,\n      scrollDirection: 'horizontal',\n      scrollRatioX: xRatio,\n      dx: dx\n    });\n\n    if (oldHorizontalBarPos !== this.scroll.horizontalBarPos) {\n      this.checkHorizontalScrollBarEnd();\n    }\n  }\n  setScrollTop(top: number, event?: FederatedWheelEvent, triggerEvent: boolean = true) {\n    // 矫正top值范围\n    const totalHeight = this.table.getAllRowsHeight();\n    // _disableColumnAndRowSizeRound环境中，可能出现\n    // getAllColsWidth/getAllRowsHeight(A) + getAllColsWidth/getAllRowsHeight(B) < getAllColsWidth/getAllRowsHeight(A+B)\n    // （由于小数在取数时被省略）\n    // 这里加入tolerance，避免出现无用滚动\n    const sizeTolerance = this.table.options.customConfig?._disableColumnAndRowSizeRound ? 1 : 0;\n    top = Math.max(0, Math.min(top, totalHeight - this.table.scenegraph.height - sizeTolerance));\n    top = Math.ceil(top);\n    const oldVerticalBarPos = this.scroll.verticalBarPos;\n    const yRatio = top / (totalHeight - this.table.scenegraph.height);\n\n    if (\n      (oldVerticalBarPos !== top || this.table.options?.customConfig?.scrollEventAlwaysTrigger === true) &&\n      triggerEvent\n    ) {\n      let verticalBarPos = top;\n      if (!isValid(verticalBarPos) || isNaN(verticalBarPos)) {\n        verticalBarPos = 0;\n      }\n\n      const dy = verticalBarPos - oldVerticalBarPos;\n      const canScroll = this.table.fireListeners(TABLE_EVENT_TYPE.CAN_SCROLL, {\n        event: (event as FederatedWheelEvent)?.nativeEvent as WheelEvent,\n        scrollTop: verticalBarPos,\n        scrollLeft: this.scroll.horizontalBarPos,\n        scrollHeight: this.table.theme.scrollStyle?.width,\n        scrollWidth: this.table.theme.scrollStyle?.width,\n        viewHeight: this.table.tableNoFrameHeight,\n        viewWidth: this.table.tableNoFrameWidth,\n        scrollDirection: 'vertical',\n        scrollRatioY: yRatio,\n        dy\n      });\n\n      if (canScroll.some(value => value === false)) {\n        // reset scrollbar pos\n        const yRatio = this.scroll.verticalBarPos / (totalHeight - this.table.scenegraph.height);\n        this.table.scenegraph.component.updateVerticalScrollBarPos(yRatio);\n        return;\n      }\n    }\n\n    // 滚动期间清空选中清空 如果调用接口hover状态需要保留，但是如果不调用updateHoverPos透视图处于hover状态的图就不能及时更新 所以这里单独判断了isPivotChart\n    if (top !== this.scroll.verticalBarPos || this.table.isPivotChart()) {\n      this.updateHoverPos(-1, -1);\n    }\n    // this.table.stateManager.updateSelectPos(-1, -1);\n    this.scroll.verticalBarPos = top;\n    if (!isValid(this.scroll.verticalBarPos) || isNaN(this.scroll.verticalBarPos)) {\n      this.scroll.verticalBarPos = 0;\n    }\n    // 设置scenegraph坐标\n    this.table.scenegraph.setY(-top);\n\n    // 更新scrollbar位置\n    this.table.scenegraph.component.updateVerticalScrollBarPos(yRatio);\n\n    const dy = this.scroll.verticalBarPos - oldVerticalBarPos;\n    this.table.fireListeners(TABLE_EVENT_TYPE.SCROLL, {\n      event: (event as FederatedWheelEvent)?.nativeEvent as WheelEvent,\n      scrollTop: this.scroll.verticalBarPos,\n      scrollLeft: this.scroll.horizontalBarPos,\n      scrollHeight: this.table.theme.scrollStyle?.width,\n      scrollWidth: this.table.theme.scrollStyle?.width,\n      viewHeight: this.table.tableNoFrameHeight,\n      viewWidth: this.table.tableNoFrameWidth,\n      scrollDirection: 'vertical',\n      scrollRatioY: yRatio,\n      dy\n    });\n\n    if (oldVerticalBarPos !== top && triggerEvent) {\n      this.checkVerticalScrollBarEnd();\n    }\n  }\n  setScrollLeft(left: number, event?: FederatedWheelEvent, triggerEvent: boolean = true) {\n    const oldScrollLeft = this.table.scrollLeft;\n    // 矫正left值范围\n    const totalWidth = this.table.getAllColsWidth();\n    const frozenWidth = this.table.getFrozenColsWidth();\n\n    // _disableColumnAndRowSizeRound环境中，可能出现\n    // getAllColsWidth/getAllRowsHeight(A) + getAllColsWidth/getAllRowsHeight(B) < getAllColsWidth/getAllRowsHeight(A+B)\n    // （由于小数在取数时被省略）\n    // 这里加入tolerance，避免出现无用滚动\n    const sizeTolerance = this.table.options.customConfig?._disableColumnAndRowSizeRound ? 1 : 0;\n\n    left = Math.max(0, Math.min(left, totalWidth - this.table.scenegraph.width - sizeTolerance));\n    left = Math.ceil(left);\n    const oldHorizontalBarPos = this.scroll.horizontalBarPos;\n    const xRatio = left / (totalWidth - this.table.scenegraph.width);\n\n    // if (oldHorizontalBarPos !== left && triggerEvent) {\n    if (\n      (oldHorizontalBarPos !== left || this.table.options?.customConfig?.scrollEventAlwaysTrigger === true) &&\n      triggerEvent\n    ) {\n      let horizontalBarPos = left;\n      if (!isValid(horizontalBarPos) || isNaN(horizontalBarPos)) {\n        horizontalBarPos = 0;\n      }\n      const dx = horizontalBarPos - oldHorizontalBarPos;\n      const canScroll = this.table.fireListeners(TABLE_EVENT_TYPE.CAN_SCROLL, {\n        event: (event as FederatedWheelEvent)?.nativeEvent as WheelEvent,\n        scrollTop: this.scroll.verticalBarPos,\n        scrollLeft: horizontalBarPos,\n        scrollHeight: this.table.theme.scrollStyle?.width,\n        scrollWidth: this.table.theme.scrollStyle?.width,\n        viewHeight: this.table.tableNoFrameHeight,\n        viewWidth: this.table.tableNoFrameWidth,\n        scrollDirection: 'horizontal',\n        scrollRatioX: xRatio,\n        dx\n      });\n\n      if (canScroll.some(value => value === false)) {\n        // reset scrollbar pos\n        const xRatio = this.scroll.horizontalBarPos / (totalWidth - this.table.scenegraph.width);\n        this.table.scenegraph.component.updateHorizontalScrollBarPos(xRatio);\n        return;\n      }\n    }\n\n    // 滚动期间清空选中清空\n    if (left !== this.scroll.horizontalBarPos) {\n      this.updateHoverPos(-1, -1);\n    }\n    // this.table.stateManager.updateSelectPos(-1, -1);\n    this.scroll.horizontalBarPos = left;\n    if (!isValid(this.scroll.horizontalBarPos) || isNaN(this.scroll.horizontalBarPos)) {\n      this.scroll.horizontalBarPos = 0;\n    }\n\n    // 设置scenegraph坐标\n    this.table.scenegraph.setX(-left);\n\n    // 更新scrollbar位置\n    this.table.scenegraph.component.updateHorizontalScrollBarPos(xRatio);\n\n    const dx = this.scroll.horizontalBarPos - oldHorizontalBarPos;\n    this.table.fireListeners(TABLE_EVENT_TYPE.SCROLL, {\n      event: (event as FederatedWheelEvent)?.nativeEvent as WheelEvent,\n      scrollTop: this.scroll.verticalBarPos,\n      scrollLeft: this.scroll.horizontalBarPos,\n      scrollHeight: this.table.theme.scrollStyle?.width,\n      scrollWidth: this.table.theme.scrollStyle?.width,\n      viewHeight: this.table.tableNoFrameHeight,\n      viewWidth: this.table.tableNoFrameWidth,\n      scrollDirection: 'horizontal',\n      scrollRatioX: xRatio,\n      dx\n    });\n\n    if (oldHorizontalBarPos !== left && triggerEvent) {\n      this.checkHorizontalScrollBarEnd();\n    }\n  }\n  hideVerticalScrollBar() {\n    this.table.scenegraph.component.hideVerticalScrollBar();\n  }\n  showVerticalScrollBar(autoHide?: boolean) {\n    this.table.scenegraph.component.showVerticalScrollBar();\n    if (autoHide) {\n      // 滚轮触发滚动条显示后，异步隐藏\n      clearTimeout(this._clearVerticalScrollBar);\n      this._clearVerticalScrollBar = setTimeout(() => {\n        this.table.scenegraph?.component.hideVerticalScrollBar();\n      }, 1000);\n    }\n  }\n  hideHorizontalScrollBar() {\n    this.table.scenegraph.component.hideHorizontalScrollBar();\n  }\n  showHorizontalScrollBar(autoHide?: boolean) {\n    this.table.scenegraph.component.showHorizontalScrollBar();\n    this.table.scenegraph?.component.showFrozenColumnShadow();\n    if (autoHide) {\n      // 滚轮触发滚动条显示后，异步隐藏\n      clearTimeout(this._clearHorizontalScrollBar);\n      this._clearHorizontalScrollBar = setTimeout(() => {\n        this.table.scenegraph?.component.hideFrozenColumnShadow();\n        this.table.scenegraph?.component.hideHorizontalScrollBar();\n      }, 1000);\n    }\n  }\n\n  triggerContextMenu(col: number, row: number, x: number, y: number) {\n    if (this.menu.isShow && this.menu.x === x && this.menu.y === y) {\n      this.hideMenu();\n    } else {\n      this.showContextMenu(col, row, x, y);\n    }\n  }\n\n  showContextMenu(col: number, row: number, x: number, y: number) {\n    if (this.table.internalProps.menu?.contextMenuItems) {\n      if (this.table.internalProps.menu.renderMode === 'html') {\n        // dom菜单通过LG_EVENT_TYPE.DROPDOWN_ICON_CLICK事件触发\n        this.menu.isShow = true;\n      } else {\n        this.menu.isShow = true;\n        this.menu.x = x;\n        this.menu.y = y;\n        this.table.scenegraph.component.menu.attach(x, y, col, row, MenuType.contextmenu);\n      }\n      this.table.fireListeners(TABLE_EVENT_TYPE.SHOW_MENU, { x, y, col, row, type: 'contextmenu' });\n    }\n  }\n\n  triggerDropDownMenu(col: number, row: number, x: number, y: number, event: Event) {\n    this.table.fireListeners(TABLE_EVENT_TYPE.DROPDOWN_ICON_CLICK, {\n      col,\n      row,\n      event\n    });\n    if (this.menu.isShow) {\n      this.hideMenu();\n    } else {\n      this.showDropDownMenu(col, row, x, y);\n    }\n  }\n\n  showDropDownMenu(col: number, row: number, x: number, y: number) {\n    if (this.table.internalProps.menu.renderMode === 'html') {\n      // dom菜单通过LG_EVENT_TYPE.CONTEXTMENU_CELL事件触发\n      this.menu.isShow = true;\n    } else {\n      this.menu.isShow = true;\n      this.table.scenegraph.component.menu.attach(x, y, col, row, MenuType.dropDown);\n      this.menu.bounds = this.table.scenegraph.component.menu.bounds as Bounds;\n    }\n    this.table.fireListeners(TABLE_EVENT_TYPE.SHOW_MENU, { x, y, col, row, type: 'dropDown' });\n\n    if (this.residentHoverIcon) {\n      this.table.scenegraph.setIconNormalStyle(\n        this.residentHoverIcon.icon,\n        this.residentHoverIcon.col,\n        this.residentHoverIcon.row\n      );\n    }\n    // 常驻显示下拉菜单hover按钮\n    const cellGroup = this.table.scenegraph.getCell(col, row);\n    let icon: Icon;\n    cellGroup.forEachChildren((child: Icon) => {\n      if (child.attribute.funcType === IconFuncTypeEnum.dropDown) {\n        icon = child;\n        return true;\n      }\n      return false;\n    });\n    if (icon) {\n      this.residentHoverIcon = {\n        col,\n        row,\n        icon\n      };\n      this.table.scenegraph.setIconHoverStyle(\n        this.residentHoverIcon.icon,\n        this.residentHoverIcon.col,\n        this.residentHoverIcon.row,\n        cellGroup\n      );\n      // (icon as any).oldVisibleTime = icon.attribute.visibleTime;\n      // icon.setAttribute('visibleTime', 'always');\n      // icon.setAttribute('opacity', 1);\n      this.table.scenegraph.residentHoverIcon(col, row);\n    }\n  }\n\n  hideMenu() {\n    if (this.menu.isShow) {\n      this.table.fireListeners(TABLE_EVENT_TYPE.DROPDOWN_MENU_CLEAR, null);\n      this.table.fireListeners(TABLE_EVENT_TYPE.HIDE_MENU, null);\n      this.menu.isShow = false;\n      this.table.scenegraph.component.menu.detach();\n      if (this.residentHoverIcon) {\n        this.table.scenegraph.setIconNormalStyle(\n          this.residentHoverIcon.icon,\n          this.residentHoverIcon.col,\n          this.residentHoverIcon.row\n        );\n        // this.residentHoverIcon.icon.setAttribute('visibleTime', (this.residentHoverIcon.icon as any).oldVisibleTime);\n        // this.residentHoverIcon.icon.setAttribute(\n        //   'opacity',\n        //   this.residentHoverIcon.icon.attribute.visibleTime === 'always' ? 1 : 0\n        // );\n        this.table.scenegraph.resetResidentHoverIcon(this.residentHoverIcon.col, this.residentHoverIcon.row);\n        this.residentHoverIcon = null;\n      }\n    }\n  }\n\n  setDropDownMenuHighlight(dropDownMenuInfo: DropDownMenuHighlightInfo[]): void {\n    this.menu.dropDownMenuHighlight = dropDownMenuInfo;\n    for (let i = 0; i < dropDownMenuInfo.length; i++) {\n      const { col, row } = dropDownMenuInfo[i];\n      const range = this.table.getCellRange(col, row);\n      if (!range) {\n        continue;\n      }\n      for (let col = range.start.col; col <= range.end.col; col++) {\n        for (let row = range.start.row; row <= range.end.row; row++) {\n          this.table.scenegraph.updateCellContent(col, row);\n        }\n      }\n    }\n  }\n  dropDownMenuIsHighlight(colNow: number, rowNow: number, index: number): boolean {\n    const highlights = this.menu.dropDownMenuHighlight;\n    if (Array.isArray(highlights)) {\n      for (let i = 0; i < highlights.length; i++) {\n        const highlight = highlights[i];\n        let { col, row } = highlight;\n        const { field, menuKey } = highlight;\n        // 这部分比较hack，需要和张宏再确认一下\n        // 没有col和row时，通过field或cellHeaderPaths确定col和row\n        if (typeof col !== 'number' || typeof row !== 'number') {\n          if (this.table.isPivotTable() && typeof Array.isArray(field)) {\n            const cellAddress = (this.table.internalProps.layoutMap as PivotHeaderLayoutMap).getPivotCellAdress(\n              field as IDimensionInfo[]\n            );\n            if (!cellAddress) {\n              continue;\n            }\n            col = cellAddress.col;\n            row = cellAddress.row;\n          } else {\n            const cellAddress = this.table.internalProps.layoutMap.getHeaderCellAddressByField(field as string);\n            if (!cellAddress) {\n              continue;\n            }\n            col = cellAddress.col;\n            row = cellAddress.row;\n          }\n        }\n\n        if (isValid(col) && isValid(row) && this.table.isCellRangeEqual(colNow, rowNow, col, row)) {\n          // 手动查询menuKey对应的dropDownIndex\n          const headerC = this.table._getHeaderLayoutMap(col ?? colNow, row ?? rowNow);\n\n          let dropDownMenu = (headerC as HeaderData).dropDownMenu || this.table.globalDropDownMenu;\n          if (typeof dropDownMenu === 'function') {\n            dropDownMenu = dropDownMenu({ row, col, table: this.table });\n          }\n\n          if (dropDownMenu) {\n            for (let i = 0; i < dropDownMenu.length; i++) {\n              const item: any = dropDownMenu[i];\n              if (isObject(item) && ((item as any).menuKey || (item as any).text) === (menuKey || '') && i === index) {\n                // return i === index;\n                return true;\n              } else if (isString(item) && item === menuKey && i === index) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n  triggerSort(col: number, row: number, iconMark: Icon, event: Event) {\n    if (this.table.isPivotTable()) {\n      // 透视表不执行sort操作\n      const sortState = (this.table as PivotTableAPI).getPivotSortState(col, row);\n\n      const order = sortState ? (sortState.toUpperCase() as SortOrder) : 'NORMAL';\n      const new_order = order === 'ASC' ? 'DESC' : order === 'DESC' ? 'NORMAL' : 'ASC';\n      // const new_order = order === 'ASC' ? 'DESC' : 'ASC';\n      (this.table as PivotTable).sort(col, row, new_order);\n\n      // // 触发透视表排序按钮点击\n      this.table.fireListeners(PIVOT_TABLE_EVENT_TYPE.PIVOT_SORT_CLICK, {\n        col: col,\n        row: row,\n        order: order || 'normal',\n        dimensionInfo: (this.table.internalProps.layoutMap as PivotHeaderLayoutMap).getPivotDimensionInfo(col, row),\n        cellLocation: this.table.getCellLocation(col, row),\n        event\n      });\n      return;\n    }\n\n    const previousSort = [...this.sort];\n    const previousSortItem =\n      this.table.internalProps.multipleSort || !previousSort.length ? null : this.sort[this.sort.length - 1];\n\n    // 执行sort\n    dealSort(col, row, this.table as ListTableAPI, event);\n\n    const range = this.table.getCellRange(col, row);\n    const currentSortItem = this.sort.find(item => item.col === range.start.col && item.row === range.start.row);\n\n    const oldSortCol = this.table.internalProps.multipleSort || !previousSortItem ? null : previousSortItem.col;\n    const oldSortRow = this.table.internalProps.multipleSort || !previousSortItem ? null : previousSortItem.row;\n    //currentSortItem.col = col;\n    //currentSortItem.row = row;\n\n    const currentSortItemIndex = previousSort.findIndex(item => item.col === col && item.row === row);\n    if (currentSortItemIndex >= 0) {\n      previousSort.splice(currentSortItemIndex, 1);\n    }\n\n    // 更新icon\n    this.table.scenegraph.updateSortIcon({\n      col: col,\n      row: row,\n      iconMark,\n      order: currentSortItem?.order,\n      oldSortCol,\n      oldSortRow,\n      oldIconMark: previousSortItem?.icon\n    });\n    if (currentSortItem) {\n      currentSortItem.icon = iconMark;\n    }\n\n    if (!this.table.internalProps.multipleSort) {\n      previousSort.forEach((sortItem: any) => {\n        this.table.scenegraph.updateSortIcon({\n          col: null,\n          row: null,\n          iconMark: null,\n          order: 'normal',\n          oldSortCol: sortItem.col,\n          oldSortRow: sortItem.row,\n          oldIconMark: null\n        });\n      });\n    }\n    this.table.fireListeners(PIVOT_TABLE_EVENT_TYPE.AFTER_SORT, {\n      order: currentSortItem?.order,\n      field: <string>this.table.getHeaderField(col, row),\n      event\n    });\n  }\n\n  updateSortState(sortState: SortState[]) {\n    sortState = Array.isArray(sortState) ? sortState : [sortState];\n\n    for (let index = 0; index < sortState.length; index++) {\n      if (\n        sortState[index].field === this.sort[index]?.field &&\n        sortState[sortState.length - 1].order === this.sort[index]?.order\n      ) {\n        return;\n      }\n      const oldSortCol = this.table.internalProps.multipleSort ? null : this.sort[index]?.col || null;\n      const oldSortRow = this.table.internalProps.multipleSort ? null : this.sort[index]?.row || null;\n      const name =\n        this.sort[index]?.order === 'asc'\n          ? 'sort_downward'\n          : this.sort[index]?.order === 'desc'\n          ? 'sort_upward'\n          : 'sort_normal';\n      this.setSortState(sortState.slice(0, index + 1));\n      // 获取sort对应的行列位置\n      const cellAddress = this.table.internalProps.layoutMap.getHeaderCellAddressByField(\n        sortState[index].field as string\n      );\n      this.sort[index].col = cellAddress.col;\n      this.sort[index].row = cellAddress.row;\n      const cellGroup = this.table.scenegraph.getCell(this.sort[index].col, this.sort[index].row);\n      //const iconMark = cellGroup.getChildByName(name, true);\n      let iconMark: Icon;\n\n      traverseObject(cellGroup, 'children', (mark: Icon) => {\n        if (mark.attribute.funcType === 'sort') {\n          iconMark = mark;\n          return true;\n        }\n        return false;\n      });\n\n      // 更新icon\n      this.table.scenegraph.updateSortIcon({\n        col: this.sort[index].col,\n        row: this.sort[index].row,\n        iconMark,\n        order: this.sort[index].order,\n        oldSortCol,\n        oldSortRow,\n        oldIconMark: this.sort[index]?.icon\n      });\n    }\n\n    const normalHeaders: Array<any> = [];\n    (this.table.internalProps.layoutMap.columnTree as any).tree.children.forEach((item: any) => {\n      if (!sortState.some((state: SortState) => state.field === item.field)) {\n        normalHeaders.push(item);\n      }\n    });\n\n    for (let index = 0; index < normalHeaders.length; index++) {\n      const column = normalHeaders[index];\n      this.table.scenegraph.updateSortIcon({\n        col: null,\n        row: null,\n        iconMark: null,\n        order: null,\n        oldSortCol: column.startInTotal + this.table.internalProps.layoutMap.leftRowSeriesNumberColumnCount ?? 0,\n        oldSortRow: column.level,\n        oldIconMark: null\n      });\n    }\n  }\n\n  triggerFreeze(col: number, row: number, iconMark: Icon) {\n    if (this.table.isPivotTable() || (this.table as ListTable).transpose) {\n      return;\n    }\n    // let oldFrowzenCol = this.frowzen.col;\n    // let oldFrowzenRow = this.frowzen.row;\n\n    // 更新frozen\n    dealFreeze(col, row, this.table);\n    if ((this.table as any).hasListeners(PIVOT_TABLE_EVENT_TYPE.FREEZE_CLICK)) {\n      const fields: ColumnData[] = (this.table as ListTable).internalProps.layoutMap.columnObjects.slice(0, col + 1);\n      this.table.fireListeners(PIVOT_TABLE_EVENT_TYPE.FREEZE_CLICK, {\n        col: col,\n        row: row,\n        fields: fields.reduce((pre: any, cur: any) => pre.concat(cur.field), []),\n        colCount: this.table.frozenColCount\n      });\n    }\n    // // 更新scenegraph，这里因为dealFreeze更新了table里存储的frozen信息，会影响scenegraph里的getCell\n    // // 因此先更新scenegraph结构再更新icon\n    // this.table.scenegraph.updateFrozen(this.frowzen.col);\n\n    // // 更新icon\n    // this.table.scenegraph.updateFrozenIcon(oldFrowzenCol, this.frowzen.col);\n\n    this.frozen.icon = iconMark;\n  }\n\n  updateCursor(mode: string = 'default') {\n    this.table.getElement().style.cursor = mode;\n  }\n\n  updateDrillState(\n    dimensionKey: string,\n    title: string,\n    drillDown: boolean,\n    drillUp: boolean,\n    col: number,\n    row: number\n  ) {\n    this.drill.dimensionKey = dimensionKey;\n    this.drill.title = title;\n    this.drill.drillDown = drillDown;\n    this.drill.drillUp = drillUp;\n    this.drill.col = col;\n    this.drill.row = row;\n    updateDrill(col, row, drillDown, drillUp, this.table);\n  }\n\n  updateSparklineHoverPose(col: number, row: number, x: number, y: number) {\n    if (this.sparkLine.col !== -1 && this.sparkLine.row !== -1) {\n      clearChartHover(this.sparkLine.col, this.sparkLine.row, this.table);\n    }\n    let isUpdated = false;\n    if (col !== -1 && row !== -1) {\n      isUpdated = updateChartHover(col, row, x, y, this.table);\n    }\n    if (isUpdated) {\n      this.sparkLine.col = col;\n      this.sparkLine.row = row;\n    } else {\n      this.sparkLine.col = -1;\n      this.sparkLine.row = -1;\n    }\n  }\n  setCheckedState(col: number, row: number, field: string | number, checked: boolean | 'indeterminate') {\n    return setCheckedState(col, row, field, checked, this);\n  }\n  setHeaderCheckedState(field: string | number, checked: boolean | 'indeterminate') {\n    return setHeaderCheckedState(field, checked, this);\n  }\n\n  //#region CheckedState 状态维护\n\n  /**\n   * 创建cell节点时同步状态 如果状态缓存有则用 如果没有则设置缓存\n   * @param col\n   * @param row\n   * @param field\n   * @param checked\n   * @returns\n   */\n  syncCheckedState(col: number, row: number, field: string | number, checked: boolean): boolean | 'indeterminate' {\n    return syncCheckedState(col, row, field, checked, this);\n  }\n  /**\n   * 创建表头cell节点时同步状态 如果状态缓存有则用 如果没有则设置缓存\n   * @param col\n   * @param row\n   * @param field\n   * @param checked\n   * @returns\n   */\n  // syncHeaderCheckedState(field: string | number, checked: boolean): boolean | 'indeterminate' {\n  //   if (isValid(this.headerCheckedState[field])) {\n  //     return this.headerCheckedState[field];\n  //   } else if (typeof checked === 'function') {\n  //     return undefined;\n  //   } else if (isValid(checked)) {\n  //     this.headerCheckedState[field] = checked;\n  //   } else if (this.checkedState?.length > 0) {\n  //     const isAllChecked = this.updateHeaderCheckedState(field);\n  //     return isAllChecked;\n  //   }\n  //   return this.headerCheckedState[field];\n  // }\n  /**\n   * 初始化check状态\n   * @param records\n   */\n  initCheckedState(records: any[]) {\n    return initCheckedState(records, this);\n  }\n  /**\n   * 更新header单元checked的状态，依据当前列每一个数据checked的状态。\n   * @param field\n   * @returns\n   */\n  updateHeaderCheckedState(field: string | number, col: number, row: number): boolean | 'indeterminate' {\n    return updateHeaderCheckedState(field, this, col, row);\n  }\n  /**\n   * setRecords的时候虽然调用了initCheckedState 进行了初始化 但当每个表头的checked状态都用配置了的话 初始化不会遍历全部数据\n   * @param records\n   */\n  initLeftRecordsCheckState(records: any[]) {\n    return initLeftRecordsCheckState(records, this);\n  }\n  //#endregion\n\n  setRadioState(\n    col: number,\n    row: number,\n    field: string | number,\n    radioType: 'column' | 'cell',\n    indexInCell: number | undefined\n  ) {\n    setRadioState(col, row, field, radioType, indexInCell, this);\n  }\n\n  syncRadioState(\n    col: number,\n    row: number,\n    field: string | number,\n    radioType: 'column' | 'cell',\n    indexInCell: number | undefined,\n    isChecked: boolean\n  ) {\n    return syncRadioState(col, row, field, radioType, indexInCell, isChecked, this);\n  }\n\n  changeCheckboxAndRadioOrder(sourceIndex: number, targetIndex: number) {\n    if (this.checkedState.size) {\n      changeCheckboxOrder(sourceIndex, targetIndex, this);\n    }\n    if (this.radioState.length) {\n      changeRadioOrder(sourceIndex, targetIndex, this);\n    }\n  }\n\n  setCustomSelectRanges(\n    customSelectRanges: {\n      range: CellRange;\n      style: CustomSelectionStyle;\n    }[]\n  ) {\n    deletaCustomSelectRanges(this);\n    addCustomSelectRanges(customSelectRanges, this);\n  }\n}\n"]}