{"version":3,"sources":["../src/state/radio/radio.ts"],"names":[],"mappings":"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","file":"radio.js","sourcesContent":["import { isBoolean, isNumber, isObject, isValid } from '@visactor/vutils';\nimport type { StateManager } from '../state';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport type { ColumnDefine } from '../../ts-types';\nimport type { Radio } from './../../vrender';\n\nexport function setRadioState(\n  col: number,\n  row: number,\n  field: string | number,\n  type: 'column' | 'cell',\n  indexInCell: number | undefined,\n  state: StateManager\n) {\n  const recordIndex = state.table.getRecordShowIndexByCell(col, row);\n  if (recordIndex >= 0) {\n    const dataIndex = state.table.dataSource.getIndexKey(recordIndex) as number;\n    if (type === 'column') {\n      if (isNumber(indexInCell)) {\n        state.radioState[field] = {};\n        state.radioState[field][dataIndex] = indexInCell;\n      } else {\n        state.radioState[field] = dataIndex;\n      }\n    } else {\n      if (!state.radioState[field]) {\n        state.radioState[field] = {};\n      }\n      if (isNumber(indexInCell)) {\n        state.radioState[field][dataIndex] = indexInCell;\n      } else {\n        state.radioState[field][dataIndex] = true;\n      }\n    }\n  }\n}\n\nexport function getCellRadioState(col: number, row: number, table: BaseTableAPI): boolean | number {\n  const define = table.getBodyColumnDefine(col, row) as ColumnDefine;\n  const field = define?.field;\n  const cellType = table.getCellType(col, row);\n  if (isValid(field) && cellType === 'radio') {\n    const dataIndex = table.dataSource.getIndexKey(table.getRecordShowIndexByCell(col, row)) as number;\n    const columnState = table.stateManager.radioState?.[field as string | number];\n    if (isNumber(columnState)) {\n      if (columnState === dataIndex) {\n        return true;\n      }\n    } else if (isObject(columnState)) {\n      const cellState = (columnState as Record<number, number>)[dataIndex];\n      if (isNumber(cellState)) {\n        return cellState;\n      }\n    }\n  }\n  return false;\n}\n\nexport function syncRadioState(\n  col: number,\n  row: number,\n  field: string | number,\n  type: 'column' | 'cell',\n  indexInCell: number | undefined,\n  isChecked: boolean,\n  state: StateManager\n): boolean {\n  const recordIndex = state.table.getRecordShowIndexByCell(col, row);\n  if (recordIndex >= 0) {\n    const dataIndex = state.table.dataSource.getIndexKey(recordIndex) as number;\n\n    if (type === 'column') {\n      if (!isValid(state.radioState[field]) && isChecked) {\n        if (isNumber(indexInCell)) {\n          state.radioState[field] = {};\n          state.radioState[field][dataIndex] = indexInCell;\n        } else {\n          state.radioState[field] = dataIndex;\n        }\n        return true;\n      } else if (isNumber(state.radioState[field]) && !isNumber(indexInCell)) {\n        // column : column\n        return state.radioState[field] === dataIndex;\n      } else if (isNumber(state.radioState[field]) && isNumber(indexInCell)) {\n        // column : cell\n        return false;\n      } else if (isObject(state.radioState[field]) && !isNumber(indexInCell)) {\n        // cell : column\n        return false;\n      } else if (isObject(state.radioState[field]) && isNumber(indexInCell)) {\n        // cell : cell\n        return state.radioState[field][dataIndex] === indexInCell;\n      }\n    } else if (type === 'cell') {\n      if (!isValid(state.radioState[field]) && isChecked) {\n        state.radioState[field] = {};\n        if (isNumber(indexInCell)) {\n          state.radioState[field][dataIndex] = indexInCell;\n        } else {\n          state.radioState[field][dataIndex] = true;\n        }\n        return true;\n      } else if (!isValid(state.radioState[field]?.[dataIndex]) && isChecked) {\n        if (isNumber(indexInCell)) {\n          state.radioState[field][dataIndex] = indexInCell;\n        } else {\n          state.radioState[field][dataIndex] = true;\n        }\n        return true;\n      } else if (isBoolean(state.radioState[field]?.[dataIndex]) && !isNumber(indexInCell)) {\n        // single : single\n        return state.radioState[field][dataIndex];\n      } else if (isBoolean(state.radioState[field]?.[dataIndex]) && isNumber(indexInCell)) {\n        // single : multiple\n        return false;\n      } else if (isNumber(state.radioState[field]?.[dataIndex]) && !isNumber(indexInCell)) {\n        // multiple : single\n        return false;\n      } else if (isNumber(state.radioState[field]?.[dataIndex]) && isNumber(indexInCell)) {\n        // multiple : multiple\n        return state.radioState[field][dataIndex] === indexInCell;\n      }\n    }\n  }\n  return isChecked;\n}\n\nexport function setCellRadioState(col: number, row: number, index: number | undefined, table: BaseTableAPI) {\n  const cellGoup = table.scenegraph.getCell(col, row);\n  if (!cellGoup) {\n    return;\n  }\n  if (isNumber(index)) {\n    const radio = cellGoup.getChildAt(index) as any;\n    radio?._handlePointerUp();\n  } else {\n    const radio = cellGoup.getChildByName('radio') as any;\n    radio?._handlePointerUp();\n  }\n}\n\nexport function changeRadioOrder(sourceIndex: number, targetIndex: number, state: StateManager) {\n  const { radioState, table } = state;\n  if (table.internalProps.transpose) {\n    sourceIndex = table.getRecordShowIndexByCell(sourceIndex, 0);\n    targetIndex = table.getRecordShowIndexByCell(targetIndex, 0);\n  } else {\n    sourceIndex = table.getRecordShowIndexByCell(0, sourceIndex);\n    targetIndex = table.getRecordShowIndexByCell(0, targetIndex);\n  }\n  // if (sourceIndex !== targetIndex) {\n  //   const sourceRecord = radioState[sourceIndex];\n  //   radioState[sourceIndex] = radioState[targetIndex];\n  //   radioState[targetIndex] = sourceRecord;\n  // }\n  if (sourceIndex > targetIndex) {\n    const sourceRecord = radioState[sourceIndex];\n    for (let i = sourceIndex; i > targetIndex; i--) {\n      radioState[i] = radioState[i - 1];\n    }\n    radioState[targetIndex] = sourceRecord;\n  } else if (sourceIndex < targetIndex) {\n    const sourceRecord = radioState[sourceIndex];\n    for (let i = sourceIndex; i < targetIndex; i++) {\n      radioState[i] = radioState[i + 1];\n    }\n    radioState[targetIndex] = sourceRecord;\n  }\n}\n"]}