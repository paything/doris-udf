{"version":3,"sources":["../src/state/select/is-cell-select-highlight.ts"],"names":[],"mappings":"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","file":"is-cell-select-highlight.js","sourcesContent":["import type { StateManager } from '../state';\nimport type { Group } from '../../scenegraph/graphic/group';\nimport { getProp } from '../../scenegraph/utils/get-prop';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport type { CellRange, ColumnDefine } from '../../ts-types';\nimport { HighlightScope } from '../../ts-types';\nimport { isValid } from '@visactor/vutils';\nimport { getCellMergeRange } from '../../tools/merge-range';\nimport { cellInRange } from '../../tools/helper';\n\nexport function getCellSelectColor(cellGroup: Group, table: BaseTableAPI): string | undefined {\n  let colorKey;\n  if (\n    cellGroup.role === 'cell' &&\n    isValid(cellGroup.mergeStartCol) &&\n    isValid(cellGroup.mergeStartRow) &&\n    isValid(cellGroup.mergeEndCol) &&\n    isValid(cellGroup.mergeEndRow)\n  ) {\n    const { colStart, colEnd, rowStart, rowEnd } = getCellMergeRange(cellGroup, table.scenegraph);\n    for (let col = colStart; col <= colEnd; col++) {\n      for (let row = rowStart; row <= rowEnd; row++) {\n        const key = isCellSelected(table.stateManager, col, row, cellGroup);\n        if (key && (!colorKey || key === 'cellBgColor')) {\n          colorKey = key;\n        }\n      }\n    }\n  } else if (cellGroup.role === 'cell') {\n    colorKey = isCellSelected(table.stateManager, cellGroup.col, cellGroup.row, cellGroup);\n  }\n\n  if (!colorKey) {\n    return undefined;\n  }\n\n  let selectStyle;\n  const layout = table.internalProps.layoutMap;\n  if (layout.isCornerHeader(cellGroup.col, cellGroup.row)) {\n    selectStyle = table.theme.cornerHeaderStyle?.select || table.theme.headerStyle?.select;\n  } else if (layout.isColumnHeader(cellGroup.col, cellGroup.row)) {\n    selectStyle = table.theme.headerStyle?.select;\n  } else if (layout.isRowHeader(cellGroup.col, cellGroup.row)) {\n    selectStyle = table.theme.rowHeaderStyle?.select;\n  } else if (layout.isBottomFrozenRow(cellGroup.col, cellGroup.row)) {\n    selectStyle =\n      table.theme.bottomFrozenStyle?.select ||\n      (table.isListTable() ? table.theme.bodyStyle?.select : table.theme.headerStyle?.select);\n  } else if (layout.isRightFrozenColumn(cellGroup.col, cellGroup.row)) {\n    selectStyle =\n      table.theme.rightFrozenStyle?.select ||\n      (table.isListTable() ? table.theme.bodyStyle?.select : table.theme.rowHeaderStyle?.select);\n  } else if (!table.isHeader(cellGroup.col, cellGroup.row)) {\n    selectStyle = table.theme.bodyStyle?.select;\n  }\n  const fillColor = getProp(colorKey, selectStyle, cellGroup.col, cellGroup.row, table);\n  return fillColor;\n}\n\n// 选中多列\nfunction isSelectMultipleRange(range: CellRange) {\n  return range.start.col !== range.end.col || range.start.row !== range.end.row;\n}\n\nfunction getSelectModeRange(state: StateManager, col: number, row: number) {\n  let selectMode;\n  const { highlightScope, cellPos, ranges } = state.select;\n  const range = ranges[0];\n  const rangeColStart = Math.min(range.start.col, range.end.col);\n  const rangeColEnd = Math.max(range.start.col, range.end.col);\n  const rangeRowStart = Math.min(range.start.row, range.end.row);\n  const rangeRowEnd = Math.max(range.start.row, range.end.row);\n  if (highlightScope === HighlightScope.single && cellPos.col === col && cellPos.row === row) {\n    selectMode = 'cellBgColor';\n  } else if (highlightScope === HighlightScope.column && col >= rangeColStart && col <= rangeColEnd) {\n    if (cellInRange(ranges[0], col, row)) {\n      selectMode = 'cellBgColor';\n    } else {\n      selectMode = 'inlineColumnBgColor';\n    }\n  } else if (highlightScope === HighlightScope.row && row >= rangeRowStart && row <= rangeRowEnd) {\n    if (cellInRange(ranges[0], col, row)) {\n      selectMode = 'cellBgColor';\n    } else {\n      selectMode = 'inlineRowBgColor';\n    }\n  } else if (highlightScope === HighlightScope.cross) {\n    if (cellInRange(ranges[0], col, row)) {\n      selectMode = 'cellBgColor';\n    } else if (col >= rangeColStart && col <= rangeColEnd) {\n      selectMode = 'inlineColumnBgColor';\n    } else if (row >= rangeRowStart && row <= rangeRowEnd) {\n      selectMode = 'inlineRowBgColor';\n    }\n  }\n  return selectMode;\n}\n\nfunction getSelectMode(state: StateManager, col: number, row: number) {\n  let selectMode;\n  const { highlightScope, cellPos } = state.select;\n\n  if (highlightScope === HighlightScope.single && cellPos.col === col && cellPos.row === row) {\n    selectMode = 'cellBgColor';\n  } else if (highlightScope === HighlightScope.column && cellPos.col === col) {\n    if (cellPos.col === col && cellPos.row === row) {\n      selectMode = 'cellBgColor';\n    } else {\n      selectMode = 'inlineColumnBgColor';\n    }\n  } else if (highlightScope === HighlightScope.row && cellPos.row === row) {\n    if (cellPos.col === col && cellPos.row === row) {\n      selectMode = 'cellBgColor';\n    } else {\n      selectMode = 'inlineRowBgColor';\n    }\n  } else if (highlightScope === HighlightScope.cross) {\n    if (cellPos.col === col && cellPos.row === row) {\n      selectMode = 'cellBgColor';\n    } else if (cellPos.col === col) {\n      selectMode = 'inlineColumnBgColor';\n    } else if (cellPos.row === row) {\n      selectMode = 'inlineRowBgColor';\n    }\n  }\n  return selectMode;\n}\n\nexport function isCellSelected(state: StateManager, col: number, row: number, cellGroup: Group): string | undefined {\n  const { highlightInRange, disableHeader, ranges } = state.select;\n  let selectMode;\n  const isSelectRange = ranges.length === 1 && isSelectMultipleRange(ranges?.[0]) && highlightInRange;\n  if (\n    isSelectRange\n      ? ranges?.length === 1 && ranges[0].start && ranges[0].end\n      : ranges?.length === 1 && ranges[0].end.col === ranges[0].start.col && ranges[0].end.row === ranges[0].start.row\n  ) {\n    const table = state.table;\n\n    const isHeader = table.isHeader(col, row);\n    if (isHeader && disableHeader) {\n      return undefined;\n    }\n\n    selectMode = isSelectRange ? getSelectModeRange(state, col, row) : getSelectMode(state, col, row);\n\n    if (selectMode) {\n      const cellDisable = isCellDisableSelect(state.table, col, row);\n      if (cellDisable) {\n        selectMode = undefined;\n      }\n    }\n  } else if (state.table.theme.selectionStyle.selectionFillMode === 'replace') {\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      const rangeColStart = Math.min(range.start.col, range.end.col);\n      const rangeColEnd = Math.max(range.start.col, range.end.col);\n      const rangeRowStart = Math.min(range.start.row, range.end.row);\n      const rangeRowEnd = Math.max(range.start.row, range.end.row);\n      if (rangeColStart <= col && rangeRowStart <= row && rangeColEnd >= col && rangeRowEnd >= row) {\n        selectMode = 'cellBgColor';\n        break;\n      }\n    }\n  }\n  return selectMode;\n}\n/**\n * 判断单元格是否禁用选择。先判断高优配置select.disableSelect。\n * 然后在根据如果是表头的话依次去判断select.disableHeaderSelect和column.disableHeaderSelect。\n * 不是表头的话去判断column.disableSelect。\n */\nexport function isCellDisableSelect(table: BaseTableAPI, col: number, row: number) {\n  const globalDisableSelect = table.options.select?.disableSelect;\n  const cellDisable =\n    typeof globalDisableSelect === 'function' ? globalDisableSelect(col, row, table) : globalDisableSelect;\n  if (cellDisable) {\n    return true;\n  }\n  if (table.isHeader(col, row)) {\n    let cellDisable = table.options.select?.disableHeaderSelect;\n    if (cellDisable) {\n      return true;\n    }\n    const columnDefine = table.getHeaderDefine(col, row);\n    cellDisable = (columnDefine as ColumnDefine)?.disableHeaderSelect;\n    if (cellDisable) {\n      return true;\n    }\n  } else {\n    const columnDefine = table.getBodyColumnDefine(col, row);\n    const disableSelect = (columnDefine as ColumnDefine)?.disableSelect;\n    const cellDisable = typeof disableSelect === 'function' ? disableSelect(col, row, table) : disableSelect;\n    if (cellDisable) {\n      return true;\n    }\n  }\n  return false;\n}\n"]}