{"version":3,"sources":["../src/state/cell-move/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import type { ListTable } from '../../ListTable';\nimport { TABLE_EVENT_TYPE } from '../../core/TABLE_EVENT_TYPE';\nimport type { SimpleHeaderLayoutMap } from '../../layout';\nimport type { PivotHeaderLayoutMap } from '../../layout/pivot-header-layout';\nimport { getCellMergeInfo } from '../../scenegraph/utils/get-cell-merge';\nimport type { CellRange } from '../../ts-types';\nimport type { BaseTableAPI } from '../../ts-types/base-table';\nimport type { StateManager } from '../state';\nimport { adjustMoveHeaderTarget } from './adjust-header';\n\nexport function startMoveCol(\n  col: number,\n  row: number,\n  x: number,\n  y: number,\n  state: StateManager,\n  event: MouseEvent | PointerEvent | TouchEvent\n) {\n  if (!('canMoveHeaderPosition' in state.table.internalProps.layoutMap)) {\n    return;\n  }\n  state.columnMove.moving = true;\n  state.columnMove.colSource = col;\n  state.columnMove.rowSource = row;\n  state.columnMove.x = x - state.table.tableX;\n  state.columnMove.y = y - state.table.tableY;\n\n  const cellLocation = state.table.getCellLocation(col, row);\n  const delta =\n    cellLocation === 'columnHeader'\n      ? state.columnMove.x\n      : cellLocation === 'rowHeader' ||\n        (state.table.internalProps.layoutMap as SimpleHeaderLayoutMap).isSeriesNumberInBody(col, row)\n      ? state.columnMove.y\n      : 0;\n\n  const { backX, lineX, backY, lineY } = state.table.scenegraph.component.showMoveCol(col, row, delta);\n\n  state.table.fireListeners(TABLE_EVENT_TYPE.CHANGE_HEADER_POSITION_START, {\n    col,\n    row,\n    x,\n    y,\n    backX,\n    lineX,\n    backY,\n    lineY,\n    event\n  });\n  // 调整列顺序期间清空选中清空\n  const isHasSelected = !!state.select.ranges?.length;\n  state.table.stateManager.updateSelectPos(-1, -1);\n  state.table.stateManager.endSelectCells(true, isHasSelected);\n  state.table.scenegraph.updateNextFrame();\n}\n\nexport function updateMoveCol(\n  col: number,\n  row: number,\n  x: number,\n  y: number,\n  state: StateManager,\n  event: MouseEvent | PointerEvent | TouchEvent\n) {\n  if (!('canMoveHeaderPosition' in state.table.internalProps.layoutMap)) {\n    return;\n  }\n\n  const targetCell = adjustMoveHeaderTarget(\n    { col: state.columnMove.colSource, row: state.columnMove.rowSource },\n    { col, row },\n    state.table\n  );\n  const canMove = state.table.internalProps.layoutMap.canMoveHeaderPosition(\n    { col: state.columnMove.colSource, row: state.columnMove.rowSource },\n    { col: targetCell.col, row: targetCell.row }\n  );\n  if (!canMove) {\n    state.updateCursor('not-allowed');\n    state.columnMove.colTarget = state.columnMove.colSource;\n    state.columnMove.rowTarget = state.columnMove.rowSource;\n  } else {\n    state.columnMove.x = x - state.table.tableX;\n    state.columnMove.y = y - state.table.tableY;\n    state.columnMove.colTarget = targetCell.col;\n    state.columnMove.rowTarget = targetCell.row;\n    state.updateCursor('grabbing');\n    let lineX;\n    let backX;\n    let lineY;\n    let backY;\n    const cellLocation = state.table.getCellLocation(state.columnMove.colSource, state.columnMove.rowSource);\n    if (cellLocation === 'columnHeader') {\n      backX = state.columnMove.x;\n      if (state.table.isLeftFrozenColumn(col)) {\n        lineX =\n          state.columnMove.colTarget >= state.columnMove.colSource\n            ? state.table.getColsWidth(0, state.columnMove.colTarget)\n            : state.table.getColsWidth(0, state.columnMove.colTarget - 1);\n      } else if (state.table.isRightFrozenColumn(col)) {\n        lineX = state.table.tableNoFrameWidth - state.table.getColsWidth(targetCell.col + 1, state.table.colCount - 1);\n      } else {\n        lineX =\n          (state.columnMove.colTarget >= state.columnMove.colSource\n            ? state.table.getColsWidth(0, state.columnMove.colTarget)\n            : state.table.getColsWidth(0, state.columnMove.colTarget - 1)) -\n          state.table.stateManager.scroll.horizontalBarPos;\n      }\n    } else if (\n      cellLocation === 'rowHeader' ||\n      (state.table.internalProps.layoutMap as SimpleHeaderLayoutMap).isSeriesNumberInBody(col, row)\n    ) {\n      backY = state.columnMove.y;\n      if (state.table.isFrozenRow(row)) {\n        lineY =\n          state.columnMove.rowTarget >= state.columnMove.rowSource\n            ? state.table.getRowsHeight(0, state.columnMove.rowTarget)\n            : state.table.getRowsHeight(0, state.columnMove.rowTarget - 1);\n      } else if (state.table.isBottomFrozenRow(row)) {\n        lineY =\n          state.table.tableNoFrameHeight - state.table.getRowsHeight(targetCell.row + 1, state.table.rowCount - 1);\n      } else {\n        lineY =\n          (state.columnMove.rowTarget >= state.columnMove.rowSource\n            ? state.table.getRowsHeight(0, state.columnMove.rowTarget)\n            : state.table.getRowsHeight(0, state.columnMove.rowTarget - 1)) -\n          state.table.stateManager.scroll.verticalBarPos;\n      }\n    }\n    state.table.scenegraph.component.updateMoveCol(backX, lineX, backY, lineY);\n    state.table.fireListeners(TABLE_EVENT_TYPE.CHANGING_HEADER_POSITION, {\n      col,\n      row,\n      x,\n      y,\n      backX,\n      lineX,\n      backY,\n      lineY,\n      event\n    });\n    state.table.scenegraph.updateNextFrame();\n  }\n}\n\nexport function endMoveCol(state: StateManager): boolean {\n  let moveColResult = false;\n  if (\n    'canMoveHeaderPosition' in state.table.internalProps.layoutMap &&\n    state.columnMove.moving &&\n    state.columnMove.colSource >= 0 &&\n    state.columnMove.rowSource >= 0 &&\n    state.columnMove.colTarget >= 0 &&\n    state.columnMove.rowTarget >= 0 &&\n    state.table.options.customConfig?.notUpdateInColumnRowMove !== true\n  ) {\n    //getCellMergeInfo 一定要在moveHeaderPosition之前调用  否则就不是修改前的range了\n    const oldSourceMergeInfo = state.table.getCellRange(state.columnMove.colSource, state.columnMove.rowSource);\n    const oldTargetMergeInfo = state.table.getCellRange(state.columnMove.colTarget, state.columnMove.rowTarget);\n    // 调整列顺序\n    const moveContext = state.table._moveHeaderPosition(\n      { col: state.columnMove.colSource, row: state.columnMove.rowSource },\n      { col: state.columnMove.colTarget, row: state.columnMove.rowTarget }\n    );\n\n    // 更新状态\n    if (moveContext && moveContext.targetIndex !== moveContext.sourceIndex) {\n      state.table.internalProps.useOneRowHeightFillAll = false;\n      state.table.internalProps.layoutMap.clearCellRangeMap();\n      const sourceMergeInfo = state.table.getCellRange(state.columnMove.colSource, state.columnMove.rowSource);\n      const targetMergeInfo = state.table.getCellRange(state.columnMove.colTarget, state.columnMove.rowTarget);\n\n      const colMin = Math.min(\n        sourceMergeInfo.start.col,\n        targetMergeInfo.start.col,\n        oldSourceMergeInfo.start.col,\n        oldTargetMergeInfo.start.col\n      );\n      const colMax = Math.max(\n        sourceMergeInfo.end.col,\n        targetMergeInfo.end.col,\n        oldSourceMergeInfo.end.col,\n        oldTargetMergeInfo.end.col\n      );\n      const rowMin = Math.min(\n        sourceMergeInfo.start.row,\n        targetMergeInfo.start.row,\n        oldSourceMergeInfo.start.row,\n        oldTargetMergeInfo.start.row\n      );\n      let rowMax = Math.max(\n        sourceMergeInfo.end.row,\n        targetMergeInfo.end.row,\n        oldSourceMergeInfo.end.row,\n        oldTargetMergeInfo.end.row\n      );\n      if (\n        moveContext.moveType === 'row' &&\n        (state.table.internalProps.layoutMap as PivotHeaderLayoutMap).rowHierarchyType === 'tree'\n      ) {\n        if (moveContext.targetIndex > moveContext.sourceIndex) {\n          rowMax = rowMax + moveContext.targetSize - 1;\n        } else {\n          rowMax = rowMax + moveContext.sourceSize - 1;\n        }\n      }\n      if (\n        !(state.table as ListTable).transpose &&\n        (state.table.internalProps.layoutMap as SimpleHeaderLayoutMap).isSeriesNumberInBody(\n          state.columnMove.colSource,\n          state.columnMove.rowSource\n        )\n      ) {\n        state.table.changeRecordOrder(moveContext.sourceIndex, moveContext.targetIndex);\n        state.changeCheckboxAndRadioOrder(moveContext.sourceIndex, moveContext.targetIndex);\n      }\n      // clear columns width and rows height cache\n      if (moveContext.moveType === 'column') {\n        clearWidthsAndHeightsCache(colMin, colMax, 0, -1, state.table);\n      } else {\n        clearWidthsAndHeightsCache(0, -1, rowMin, rowMax, state.table);\n      }\n\n      // clear cell style cache\n      state.table.clearCellStyleCache();\n      if (\n        state.table.internalProps.layoutMap.isSeriesNumberInBody(state.columnMove.colSource, state.columnMove.rowSource)\n      ) {\n        // 如果是拖拽序号换位置 考虑到非拖拽单元格合并而是其他地方有合并被拆开或者独立单元格拖拽后变为合并的情况  这里直接刷新这个场景树的节点 才能覆盖所有情况\n        state.table.scenegraph.updateHeaderPosition(\n          state.table.scenegraph.proxy.colStart,\n          state.table.scenegraph.proxy.colEnd,\n          state.table.scenegraph.proxy.rowStart,\n          state.table.scenegraph.proxy.rowEnd,\n          moveContext.moveType\n        );\n      } else if (moveContext.moveType === 'column') {\n        state.table.scenegraph.updateHeaderPosition(colMin, colMax, 0, -1, moveContext.moveType);\n      } else {\n        state.table.scenegraph.updateHeaderPosition(0, -1, rowMin, rowMax, moveContext.moveType);\n      }\n      //调整冻结列数量\n      if (state.table.internalProps.frozenColDragHeaderMode === 'adjustFrozenCount' && state.table.isListTable()) {\n        if (\n          state.table.isLeftFrozenColumn(state.columnMove.colTarget) &&\n          !state.table.isLeftFrozenColumn(state.columnMove.colSource)\n        ) {\n          state.table.frozenColCount +=\n            (sourceMergeInfo as CellRange).end.col - (sourceMergeInfo as CellRange).start.col + 1;\n        } else if (\n          state.table.isLeftFrozenColumn(state.columnMove.colSource) &&\n          !state.table.isLeftFrozenColumn(state.columnMove.colTarget)\n        ) {\n          state.table.frozenColCount -=\n            (sourceMergeInfo as CellRange).end.col - (sourceMergeInfo as CellRange).start.col + 1;\n        }\n        if (\n          state.table.isRightFrozenColumn(state.columnMove.colTarget) &&\n          !state.table.isRightFrozenColumn(state.columnMove.colSource)\n        ) {\n          state.table.rightFrozenColCount +=\n            (sourceMergeInfo as CellRange).end.col - (sourceMergeInfo as CellRange).start.col + 1;\n        } else if (\n          state.table.isRightFrozenColumn(state.columnMove.colSource) &&\n          !state.table.isRightFrozenColumn(state.columnMove.colTarget)\n        ) {\n          state.table.rightFrozenColCount -=\n            (sourceMergeInfo as CellRange).end.col - (sourceMergeInfo as CellRange).start.col + 1;\n        }\n      }\n      moveColResult = true;\n    } else {\n      state.updateCursor();\n      //触发事件 CHANGE_HEADER_POSITION 还需要用到这些值 所以延迟清理\n      state.columnMove.moving = false;\n      delete state.columnMove.colSource;\n      delete state.columnMove.rowSource;\n      delete state.columnMove.colTarget;\n      delete state.columnMove.rowTarget;\n      state.table.scenegraph.component.hideMoveCol();\n      state.table.scenegraph.updateNextFrame();\n      return false;\n    }\n  }\n  state.columnMove.moving = false;\n  setTimeout(() => {\n    //触发事件 CHANGE_HEADER_POSITION 还需要用到这些值 所以延迟清理\n    delete state.columnMove.colSource;\n    delete state.columnMove.rowSource;\n    delete state.columnMove.colTarget;\n    delete state.columnMove.rowTarget;\n  }, 0);\n  state.table.scenegraph.component.hideMoveCol();\n  // update frozen shadowline component\n  if (\n    state.columnResize.col < state.table.frozenColCount &&\n    !state.table.isPivotTable() &&\n    !(state.table as ListTable).transpose\n  ) {\n    state.table.scenegraph.component.setFrozenColumnShadow(\n      state.table.frozenColCount - 1,\n      state.columnResize.isRightFrozen\n    );\n    state.table.scenegraph.component.setRightFrozenColumnShadow(state.table.colCount - state.table.rightFrozenColCount);\n  } else if (\n    state.columnResize.col >= state.table.colCount - state.table.rightFrozenColCount &&\n    !state.table.isPivotTable() &&\n    !(state.table as ListTable).transpose\n  ) {\n    state.table.scenegraph.component.setRightFrozenColumnShadow(state.table.colCount - state.table.rightFrozenColCount);\n  } else if (state.table.options.frozenColCount) {\n    state.table.scenegraph.component.setFrozenColumnShadow(state.table.frozenColCount - 1);\n  } else if (state.table.options.rightFrozenColCount) {\n    state.table.scenegraph.component.setRightFrozenColumnShadow(state.table.colCount - state.table.rightFrozenColCount);\n  }\n  state.table.scenegraph.updateNextFrame();\n\n  if (state.table.options.customConfig?.notUpdateInColumnRowMove === true) {\n    return true;\n  }\n  return moveColResult;\n}\n\nfunction clearWidthsAndHeightsCache(\n  colMin: number,\n  colMax: number,\n  rowMin: number,\n  rowMax: number,\n  table: BaseTableAPI\n) {\n  for (let col = colMin; col <= colMax; col++) {\n    table._clearColRangeWidthsMap(col);\n  }\n  for (let row = rowMin; row <= rowMax; row++) {\n    table._clearRowRangeHeightsMap(row);\n  }\n}\n"]}