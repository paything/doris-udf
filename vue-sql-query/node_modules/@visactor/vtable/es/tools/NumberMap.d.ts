export declare class NumberMap<T> {
    private _keys;
    private _vals;
    private _sorted;
    count(): number;
    values(): {
        [key: number]: T;
    };
    valueArr(): T[];
    adjustOrder(sourceIndex: number, targetIndex: number, moveCount: number): void;
    exchangeOrder(sourceIndex: number, sourceCount: number, targetIndex: number, targetCount: number, insertIndex: number): void;
    del(key: number): void;
    put(key: number, value: T): void;
    get(key: number): T | undefined;
    has(key: number): boolean;
    contain(value: T): boolean;
    each(keyFrom: number, keyTo: number, fn: (t: T, k: number) => boolean | void): void;
    clear(): void;
    getLastIndex(): number;
    delLast(): void;
    delAndReorder(index: number): void;
    addAndReorder(index: number, newValue?: T): void;
}
