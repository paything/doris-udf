{"version":3,"sources":["../src/plugin/components/tooltip-handler/utils/position.ts"],"names":[],"mappings":";;;AAGA,+EAAiG;AASjG,6CAA2E;AAEpE,MAAM,6BAA6B,GAAG,CAC3C,QAAqE,EACrE,KAAiB,EACT,EAAE;IACV,IAAI,MAAc,CAAC;IACnB,IAAI,IAAA,gBAAO,EAAC,QAAQ,CAAC,EAAE;QACrB,IAAI,IAAA,iBAAQ,EAAC,QAAQ,CAAC,EAAE;YACtB,MAAM,GAAG,QAAkB,CAAC;SAC7B;aAAM,IAAI,IAAA,mBAAU,EAAC,QAAQ,CAAC,EAAE;YAE/B,MAAM,eAAe,GAAI,QAA0C,CAAC,KAAK,CAAC,CAAC;YAE3E,IAAI,IAAA,iBAAQ,EAAC,eAAe,CAAC,EAAE;gBAC7B,MAAM,GAAG,eAAe,CAAC;aAC1B;SACF;KACF;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAlBW,QAAA,6BAA6B,iCAkBxC;AAOW,QAAA,YAAY,GAA6E;IACpG,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACb,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACb,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACZ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACZ,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACZ,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACX,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACX,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACd,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACX,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACX,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACV,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACV,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACd,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACd,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpB,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACnB,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CACpB,CAAC;AAEK,MAAM,eAAe,GAAG,CAC7B,QAA8B,EAC9B,GAAc,EACd,cAAmC,CAAC,EACf,EAAE,eAAC,OAAA,MAAA,MAAA,oBAAY,CAAC,QAAQ,CAAC,0CAAG,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,mCAAI,WAAW,CAAA,EAAA,CAAC;AAJ1E,QAAA,eAAe,mBAI2D;AAEhF,MAAM,yBAAyB,GAAG,CAAC,aAA6B,EAAE,gBAA8B,EAAE,EAAE;;IACzG,MAAM,UAAU,GAAwB,IAAI,GAAG,EAAE,CAAC;IAClD,MAAM,UAAU,GAAwB,IAAI,GAAG,EAAE,CAAC;IAClD,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,aAAa,CAAC;IACxC,MAAM,YAAY,GAAI,MAA2B,CAAC,SAAS,iBAAyB,CAAC;IACrF,MAAM,UAAU,GAAG,YAAY;QAC7B,CAAC,CAAE,MAA2B,CAAC,cAAc,EAAE;QAC/C,CAAC,CAAE,MAA2B,CAAC,cAAc,EAAE,CAAC;IAClD,MAAM,MAAM,GAAG,UAAU,CAAC,SAAS,EAAE,CAAC;IACtC,MAAM,IAAI,GAAG,MAAM;SAChB,QAAQ,EAAE;SACV,kBAAkB,CAAC,MAAM,CAAC;SAC1B,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,MAAM,CAAU,CAAC;IAE7C,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,SAAS,CAAC;KAClB;IACD,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE;QAChE,KAAK,EAAE,MAAA,MAAM,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,iBAAiB,EAAE,CAAC,0CAAG,CAAC,CAAC;QAC/E,IAAI;KACL,CAAC,CAAC;IAEH,MAAM,KAAK,GAA0B;QACnC,MAAM,EAAE;YACN,QAAQ,EAAE,GAAG;YACb,cAAc,EAAE,GAAG;YACnB,YAAY,EAAE,UAAU;YACxB,UAAU,EAAE;gBACV,OAAO,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI;gBAC1B,IAAI,EAAE,MAAM;aACb;SACF;QACD,MAAM,EAAE;YACN,QAAQ,EAAE,GAAG;YACb,cAAc,EAAE,GAAG;YACnB,YAAY,EAAE,UAAU;YACxB,UAAU,EAAE;gBACV,OAAO,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI;gBAC1B,IAAI,EAAE,MAAM;aACb;SACF;KACF,CAAC;IAEF,IAAA,yBAAa,EAAC,KAAK,EAAE,MAA0B,EAAE,gBAAgB,CAAC,CAAC;IAEnE,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE;QAC1B,OAAO,IAAA,2BAAe,EAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KACtC;IACD,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE;QAC1B,OAAO,IAAA,2BAAe,EAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KACtC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AApDW,QAAA,yBAAyB,6BAoDpC;AAEK,MAAM,8BAA8B,GAAG,CAAC,GAAQ,EAAwC,EAAE;IAC/F,OAAO,CACL,IAAA,iBAAQ,EAAC,GAAG,CAAC;QACb,CAAC,IAAA,gBAAO,EAAE,GAAqC,CAAC,IAAI,CAAC;YACnD,IAAA,gBAAO,EAAE,GAAqC,CAAC,KAAK,CAAC;YACrD,IAAA,gBAAO,EAAE,GAAqC,CAAC,GAAG,CAAC;YACnD,IAAA,gBAAO,EAAE,GAAqC,CAAC,MAAM,CAAC,CAAC,CAC1D,CAAC;AACJ,CAAC,CAAC;AARW,QAAA,8BAA8B,kCAQzC;AAEK,MAAM,6BAA6B,GAAG,CAAC,GAAQ,EAAuC,EAAE;IAC7F,OAAO,CACL,IAAA,iBAAQ,EAAC,GAAG,CAAC;QACb,CAAC,IAAA,gBAAO,EAAE,GAAoC,CAAC,CAAC,CAAC,IAAI,IAAA,gBAAO,EAAE,GAAoC,CAAC,CAAC,CAAC,CAAC,CACvG,CAAC;AACJ,CAAC,CAAC;AALW,QAAA,6BAA6B,iCAKxC","file":"position.js","sourcesContent":["import type { IAxis } from '../../../../component/axis';\nimport type { AxisCurrentValueMap, CrossHairStateByField } from '../../../../component/crosshair';\n\nimport { layoutByValue, layoutCrosshair } from '../../../../component/crosshair/utils/cartesian';\nimport type { IDimensionData } from '../../../../event';\nimport type { ICartesianSeries } from '../../../../series';\nimport { Direction, type ILayoutPoint } from '../../../../typings';\nimport type {\n  IFixedTooltipPositionPattern,\n  IGlobalTooltipPositionPattern,\n  TooltipFixedPosition\n} from '../../../../typings/tooltip/position';\nimport { isFunction, isNumber, isObject, isValid } from '@visactor/vutils';\n\nexport const getActualTooltipPositionValue = (\n  position: number | ((event: MouseEvent) => number) | null | undefined,\n  event: MouseEvent\n): number => {\n  let result: number;\n  if (isValid(position)) {\n    if (isNumber(position)) {\n      result = position as number;\n    } else if (isFunction(position)) {\n      //  这里额外判断下是否合法\n      const tooltipPosition = (position as (event: MouseEvent) => number)(event);\n\n      if (isNumber(tooltipPosition)) {\n        result = tooltipPosition;\n      }\n    }\n  }\n  return result;\n};\n\n// 'left' | 'centerLeft' | 'center'  | 'centerRight' |  'right'\n// 'top' | 'centerTop' | 'center' | 'centerBottom' | 'bottom'\nexport type TooltipPositionType = -2 | -1 | 0 | 1 | 2;\n\n/** position 对齐方式在 x、y 分量下的分解 */\nexport const positionType: Record<TooltipFixedPosition, [TooltipPositionType, TooltipPositionType]> = {\n  left: [-2, 0],\n  right: [2, 0],\n  top: [0, -2],\n  lt: [-2, -2],\n  tl: [-2, -2],\n  rt: [2, -2],\n  tr: [2, -2],\n  bottom: [0, 2],\n  bl: [-2, 2],\n  lb: [-2, 2],\n  br: [2, 2],\n  rb: [2, 2],\n  inside: [0, 0], // 旧版兼容\n  center: [0, 0],\n  centerBottom: [0, 1],\n  centerTop: [0, -1],\n  centerLeft: [-1, 0],\n  centerRight: [1, 0]\n};\n\nexport const getPositionType = (\n  position: TooltipFixedPosition,\n  dim: 'x' | 'y',\n  defaultCase: TooltipPositionType = 2\n): TooltipPositionType => positionType[position]?.[dim === 'x' ? 0 : 1] ?? defaultCase;\n\nexport const getCartesianCrosshairRect = (dimensionData: IDimensionData, layoutStartPoint: ILayoutPoint) => {\n  const currValueX: AxisCurrentValueMap = new Map();\n  const currValueY: AxisCurrentValueMap = new Map();\n  const { series, datum } = dimensionData;\n  const isHorizontal = (series as ICartesianSeries).direction === Direction.horizontal;\n  const axisHelper = isHorizontal\n    ? (series as ICartesianSeries).getYAxisHelper()\n    : (series as ICartesianSeries).getXAxisHelper();\n  const axisId = axisHelper.getAxisId();\n  const axis = series\n    .getChart()\n    .getComponentsByKey('axes')\n    .find(axis => axis.id === axisId) as IAxis;\n\n  if (!axis) {\n    return undefined;\n  }\n  (isHorizontal ? currValueY : currValueX).set(axis.getSpecIndex(), {\n    datum: series.getDatumPositionValues(datum[0], series.getDimensionField())?.[0],\n    axis\n  });\n\n  const state: CrossHairStateByField = {\n    xField: {\n      coordKey: 'x',\n      anotherAxisKey: 'y',\n      currentValue: currValueX,\n      attributes: {\n        visible: !!currValueX.size,\n        type: 'rect'\n      }\n    },\n    yField: {\n      coordKey: 'y',\n      anotherAxisKey: 'x',\n      currentValue: currValueY,\n      attributes: {\n        visible: !!currValueY.size,\n        type: 'rect'\n      }\n    }\n  };\n\n  layoutByValue(state, series as ICartesianSeries, layoutStartPoint);\n\n  if (state.xField.cacheInfo) {\n    return layoutCrosshair(state.xField);\n  }\n  if (state.yField.cacheInfo) {\n    return layoutCrosshair(state.yField);\n  }\n  return undefined;\n};\n\nexport const isGlobalTooltipPositionPattern = (obj: any): obj is IGlobalTooltipPositionPattern => {\n  return (\n    isObject(obj) &&\n    (isValid((obj as IGlobalTooltipPositionPattern).left) ||\n      isValid((obj as IGlobalTooltipPositionPattern).right) ||\n      isValid((obj as IGlobalTooltipPositionPattern).top) ||\n      isValid((obj as IGlobalTooltipPositionPattern).bottom))\n  );\n};\n\nexport const isFixedTooltipPositionPattern = (obj: any): obj is IFixedTooltipPositionPattern => {\n  return (\n    isObject(obj) &&\n    (isValid((obj as IFixedTooltipPositionPattern).x) || isValid((obj as IFixedTooltipPositionPattern).y))\n  );\n};\n"]}