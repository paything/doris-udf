{"version":3,"sources":["../src/animation/interface.ts"],"names":[],"mappings":";;;AAGA,IAAY,kBAUX;AAVD,WAAY,kBAAkB;IAC5B,uCAAiB,CAAA;IACjB,6CAAuB,CAAA;IACvB,qCAAe,CAAA;IACf,uCAAiB,CAAA;IACjB,qCAAe,CAAA;IACf,mCAAa,CAAA;IACb,uCAAiB,CAAA;IAEjB,mCAAa,CAAA;AACf,CAAC,EAVW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAU7B","file":"interface.js","sourcesContent":["export type { MarkAnimationSpec } from '@visactor/vgrammar-core';\nimport type { ICompilable } from '../compile/interface';\n\nexport enum AnimationStateEnum {\n  appear = 'appear',\n  disappear = 'disappear',\n  enter = 'enter',\n  update = 'update',\n  state = 'state',\n  exit = 'exit',\n  normal = 'normal',\n  // for hack\n  none = 'none'\n}\n\nexport type IAnimationState = keyof typeof AnimationStateEnum;\n\nexport interface IAnimateState {\n  animationState: { callback: (datum: any, element: any) => AnimationStateEnum };\n}\n\nexport interface IAnimate extends ICompilable {\n  id: number;\n  updateAnimateState: (state: AnimationStateEnum, noRender?: boolean) => void;\n  getAnimationStateSignalName: () => string;\n  // TODO: animation control\n  // pause: () => void;\n  // resume: () => void;\n}\n\nexport interface ICartesianGroupAnimationParams {\n  direction: () => 'x' | 'y';\n  orient: () => 'positive' | 'negative';\n  width: () => number;\n  height: () => number;\n}\n"]}