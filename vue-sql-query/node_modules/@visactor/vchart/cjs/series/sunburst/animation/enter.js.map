{"version":3,"sources":["../src/series/sunburst/animation/enter.ts"],"names":[],"mappings":";;;AAGA,mCAA6D;AAC7D,6CAAmE;AAEnE,MAAM,sBAAsB,GAAG,CAAC,QAAoB,EAAE,UAAkB,EAAE,QAAgB,EAAoB,EAAE;IAE9G,IAAI,IAAA,gBAAO,EAAC,QAAQ,CAAC,EAAE;QACrB,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;KAC/B;IAED,MAAM,aAAa,GAAG,IAAA,mBAAU,EAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,YAAY,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpG,MAAM,WAAW,GAAG,IAAA,mBAAU,EAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,UAAU,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChG,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AACtC,CAAC,CAAC;AAEK,MAAM,aAAa,GAAG,CAAC,MAAgC,EAAwB,EAAE;IACtF,OAAO;QACL,OAAO,EAAE;YACP,UAAU,EAAE;gBACV,IAAI,EAAE,CAAC,CAAQ,EAAE,OAAiB,EAAE,EAAE;oBACpC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;oBAExD,MAAM,aAAa,GAAG,IAAA,4BAAoB,EAAC,OAAO,CAAC,CAAC;oBAEpD,MAAM,UAAU,GAAG,sBAAsB,CAAC,aAAa,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;oBAE/E,MAAM,KAAK,GAAG,IAAA,oBAAY,EAAC,CAAC,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;oBACrD,OAAO,KAAK,GAAG,CAAC,QAAQ,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC;gBACtD,CAAC;gBACD,EAAE,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU;aAC/B;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,CAAC,CAAQ,EAAE,OAAiB,EAAE,EAAE;oBACpC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;oBAExD,MAAM,aAAa,GAAG,IAAA,4BAAoB,EAAC,OAAO,CAAC,CAAC;oBAEpD,MAAM,UAAU,GAAG,sBAAsB,CAAC,aAAa,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;oBAE/E,MAAM,KAAK,GAAG,IAAA,oBAAY,EAAC,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;oBACnD,OAAO,KAAK,GAAG,CAAC,QAAQ,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC;gBACtD,CAAC;gBACD,EAAE,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ;aAC7B;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW;gBACjC,EAAE,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW;aAChC;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW;gBACjC,EAAE,EAAE,CAAC,CAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW;aAChC;SACF;KACF,CAAC;AACJ,CAAC,CAAC;AAvCW,QAAA,aAAa,iBAuCxB","file":"enter.js","sourcesContent":["import type { IAnimationTypeConfig, IElement } from '@visactor/vgrammar-core';\nimport type { ISunburstAnimationParams } from './interface';\nimport type { Datum } from '../../../typings';\nimport { computeRatio, getInnerMostElements } from './utils';\nimport { isEmpty, maxInArray, minInArray } from '@visactor/vutils';\n\nconst computeInnerAngleRange = (elements: IElement[], startAngle: number, endAngle: number): [number, number] => {\n  // 处理enter时从无到有的case, 例如图例.\n  if (isEmpty(elements)) {\n    return [startAngle, endAngle];\n  }\n\n  const minStartAngle = minInArray(elements.map(m => m.getGraphicAttribute('startAngle', false) * 1));\n  const maxEndAngle = maxInArray(elements.map(m => m.getGraphicAttribute('endAngle', false) * 1));\n  return [minStartAngle, maxEndAngle];\n};\n\nexport const sunburstEnter = (params: ISunburstAnimationParams): IAnimationTypeConfig => {\n  return {\n    channel: {\n      startAngle: {\n        from: (d: Datum, element: IElement) => {\n          const { startAngle, endAngle } = params.animationInfo();\n          // 得到最内层的elements.\n          const innerElements = getInnerMostElements(element);\n          // 计算间距\n          const angleRange = computeInnerAngleRange(innerElements, startAngle, endAngle);\n          // 计算比例\n          const ratio = computeRatio(d.startAngle, angleRange);\n          return ratio * (endAngle - startAngle) + startAngle;\n        },\n        to: (d: Datum) => d.startAngle\n      },\n      endAngle: {\n        from: (d: Datum, element: IElement) => {\n          const { startAngle, endAngle } = params.animationInfo();\n          // 得到最内层的elements.\n          const innerElements = getInnerMostElements(element);\n          // 计算间距\n          const angleRange = computeInnerAngleRange(innerElements, startAngle, endAngle);\n          // 计算比例\n          const ratio = computeRatio(d.endAngle, angleRange);\n          return ratio * (endAngle - startAngle) + startAngle;\n        },\n        to: (d: Datum) => d.endAngle\n      },\n      outerRadius: {\n        from: (d: Datum) => d.innerRadius,\n        to: (d: Datum) => d.outerRadius\n      },\n      innerRadius: {\n        from: (d: Datum) => d.innerRadius,\n        to: (d: Datum) => d.innerRadius\n      }\n    }\n  };\n};\n"]}