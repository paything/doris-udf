{"version":3,"sources":["../src/series/pie/3d/pie-3d.ts"],"names":[],"mappings":";;;AAAA,2DAA6D;AAG7D,+CAA0E;AAG1E,iDAAyD;AACzD,gCAAuC;AACvC,0CAA8C;AAC9C,mDAAgD;AAChD,sDAAgE;AAChE,6DAAkE;AAGlE,MAAa,WAA2D,SAAQ,mBAAgB;IAAhG;;QAEE,SAAI,GAAG,qBAAc,CAAC,KAAK,CAAC;QAClB,iBAAY,WAAgD;QAC5D,iBAAY,WAAoC;QAIjD,2BAAsB,GAAG,+CAAiC,CAAC;IA+BtE,CAAC;IA3BC,eAAe;;QACb,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,MAAA,MAAA,IAAI,CAAC,KAAK,0CAAE,OAAO,mCAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACtD,CAAC;IAED,aAAa;QACX,KAAK,CAAC,aAAa,EAAE,CAAC;QACtB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,YAAY,CACf,OAAO,EACP;gBACE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ;aAC1B,EACD,QAAQ,EACR,0BAAc,CAAC,MAAM,CACtB,CAAC;SACH;IACH,CAAC;IAED,kBAAkB,CAAC,QAAmB,EAAE,OAAY,EAAE;QACpD,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO;SACR;QACD,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,0BAAc,CAAC,IAAI,CAAC,CAAC;IACnF,CAAC;;AAtCH,kCAuCC;AAtCiB,gBAAI,GAAW,qBAAc,CAAC,KAAK,CAAC;AAKpC,gBAAI,GAAkB,0BAAe,CAAC;AACtC,kCAAsB,GAAG,+CAAiC,CAAC;AAkCtE,MAAM,mBAAmB,GAAG,GAAG,EAAE;IACtC,IAAA,kCAAsB,GAAE,CAAC;IACzB,IAAA,0BAAiB,GAAE,CAAC;IACpB,iBAAO,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AACxD,CAAC,CAAC;AAJW,QAAA,mBAAmB,uBAI9B","file":"pie-3d.js","sourcesContent":["import { AttributeLevel } from '../../../constant/attribute';\nimport { MarkTypeEnum } from '../../../mark/interface/type';\nimport type { IArcSeries, SeriesMarkMap } from '../../interface';\nimport { SeriesMarkNameEnum, SeriesTypeEnum } from '../../interface/type';\n// eslint-disable-next-line no-duplicate-imports\nimport type { IPie3dSeriesSpec } from '../interface';\nimport { registerArc3dMark } from '../../../mark/arc-3d';\nimport { BasePieSeries } from '../pie';\nimport { pie3dSeriesMark } from '../constant';\nimport { Factory } from '../../../core/factory';\nimport { registerPie3dAnimation } from '../animation/animation';\nimport { Pie3dSeriesSpecTransformer } from './pie-3d-transformer';\nimport type { ITextMark } from '../../../mark/interface';\n\nexport class Pie3dSeries<T extends IPie3dSeriesSpec = IPie3dSeriesSpec> extends BasePieSeries<T> implements IArcSeries {\n  static readonly type: string = SeriesTypeEnum.pie3d;\n  type = SeriesTypeEnum.pie3d;\n  protected _pieMarkName: SeriesMarkNameEnum = SeriesMarkNameEnum.pie3d;\n  protected _pieMarkType: MarkTypeEnum = MarkTypeEnum.arc3d;\n\n  static readonly mark: SeriesMarkMap = pie3dSeriesMark;\n  static readonly transformerConstructor = Pie3dSeriesSpecTransformer as any;\n  readonly transformerConstructor = Pie3dSeriesSpecTransformer as any;\n\n  protected _angle3d: number;\n\n  setAttrFromSpec(): void {\n    super.setAttrFromSpec();\n    this._angle3d = this._spec?.angle3d ?? -Math.PI / 3;\n  }\n\n  initMarkStyle(): void {\n    super.initMarkStyle();\n    const pieMark = this._pieMark;\n    if (pieMark) {\n      this.setMarkStyle(\n        pieMark,\n        {\n          beta: () => this._angle3d\n        },\n        'normal',\n        AttributeLevel.Series\n      );\n    }\n  }\n\n  initLabelMarkStyle(textMark: ITextMark, spec: any = {}): void {\n    if (!textMark) {\n      return;\n    }\n    super.initLabelMarkStyle(textMark);\n    this.setMarkStyle(textMark, { support3d: true }, undefined, AttributeLevel.Mark);\n  }\n}\n\nexport const registerPie3dSeries = () => {\n  registerPie3dAnimation();\n  registerArc3dMark();\n  Factory.registerSeries(Pie3dSeries.type, Pie3dSeries);\n};\n"]}