{"version":3,"sources":["../src/component/brush/brush.ts"],"names":[],"mappings":"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","file":"brush.js","sourcesContent":["import { ChartEvent } from '../../constant/event';\nimport { AttributeLevel } from '../../constant/attribute';\nimport { LayoutZIndex } from '../../constant/layout';\nimport { BaseComponent } from '../base/base-component';\n// eslint-disable-next-line no-duplicate-imports\nimport { ComponentTypeEnum } from '../interface/type';\nimport { Brush as BrushComponent, IOperateType as BrushEvent } from '@visactor/vrender-components';\nimport type { IBounds, IPointLike, Maybe } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { array, polygonIntersectPolygon, isValid, last, cloneDeep } from '@visactor/vutils';\nimport type { IModelRenderOption, IModelSpecInfo } from '../../model/interface';\nimport type { IRegion } from '../../region/interface';\nimport type { IGraphic, IGroup, INode, IPolygon } from '@visactor/vrender-core';\nimport { transformToGraphic } from '../../util/style';\nimport type { ISeries } from '../../series/interface';\nimport type { IMark } from '../../mark/interface';\nimport type { IElement } from '@visactor/vgrammar-core';\nimport type { BrushInteractiveRangeAttr, IBrush, IBrushSpec, selectedItemStyle } from './interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { isEqual } from '@visactor/vutils';\nimport { Factory } from '../../core/factory';\nimport type { DataZoom } from '../data-zoom';\nimport type { IBandLikeScale, IContinuousScale, ILinearScale } from '@visactor/vscale';\nimport type { AxisComponent } from '../axis/base-axis';\nimport { getSpecInfo } from '../util';\n\nconst IN_BRUSH_STATE = 'inBrush';\nconst OUT_BRUSH_STATE = 'outOfBrush';\n\nexport class Brush<T extends IBrushSpec = IBrushSpec> extends BaseComponent<T> implements IBrush {\n  layoutType: 'none' = 'none';\n  static type = ComponentTypeEnum.brush;\n  type = ComponentTypeEnum.brush;\n  name: string = ComponentTypeEnum.brush;\n\n  static specKey = 'brush';\n  specKey = 'brush';\n\n  layoutZIndex: number = LayoutZIndex.Brush;\n\n  // brush组件\n  protected _brushComponents!: BrushComponent[];\n  protected _relativeRegions!: IRegion[];\n  protected _linkedSeries: ISeries[] = [];\n\n  private _itemMap: { [regionId: string | number]: IMark[] } = {};\n  private _linkedItemMap: { [seriesId: string | number]: IMark[] } = {};\n\n  // 用brushName做分组管理的原因是: 如果有多个brush, 某个图元A brush内, 但在B brush外, 该图元state会被B误变成out of brush。 但其实该图元只有在A brush外才能被判断out of brush\n  // 用dict做存储因为方便查找和删减对应图元\n  protected _inBrushElementsMap: { [brushName: string]: { [elementKey: string]: IElement } } = {};\n  protected _outOfBrushElementsMap: { [elementKey: string]: IElement } = {};\n  protected _linkedInBrushElementsMap: { [brushName: string]: { [elementKey: string]: IElement } } = {};\n  protected _linkedOutOfBrushElementsMap: { [elementKey: string]: IElement } = {};\n\n  private _cacheInteractiveRangeAttrs: BrushInteractiveRangeAttr[] = [];\n\n  private _needDisablePickable: boolean = false;\n\n  private _releatedAxes: AxisComponent[] = [];\n\n  // 根据region找axis\n  private _regionAxisMap: { [regionId: string]: AxisComponent[] } = {};\n  // 根据axis找dataZoom\n  private _axisDataZoomMap: { [axisId: string]: DataZoom } = {};\n  // 记录当前操作的axis或dataZoom的状态\n  private _zoomRecord: {\n    operateComponent: AxisComponent | DataZoom;\n    start: number;\n    end: number;\n    startValue: number | string;\n    endValue: number | string;\n  }[] = [];\n\n  static getSpecInfo(chartSpec: any): Maybe<IModelSpecInfo[]> {\n    return getSpecInfo<IBrushSpec>(chartSpec, this.specKey, this.type, (s: IBrushSpec) => {\n      return s.visible !== false;\n    });\n  }\n\n  /*** start: abstract pipe ***/\n  init() {\n    const inBrushMarkAttr = this._transformBrushedMarkAttr(this._spec.inBrush);\n    const outOfBrushMarkAttr = this._transformBrushedMarkAttr(this._spec.outOfBrush);\n    // 注册mark state, 便于后续state管理\n    this._option.getAllSeries().forEach((s: ISeries) => {\n      s.getActiveMarks().forEach((m: IMark) => {\n        if (m) {\n          s.setMarkStyle(\n            m,\n            {\n              ...inBrushMarkAttr\n            },\n            IN_BRUSH_STATE,\n            AttributeLevel.Series\n          );\n          s.setMarkStyle(\n            m,\n            {\n              ...outOfBrushMarkAttr\n            },\n            OUT_BRUSH_STATE,\n            AttributeLevel.Series\n          );\n        }\n      });\n    });\n  }\n  private _initNeedOperatedItem() {\n    const seriesUserId = this._spec.seriesId;\n    const seriesIndex = this._spec.seriesIndex;\n    this._relativeRegions.forEach(r => {\n      const allMarks: IMark[] = [];\n      r.getSeries().forEach((s: ISeries) => {\n        if (\n          (seriesUserId && array(seriesUserId).includes(s.userId.toString())) ||\n          (seriesIndex && array(seriesIndex).includes(s.getSpecIndex())) ||\n          (!seriesIndex && !seriesUserId)\n        ) {\n          allMarks.push(...s.getMarksWithoutRoot());\n        }\n        this._itemMap[r.id] = allMarks;\n      });\n    });\n\n    this._linkedSeries.forEach(s => {\n      this._linkedItemMap[s.id] = s.getMarksWithoutRoot();\n    });\n  }\n\n  created() {\n    super.created();\n\n    this.initEvent();\n    this._bindRegions();\n    this._bindLinkedSeries();\n    this._initRegionAxisMap();\n    this._initAxisDataZoomMap();\n    this._initNeedOperatedItem();\n  }\n\n  protected _bindRegions() {\n    if (!isValid(this._spec.regionId) && !isValid(this._spec.regionIndex)) {\n      this._relativeRegions = this._option.getAllRegions();\n    } else {\n      this._relativeRegions = this._option.getRegionsInUserIdOrIndex(\n        array(this._spec.regionId),\n        array(this._spec.regionIndex)\n      );\n    }\n  }\n\n  protected _bindLinkedSeries() {\n    if (!isValid(this._spec.brushLinkSeriesId) && !isValid(this._spec.brushLinkSeriesIndex)) {\n      return;\n    }\n    this._linkedSeries = this._option.getSeriesInUserIdOrIndex(\n      array(this._spec.brushLinkSeriesId),\n      array(this._spec.brushLinkSeriesIndex)\n    );\n  }\n\n  private _initRegionAxisMap() {\n    // 如果配置了axis，则按配置\n    // 如果没有配置axis，则默认所有axis\n    if (isValid(this._spec.axisId)) {\n      array(this._spec.axisId).forEach((axisId: string) => {\n        this._releatedAxes.push(this._option.getComponentByUserId(axisId) as AxisComponent);\n      });\n    } else if (isValid(this._spec.axisIndex)) {\n      array(this._spec.axisIndex).forEach((axisIndex: number) => {\n        this._releatedAxes.push(this._option.getComponentByIndex('axes', axisIndex) as AxisComponent);\n      });\n    } else {\n      this._releatedAxes = this._option.getComponentsByKey('axes') as AxisComponent[];\n    }\n\n    // 按照region进行分组，便于brush找到关联axis (brush -> region -> axis)\n    this._releatedAxes.forEach((axis: AxisComponent) => {\n      axis?.getRegions().forEach((region: IRegion) => {\n        if (this._regionAxisMap['region_' + region.id]) {\n          this._regionAxisMap['region_' + region.id].push(axis);\n        } else {\n          this._regionAxisMap['region_' + region.id] = [axis];\n        }\n      });\n    });\n  }\n\n  private _initAxisDataZoomMap() {\n    (this._option.getComponentsByKey('dataZoom') as DataZoom[]).forEach((dz: DataZoom) => {\n      if (dz.relatedAxisComponent) {\n        this._axisDataZoomMap[(dz.relatedAxisComponent as AxisComponent).id] = dz;\n      }\n    });\n  }\n\n  protected initEvent() {\n    // do nothing\n  }\n  onRender(ctx: IModelRenderOption): void {\n    // do nothing\n  }\n  changeRegions(regions: IRegion[]): void {\n    // do nothing\n  }\n\n  _compareSpec(spec: T, prevSpec: T) {\n    if (this._brushComponents) {\n      // FIXME: 这个逻辑放在这个方法里不太妥当？\n      this._relativeRegions.forEach((region: IRegion, index: number) => {\n        this._updateBrushComponent(region, index);\n      });\n    }\n    const result = super._compareSpec(spec, prevSpec);\n    if (!isEqual(prevSpec, spec)) {\n      result.reRender = true;\n      result.reMake = true;\n    }\n    return result;\n  }\n\n  onLayoutEnd(ctx: any): void {\n    super.onLayoutEnd(ctx);\n    if (this._option.disableTriggerEvent) {\n      return;\n    }\n    const brushVisible = this._spec.visible ?? true;\n    if (brushVisible) {\n      if (!this._brushComponents) {\n        this._brushComponents = [];\n        this._relativeRegions.forEach((region: IRegion, index: number) => {\n          this._createBrushComponent(region, index);\n        });\n      } else {\n        this._relativeRegions.forEach((region: IRegion, index: number) => {\n          this._updateBrushComponent(region, index);\n        });\n      }\n    }\n  }\n  /*** end: abstract pipe ***/\n\n  /*** start: brush component ***/\n  protected _updateBrushComponent(region: IRegion, componentIndex: number) {\n    const interactiveAttr = this._getBrushInteractiveAttr(region);\n    // 布局变化后, 更新可交互范围\n    const brushComponent = this._brushComponents[componentIndex];\n    brushComponent.setAttributes(interactiveAttr as any);\n\n    // 布局变化后，清空brushMask 和 重置图元高亮状态\n    this._initMarkBrushState(componentIndex, '');\n    brushComponent.children[0].removeAllChild();\n  }\n\n  protected _createBrushComponent(region: IRegion, componentIndex: number) {\n    const interactiveAttr = this._getBrushInteractiveAttr(region);\n    const brush = new BrushComponent({\n      zIndex: this.layoutZIndex,\n      brushStyle: transformToGraphic(this._spec?.style),\n      ...interactiveAttr,\n      ...this._spec,\n      disableTriggerEvent: this._option.disableTriggerEvent\n    });\n    brush.id = this._spec.id ?? `brush-${this.id}`;\n    this.getContainer().add(brush as unknown as INode);\n    this._brushComponents.push(brush);\n    this._cacheInteractiveRangeAttrs.push(interactiveAttr);\n\n    brush.addEventListener(BrushEvent.brushActive, (e: any) => {\n      this._initMarkBrushState(componentIndex, OUT_BRUSH_STATE);\n      this._emitEvent(ChartEvent.brushActive, region);\n    });\n\n    brush.addEventListener(BrushEvent.drawStart, (e: any) => {\n      this._emitEvent(ChartEvent.brushStart, region);\n    });\n\n    brush.addEventListener(BrushEvent.moveStart, (e: any) => {\n      this._emitEvent(ChartEvent.brushStart, region);\n    });\n\n    brush.addEventListener(BrushEvent.drawing, (e: any) => {\n      this._needDisablePickable = true;\n      this._handleBrushChange(region, e);\n      this._emitEvent(ChartEvent.brushChange, region);\n    });\n\n    brush.addEventListener(BrushEvent.moving, (e: any) => {\n      this._handleBrushChange(region, e);\n      this._emitEvent(ChartEvent.brushChange, region);\n    });\n\n    brush.addEventListener(BrushEvent.brushClear, (e: any) => {\n      this._initMarkBrushState(componentIndex, '');\n      this._needDisablePickable = false;\n      this._emitEvent(ChartEvent.brushClear, region);\n    });\n\n    brush.addEventListener(BrushEvent.drawEnd, (e: any) => {\n      this._needDisablePickable = false;\n      const { operateMask } = e.detail as any;\n      if (this._spec?.onBrushEnd) {\n        // 如果onBrushEnd返回true，则清空brush， 并抛出clear事件\n        if (this._spec.onBrushEnd(e) === true) {\n          this.clearGraphic();\n          this._initMarkBrushState(componentIndex, '');\n          this._needDisablePickable = false;\n          this._emitEvent(ChartEvent.brushClear, region);\n        } else {\n          this._spec.onBrushEnd(e);\n          this._emitEvent(ChartEvent.brushEnd, region);\n        }\n      } else {\n        const inBrushData = this._extendDataInBrush(this._inBrushElementsMap);\n        if (!this._spec.zoomWhenEmpty && inBrushData.length > 0) {\n          this._setAxisAndDataZoom(operateMask, region);\n        }\n        this._emitEvent(ChartEvent.brushEnd, region);\n      }\n    });\n\n    brush.addEventListener(BrushEvent.moveEnd, (e: any) => {\n      const { operateMask } = e.detail as any;\n      const inBrushData = this._extendDataInBrush(this._inBrushElementsMap);\n      if (!this._spec.zoomWhenEmpty && inBrushData.length > 0) {\n        this._setAxisAndDataZoom(operateMask, region);\n      }\n      this._emitEvent(ChartEvent.brushEnd, region);\n    });\n  }\n\n  protected _getBrushInteractiveAttr(region: IRegion) {\n    const regionLayoutPosition = region.getLayoutStartPoint();\n    const regionLayoutRect = region.getLayoutRect();\n    const seriesRegionStartX = regionLayoutPosition.x;\n    const seriesRegionEndX = seriesRegionStartX + regionLayoutRect.width;\n    const seriesRegionStartY = regionLayoutPosition.y;\n    const seriesRegionEndY = seriesRegionStartY + regionLayoutRect.height;\n    return {\n      interactiveRange: {\n        minY: seriesRegionStartY,\n        maxY: seriesRegionEndY,\n        minX: seriesRegionStartX,\n        maxX: seriesRegionEndX\n      },\n      xRange: [seriesRegionStartX, seriesRegionEndX],\n      yRange: [seriesRegionStartY, seriesRegionEndY]\n    } as BrushInteractiveRangeAttr;\n  }\n\n  private _transformBrushedMarkAttr(brushedStyle: selectedItemStyle) {\n    const styleResult: any = {};\n    if (brushedStyle?.symbol) {\n      styleResult.symbolType = brushedStyle.symbol;\n    }\n    if (brushedStyle?.symbolSize) {\n      styleResult.size = brushedStyle.symbolSize;\n    }\n    if (brushedStyle?.color) {\n      styleResult.fill = brushedStyle.color;\n    }\n    if (brushedStyle?.colorAlpha) {\n      styleResult.fillOpacity = brushedStyle.colorAlpha;\n    }\n    return {\n      ...transformToGraphic(brushedStyle),\n      ...styleResult\n    };\n  }\n  /*** end: brush component ***/\n\n  /*** start: event dispatch ***/\n  private _handleBrushChange(region: IRegion, e: any) {\n    const { operateMask } = e.detail as any;\n    this._reconfigItem(operateMask, region);\n    this._reconfigLinkedItem(operateMask, region);\n  }\n\n  protected _extendDataInBrush(elementsMap: { [brushName: string]: { [elementKey: string]: IElement } }) {\n    const data = [];\n    for (const brushName in elementsMap) {\n      for (const elementKey in elementsMap[brushName]) {\n        data.push({\n          ...elementsMap[brushName][elementKey]?.data?.[0]\n        });\n      }\n    }\n    return data;\n  }\n\n  protected _extendDatumOutOfBrush(elementsMap: { [elementKey: string]: IElement }) {\n    const data = [];\n    for (const elementKey in elementsMap) {\n      // 图例筛选后, elementKey未更新, 导致data可能为null\n      // FIXME: brush透出的map维护逻辑有待优化\n      data.push(elementsMap[elementKey].data?.[0]);\n    }\n    return data;\n  }\n\n  private _emitEvent(eventType: string, region: IRegion) {\n    this.event.emit(eventType, {\n      model: this,\n      value: {\n        // 操作类型\n        operateType: eventType,\n        // 正在操作的region\n        operateRegion: region,\n        // 在选框内的 element data\n        inBrushData: this._extendDataInBrush(this._inBrushElementsMap),\n        // 在选框外的 element data\n        outOfBrushData: this._extendDatumOutOfBrush(this._outOfBrushElementsMap),\n        // 被链接的系列中：在选框内的 element data\n        linkInBrushData: this._extendDataInBrush(this._linkedInBrushElementsMap),\n        // 被链接的系列中：在选框外的 element data\n        linkOutOfBrushData: this._extendDatumOutOfBrush(this._linkedOutOfBrushElementsMap),\n        // 在选框内的 vgrammar elements\n        inBrushElementsMap: this._inBrushElementsMap,\n        // 在选框外的 vgrammar elements\n        outOfBrushElementsMap: this._outOfBrushElementsMap,\n        // 被链接的系列中：在选框内的 vgrammar elements\n        linkedInBrushElementsMap: this._linkedInBrushElementsMap,\n        // 被链接的系列中：在选框外的 vgrammar elements\n        linkedOutOfBrushElementsMap: this._linkedOutOfBrushElementsMap,\n        // 缩放记录\n        zoomRecord: this._zoomRecord\n      },\n      vchart: this._option?.globalInstance\n    });\n  }\n  /*** end: event dispatch ***/\n\n  /** start: set mark state ***/\n  private _reconfigItem(operateMask: IPolygon, region: IRegion) {\n    if (!operateMask?.globalTransMatrix || !operateMask?.attribute?.points) {\n      return;\n    }\n\n    // 根据变换矩阵得到brushMask的实际坐标\n    const points = operateMask?.attribute?.points ?? [];\n    const { a, b, c, d, e, f } = operateMask.globalTransMatrix;\n    const pointsCoord = points.map((p: IPointLike) => {\n      return {\n        x: a * p.x + c * p.y + e,\n        y: b * p.x + d * p.y + f\n      };\n    });\n    const { markTypeFilter = [] } = this._spec;\n\n    // 遍历图元, 更新状态\n    this._itemMap[region.id].forEach((mark: IMark) => {\n      if (markTypeFilter.includes(mark.type)) {\n        return;\n      }\n      const grammarMark = mark.getProduct();\n\n      if (!grammarMark || !grammarMark.elements || !grammarMark.elements.length) {\n        return;\n      }\n\n      const elements = grammarMark.elements;\n      elements.forEach((el: IElement) => {\n        const graphicItem = el.getGraphicItem();\n\n        const elementKey = mark.id + '_' + el.key;\n        // 判断逻辑:\n        // 应该被置为inBrush状态的图元:\n        // before: 在out brush elment map, 即不在任何brush中\n        // now: 在当前brush图元中\n\n        // 应该被置为outOfBrush状态的图元:\n        // before: 在当前brush 的 in brush element map中, 即在当前brush中\n        // now: 不在当前brush中\n        const isBrushContainItem = this._isBrushContainItem(operateMask.globalAABBBounds, pointsCoord, graphicItem);\n        if (this._outOfBrushElementsMap?.[elementKey] && isBrushContainItem) {\n          el.addState(IN_BRUSH_STATE);\n          if (!this._inBrushElementsMap[operateMask?.name]) {\n            this._inBrushElementsMap[operateMask?.name] = {};\n          }\n          this._inBrushElementsMap[operateMask?.name][elementKey] = el;\n          delete this._outOfBrushElementsMap[elementKey];\n        } else if (this._inBrushElementsMap?.[operateMask?.name]?.[elementKey] && !isBrushContainItem) {\n          el.removeState(IN_BRUSH_STATE);\n          el.addState(OUT_BRUSH_STATE);\n          this._outOfBrushElementsMap[elementKey] = el;\n          delete this._inBrushElementsMap[operateMask.name][elementKey];\n        }\n        graphicItem.setAttribute('pickable', !this._needDisablePickable);\n      });\n    });\n  }\n\n  private _reconfigLinkedItem(operateMask: IPolygon, region: IRegion) {\n    if (!operateMask?.globalTransMatrix || !operateMask?.attribute?.points) {\n      return;\n    }\n\n    const regionLayoutPos = region.getLayoutStartPoint();\n    const seriesId = region.getSeries().map(s => s.id);\n    this._linkedSeries.forEach((s: ISeries) => {\n      if (!seriesId.includes(s.id)) {\n        const sRegionLayoutPos = s.getRegion().getLayoutStartPoint();\n\n        const regionOffsetX = sRegionLayoutPos.x - regionLayoutPos.x;\n        const regionOffsetY = sRegionLayoutPos.y - regionLayoutPos.y;\n\n        // 根据变换矩阵得到brushMask的实际坐标\n        const points = operateMask?.attribute?.points ?? [];\n        const { a, b, c, d, e, f } = operateMask.globalTransMatrix;\n\n        const dx = regionOffsetX || 0;\n        const dy = regionOffsetY || 0;\n\n        const pointsCoord = points.map((p: IPointLike) => {\n          return {\n            x: a * p.x + c * p.y + e + dx,\n            y: b * p.x + d * p.y + f + dy\n          };\n        });\n\n        operateMask.globalAABBBounds\n          .clone()\n          .set(\n            operateMask.globalAABBBounds.x1 + dx,\n            operateMask.globalAABBBounds.y1 + dy,\n            operateMask.globalAABBBounds.x2 + dx,\n            operateMask.globalAABBBounds.y2 + dy\n          );\n\n        const { markTypeFilter = [] } = this._spec;\n        this._linkedItemMap[s.id].forEach((mark: IMark) => {\n          if (markTypeFilter.includes(mark.type)) {\n            return;\n          }\n          const grammarMark = mark.getProduct();\n          if (!grammarMark || !grammarMark.elements || !grammarMark.elements.length) {\n            return;\n          }\n          const elements = grammarMark.elements;\n          elements.forEach((el: IElement) => {\n            const graphicItem = el.getGraphicItem();\n            const elementKey = mark.id + '_' + el.key;\n            // 判断逻辑:\n            // 应该被置为inBrush状态的图元:\n            // before: 在out brush elment map, 即不在任何brush中\n            // now: 在当前brush图元中\n\n            // 应该被置为outOfBrush状态的图元:\n            // before: 在当前brush 的 in brush element map中, 即在当前brush中\n            // now: 不在当前brush中\n            if (\n              this._linkedOutOfBrushElementsMap?.[elementKey] &&\n              this._isBrushContainItem(operateMask.globalAABBBounds, pointsCoord, graphicItem)\n            ) {\n              el.addState(IN_BRUSH_STATE);\n              if (!this._linkedInBrushElementsMap[operateMask?.name]) {\n                this._linkedInBrushElementsMap[operateMask?.name] = {};\n              }\n              this._linkedInBrushElementsMap[operateMask?.name][elementKey] = el;\n              delete this._linkedOutOfBrushElementsMap[elementKey];\n            } else if (\n              this._linkedInBrushElementsMap?.[operateMask?.name]?.[elementKey] &&\n              !this._isBrushContainItem(operateMask.globalAABBBounds, pointsCoord, graphicItem)\n            ) {\n              el.removeState(IN_BRUSH_STATE);\n              el.addState(OUT_BRUSH_STATE);\n              this._linkedOutOfBrushElementsMap[elementKey] = el;\n            }\n            graphicItem.setAttribute('pickable', !this._needDisablePickable);\n          });\n        });\n      }\n    });\n  }\n\n  private _isBrushContainItem(brushMaskAABBBounds: IBounds, brushMaskPointsCoord: IPointLike[], item: IGraphic) {\n    // brush与图表图元进行相交 或 包含判断\n    let itemBounds: { x: number; y: number }[] = [];\n    if (['symbol', 'rect'].includes(item.type)) {\n      const { x1, x2, y1, y2 } = item?.globalAABBBounds;\n      itemBounds = [\n        {\n          x: x1,\n          y: y1\n        },\n        {\n          x: x2,\n          y: y1\n        },\n        {\n          x: x2,\n          y: y2\n        },\n        {\n          x: x1,\n          y: y2\n        }\n      ];\n      return polygonIntersectPolygon(brushMaskPointsCoord, itemBounds);\n    }\n    return brushMaskAABBBounds.intersects(item.globalAABBBounds);\n  }\n\n  protected _initMarkBrushState(componentIndex: number, stateName: string) {\n    this._brushComponents.forEach((brush, index) => {\n      if (index !== componentIndex) {\n        brush.children[0].removeAllChild();\n      }\n    });\n\n    this._inBrushElementsMap = {};\n    this._outOfBrushElementsMap = {};\n    this._linkedInBrushElementsMap = {};\n    this._linkedOutOfBrushElementsMap = {};\n    const { markTypeFilter = [] } = this._spec;\n\n    Object.entries(this._itemMap).forEach(([regionId, marks]) => {\n      marks.forEach((mark: IMark) => {\n        if (markTypeFilter.includes(mark.type)) {\n          return;\n        }\n        const grammarMark = mark.getProduct();\n        if (!grammarMark || !grammarMark.elements || !grammarMark.elements.length) {\n          return;\n        }\n        const elements = grammarMark.elements;\n        elements.forEach((el: IElement) => {\n          const elementKey = mark.id + '_' + el.key;\n          el.removeState(IN_BRUSH_STATE);\n          el.removeState(OUT_BRUSH_STATE);\n          el.addState(stateName);\n          this._outOfBrushElementsMap[elementKey] = el;\n        });\n      });\n    });\n    Object.entries(this._linkedItemMap).forEach(([seriesId, marks]) => {\n      marks.forEach((mark: IMark) => {\n        if (markTypeFilter.includes(mark.type)) {\n          return;\n        }\n        const grammarMark = mark.getProduct();\n        if (!grammarMark || !grammarMark.elements || !grammarMark.elements.length) {\n          return;\n        }\n        const elements = grammarMark.elements;\n        elements.forEach((el: IElement) => {\n          const elementKey = mark.id + '_' + el.key;\n          el.removeState(IN_BRUSH_STATE);\n          el.removeState(OUT_BRUSH_STATE);\n          el.addState(stateName);\n          this._linkedOutOfBrushElementsMap[elementKey] = el;\n        });\n      });\n    });\n  }\n  /** end: set mark state  ***/\n\n  /** start: control data zoom ***/\n  private _stateClamp(state: number) {\n    return Math.min(Math.max(0, state), 1);\n  }\n\n  private _setAxisAndDataZoom(operateMask: IPolygon, region: IRegion) {\n    this._zoomRecord = [];\n    if (this._spec.zoomAfterBrush) {\n      // step1: 拿到brush bounds, 计算 continuous axis/dataZoom新范围\n      const operateMaskBounds = operateMask.AABBBounds;\n\n      // step2:\n      // 如果轴关联了dataZoom，则通过dataZoom更新轴\n      // 如果轴没有关联dataZoom，则直接更改轴rangeFactor\n      this._regionAxisMap['region_' + region.id]?.forEach(axis => {\n        const isHorizontal = axis.layoutOrient === 'bottom' || axis.layoutOrient === 'top';\n        const axisRangeExpand = this._spec.axisRangeExpand ?? 0;\n        const { x1, x2, y1, y2 } = operateMaskBounds;\n        const regionStartAttr = isHorizontal ? 'x' : 'y';\n        const boundsStart = isHorizontal ? x1 : y1;\n        const boundsEnd = isHorizontal ? x2 : y2;\n\n        if (this._axisDataZoomMap[axis.id]) {\n          const dataZoom = this._axisDataZoomMap[axis.id];\n          const releatedAxis = dataZoom.relatedAxisComponent as AxisComponent;\n          const startValue = releatedAxis\n            .getScale()\n            .invert(boundsStart - region.getLayoutStartPoint()[regionStartAttr]);\n          const endValue = releatedAxis.getScale().invert(boundsEnd - region.getLayoutStartPoint()[regionStartAttr]);\n          const startPercent = dataZoom.dataToStatePoint(startValue);\n          const endPercent = dataZoom.dataToStatePoint(endValue);\n          const newStartPercent = this._stateClamp(startPercent - axisRangeExpand);\n          const newEndPercent = this._stateClamp(endPercent + axisRangeExpand);\n          dataZoom.setStartAndEnd(Math.min(newStartPercent, newEndPercent), Math.max(newStartPercent, newEndPercent), [\n            'percent',\n            'percent'\n          ]);\n\n          this._zoomRecord.push({\n            operateComponent: dataZoom,\n            start: newStartPercent,\n            end: newEndPercent,\n            startValue: dataZoom.statePointToData(newStartPercent),\n            endValue: dataZoom.statePointToData(newEndPercent)\n          });\n        } else {\n          const range = axis.getScale().range();\n          const rangeFactor = (axis.getScale() as IContinuousScale | IBandLikeScale).rangeFactor() ?? [0, 1];\n\n          // 判断轴是否为反向轴（last(range) < range[0])，即从右到左, 或从下到上\n          // 如果是反向轴, 计算start和end时, 也要保持 start < end\n          const isAxisReverse = last(range) < range[0];\n          const startPosTemp = boundsStart - region.getLayoutStartPoint()[regionStartAttr];\n          const endPosTemp = boundsEnd - region.getLayoutStartPoint()[regionStartAttr];\n          const endPos = isAxisReverse ? Math.min(startPosTemp, endPosTemp) : Math.max(startPosTemp, endPosTemp);\n          const startPos = isAxisReverse ? Math.max(startPosTemp, endPosTemp) : Math.min(startPosTemp, endPosTemp);\n\n          const start =\n            ((startPos - range[0]) / (last(range) - range[0])) * (rangeFactor[1] - rangeFactor[0]) + rangeFactor[0];\n          const end =\n            ((endPos - range[0]) / (last(range) - range[0])) * (rangeFactor[1] - rangeFactor[0]) + rangeFactor[0];\n          const newStart = this._stateClamp(start - axisRangeExpand);\n          const newEnd = this._stateClamp(end + axisRangeExpand);\n          (axis.getScale() as ILinearScale).rangeFactor([newStart, newEnd]);\n          axis.effect.scaleUpdate();\n\n          this._zoomRecord.push({\n            operateComponent: axis,\n            start: newStart,\n            end: newEnd,\n            startValue: axis.getScale().invert(startPos),\n            endValue: axis.getScale().invert(endPos)\n          });\n        }\n      });\n    }\n  }\n\n  /** end: control data zoom ***/\n\n  protected _getNeedClearVRenderComponents(): IGraphic[] {\n    return this._brushComponents as unknown as IGroup[];\n  }\n\n  clearGraphic(): void {\n    if (this._brushComponents) {\n      this._brushComponents.forEach(brush => {\n        (brush as any)._container.incrementalClearChild();\n      });\n    }\n  }\n\n  clear(): void {\n    if (this._brushComponents) {\n      const container = this.getContainer();\n      this._brushComponents.forEach((brush, index) => {\n        // 清空元素状态\n        this._initMarkBrushState(index, '');\n        this._needDisablePickable = false;\n\n        brush.removeAllChild();\n        brush.releaseBrushEvents();\n\n        if (container) {\n          container.removeChild(brush as unknown as INode);\n        }\n      });\n      this._brushComponents = null;\n    }\n  }\n}\n\nexport const registerBrush = () => {\n  Factory.registerComponent(Brush.type, Brush);\n};\n"]}