{"version":3,"sources":["../src/mark/cell.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAK5C,qCAA0C;AAC1C,2DAA4G;AAE5G,MAAa,QAAS,SAAQ,uBAA6B;IAA3D;;QAEW,SAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;IAShC,CAAC;IAPW,gBAAgB;QACxB,MAAM,YAAY,mCACb,KAAK,CAAC,gBAAgB,EAAE,KAC3B,OAAO,EAAE,CAAC,GACX,CAAC;QACF,OAAO,YAAY,CAAC;IACtB,CAAC;;AAVH,4BAWC;AAViB,aAAI,UAAqB;AAYpC,MAAM,gBAAgB,GAAG,GAAG,EAAE;IACnC,iBAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC9C,IAAA,mCAAmB,GAAE,CAAC;IACtB,IAAA,gCAAwB,GAAE,CAAC;AAC7B,CAAC,CAAC;AAJW,QAAA,gBAAgB,oBAI3B","file":"cell.js","sourcesContent":["import { Factory } from './../core/factory';\nimport type { ICellMarkSpec } from '../typings';\nimport type { ICellMark, IMarkStyle } from './interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { MarkTypeEnum } from './interface/type';\nimport { BaseSymbolMark } from './symbol';\nimport { registerCellGraphic, registerCellMark as registerVgrammarCellMark } from '@visactor/vgrammar-core';\n\nexport class CellMark extends BaseSymbolMark<ICellMarkSpec> implements ICellMark {\n  static readonly type = MarkTypeEnum.cell;\n  readonly type = CellMark.type;\n\n  protected _getDefaultStyle() {\n    const defaultStyle: IMarkStyle<ICellMarkSpec> = {\n      ...super._getDefaultStyle(),\n      padding: 0\n    };\n    return defaultStyle;\n  }\n}\n\nexport const registerCellMark = () => {\n  Factory.registerMark(CellMark.type, CellMark);\n  registerCellGraphic();\n  registerVgrammarCellMark();\n};\n"]}