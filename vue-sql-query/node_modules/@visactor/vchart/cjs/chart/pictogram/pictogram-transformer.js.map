{"version":3,"sources":["../src/chart/pictogram/pictogram-transformer.ts"],"names":[],"mappings":";;;AACA,yCAA8C;AAG9C,kCAAmD;AAGnD,MAAa,6BAEX,SAAQ,+BAA2B;IACzB,cAAc,CAAC,IAAY;QACnC,OAAO,IAAI,KAAK,uBAAc,CAAC,SAAS,CAAC;IAC3C,CAAC;IAES,qBAAqB,CAAC,IAAyB;QACvD,OAAO,KAAK,CAAC,qBAAqB,CAAC,IAAI,EAAE;YACvC,MAAM;YACN,WAAW;YACX,YAAY;YACZ,KAAK;YACL,WAAW;YACX,kBAAkB;SACnB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,IAAO;QACnB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAE1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAa,EAAE,EAAE;YACpC,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;CACF;AA3BD,sEA2BC","file":"pictogram-transformer.js","sourcesContent":["// eslint-disable-next-line no-duplicate-imports\nimport { SeriesTypeEnum } from '../../series';\nimport type { IPictogramSeriesSpec } from '../../series/pictogram/interface';\nimport type { RegionSpec, ISeriesSpec } from '../../typings';\nimport { BaseChartSpecTransformer } from '../base';\nimport type { IPictogramChartSpec } from './interface';\n\nexport class PictogramChartSpecTransformer<\n  T extends IPictogramChartSpec = IPictogramChartSpec\n> extends BaseChartSpecTransformer<T> {\n  protected _isValidSeries(type: string) {\n    return type === SeriesTypeEnum.pictogram;\n  }\n\n  protected _getDefaultSeriesSpec(spec: IPictogramChartSpec): IPictogramSeriesSpec {\n    return super._getDefaultSeriesSpec(spec, [\n      'type',\n      'nameField',\n      'valueField',\n      'svg',\n      'pictogram',\n      'defaultFillColor'\n    ]);\n  }\n\n  transformSpec(spec: T): void {\n    super.transformSpec(spec);\n\n    spec.region.forEach((r: RegionSpec) => {\n      r.coordinate = 'geo';\n    });\n\n    super.transformSeriesSpec(spec);\n  }\n}\n"]}