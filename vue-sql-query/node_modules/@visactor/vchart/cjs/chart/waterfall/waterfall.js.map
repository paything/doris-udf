{"version":3,"sources":["../src/chart/waterfall/waterfall.ts"],"names":[],"mappings":";;;AAAA,sDAA6D;AAC7D,gCAAkC;AAGlC,gEAA2E;AAC3E,gDAA6C;AAE7C,mEAAwE;AAExE,MAAa,cAAoE,SAAQ,cAExF;IAFD;;QAOW,2BAAsB,GAAG,qDAA6B,CAAC;QACvD,SAAI,eAAmC;QACvC,eAAU,GAAW,qBAAc,CAAC,SAAS,CAAC;IACzD,CAAC;;AAVD,wCAUC;AAPiB,mBAAI,eAAmC;AACvC,yBAAU,GAAW,qBAAc,CAAC,SAAS,CAAC;AAC9C,qCAAsB,GAAG,qDAA6B,CAAC;AAOlE,MAAM,sBAAsB,GAAG,GAAG,EAAE;IACzC,IAAA,mCAAuB,GAAE,CAAC;IAC1B,iBAAO,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC7D,CAAC,CAAC;AAHW,QAAA,sBAAsB,0BAGjC","file":"waterfall.js","sourcesContent":["import { SeriesTypeEnum } from '../../series/interface/type';\nimport { BarChart } from '../bar';\nimport { ChartTypeEnum } from '../interface/type';\nimport type { IWaterfallChartSpec } from './interface';\nimport { registerWaterfallSeries } from '../../series/waterfall/waterfall';\nimport { Factory } from '../../core/factory';\nimport type { AdaptiveSpec } from '../../typings';\nimport { WaterfallChartSpecTransformer } from './waterfall-transformer';\n\nexport class WaterfallChart<T extends IWaterfallChartSpec = IWaterfallChartSpec> extends BarChart<\n  AdaptiveSpec<T, 'type' | 'series' | 'label'>\n> {\n  static readonly type: string = ChartTypeEnum.waterfall;\n  static readonly seriesType: string = SeriesTypeEnum.waterfall;\n  static readonly transformerConstructor = WaterfallChartSpecTransformer;\n  // @ts-ignore\n  readonly transformerConstructor = WaterfallChartSpecTransformer;\n  readonly type: string = ChartTypeEnum.waterfall;\n  readonly seriesType: string = SeriesTypeEnum.waterfall;\n}\n\nexport const registerWaterfallChart = () => {\n  registerWaterfallSeries();\n  Factory.registerChart(WaterfallChart.type, WaterfallChart);\n};\n"]}