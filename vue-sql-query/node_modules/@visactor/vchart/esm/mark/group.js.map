{"version":3,"sources":["../src/mark/group.ts"],"names":[],"mappings":"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","file":"group.js","sourcesContent":["import { Factory } from './../core/factory';\nimport type { Maybe } from '../typings';\n// eslint-disable-next-line no-duplicate-imports\nimport { warn } from '../util/debug';\nimport type { IGroupMarkSpec } from '../typings/visual';\nimport { BaseMark } from './base/base-mark';\nimport type { IGroupMark, IMark, IMarkStyle, MarkType } from './interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { MarkTypeEnum } from './interface/type';\nimport type { IGroupMark as IVGrammarGroupMark } from '@visactor/vgrammar-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { registerGroupGraphic } from '@visactor/vgrammar-core';\nimport type { IMarkCompileOption } from '../compile/mark';\n\nexport class GroupMark extends BaseMark<IGroupMarkSpec> implements IGroupMark {\n  static readonly type = MarkTypeEnum.group;\n  readonly type = GroupMark.type;\n  protected _marks: IMark[] = [];\n  getMarks(): IMark[] {\n    return this._marks;\n  }\n\n  protected declare _product: Maybe<IVGrammarGroupMark>;\n  declare getProduct: () => Maybe<IVGrammarGroupMark>;\n\n  protected _getDefaultStyle() {\n    const defaultStyle: IMarkStyle<IGroupMarkSpec> = {\n      ...super._getDefaultStyle()\n      // clip: false\n    };\n    return defaultStyle;\n  }\n\n  protected isMarkExist(mark: IMark): boolean {\n    return this._marks.find(m => m.id === mark.id) !== undefined;\n  }\n\n  addMark(mark: IMark): boolean {\n    if (this.isMarkExist(mark)) {\n      warn('Mark already exists, add mark failed.');\n      return false;\n    }\n\n    this._marks.push(mark);\n    return true;\n  }\n\n  removeMark(mark: IMark): boolean {\n    const index = this._marks.findIndex(m => m.id === mark.id || m.name === mark.name);\n    if (index === -1) {\n      warn('Mark does not exists, removeMark failed.');\n      return false;\n    }\n    this._marks.splice(index, 1);\n    return true;\n  }\n\n  getMarkInType(type: MarkType) {\n    return this._marks.filter(m => m.type === type);\n  }\n\n  getMarkInId(id: number) {\n    return this._marks.find(m => m.id === id);\n  }\n\n  getMarkInUserId(id: string | number) {\n    let result: IMark | undefined;\n    this._marks.forEach(m => {\n      if (m.getUserId() === id) {\n        result = m;\n      }\n    });\n\n    if (!result) {\n      for (let i = 0; i < this._marks.length; i++) {\n        const mark = this._marks[i];\n        if (mark.type === 'group') {\n          result = (mark as GroupMark).getMarkInUserId(id);\n        }\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  getMarkInName(name: string) {\n    return this._marks.filter(m => m.name === name);\n  }\n\n  protected _compileProduct(option?: IMarkCompileOption): void {\n    // 编译自身\n    super._compileProduct(option);\n\n    // 设置zIndex\n    this._product.configure({\n      zIndex: this._markConfig.zIndex\n    });\n\n    // 编译子元素\n    if (!option?.ignoreChildren) {\n      this.getMarks().forEach(mark => {\n        // TODO: 如果语法元素已创建，先删除再重新指定父结点生成。vgrammar 是否可以动态指定 mark 父结点？\n        if (mark.getProduct()) {\n          mark.removeProduct();\n        }\n        mark.compile({ group: this._product });\n      });\n    }\n  }\n}\n\nexport const registerGroupMark = () => {\n  registerGroupGraphic();\n  Factory.registerMark(GroupMark.type, GroupMark);\n};\n"]}