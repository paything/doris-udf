{"version":3,"sources":["../src/mark/base/base-mark.ts"],"names":[],"mappings":"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","file":"base-mark.js","sourcesContent":["import type { IStateInfo, IAttributeOpt, IModelMarkAttributeContext } from '../../compile/mark/interface';\nimport type { BaseSeries } from '../../series/base/base-series';\nimport type {\n  Datum,\n  IMarkSpec,\n  ConvertToMarkStyleSpec,\n  GradientStop,\n  IVisual,\n  IVisualScale,\n  IVisualSpecStyle,\n  ICommonSpec,\n  FunctionType,\n  ValueType\n} from '../../typings';\nimport { mergeSpec } from '@visactor/vutils-extension';\nimport { Color } from '../../util/color';\nimport { createScaleWithSpec } from '../../util/scale';\nimport type {\n  IMarkRaw,\n  IMarkStateStyle,\n  IMarkStyle,\n  IMark,\n  IMarkOption,\n  StyleConvert,\n  VisualScaleType,\n  MarkInputStyle\n} from '../interface';\nimport { GradientType, DEFAULT_GRADIENT_CONFIG } from '../../constant/gradient';\nimport { AttributeLevel } from '../../constant/attribute';\nimport { isValidScaleType } from '@visactor/vscale';\nimport { computeActualDataScheme, getDataScheme } from '../../theme/color-scheme/util';\nimport type { ISeries } from '../../series/interface';\nimport { CompilableMark } from '../../compile/mark/compilable-mark';\nimport type { StateValueType } from '../../compile/mark';\nimport { degreeToRadian, isBoolean, isFunction, isNil, isValid } from '@visactor/vutils';\nimport { curveTypeTransform } from '../utils';\n\nexport type ExChannelCall = (\n  key: string | number | symbol,\n  datum: Datum,\n  states: StateValueType,\n  opt: unknown,\n  baseValue: unknown\n) => unknown;\n\nexport class BaseMark<T extends ICommonSpec> extends CompilableMark implements IMarkRaw<T> {\n  declare stateStyle: IMarkStateStyle<T>;\n\n  protected declare _option: IMarkOption;\n\n  protected _attributeContext: IModelMarkAttributeContext;\n\n  /** by _unCompileChannel, some channel need add default channel to make sure update available */\n  _extensionChannel: {\n    [key: string | number | symbol]: string[];\n  } = {};\n  /** same as _extensionChannel. when compute channel, add extension channel effect */\n  _computeExChannel: {\n    [key: string | number | symbol]: ExChannelCall;\n  } = {};\n\n  constructor(name: string, option: IMarkOption) {\n    super(option, name, option.model);\n    // 这里的上下文多数情况下与 mark 是什么是没有关系的，与mark的使用者，也就是series，component有的逻辑有关。\n    this._attributeContext = option.attributeContext;\n    option.map?.set(this.id, this as unknown as IMark);\n  }\n\n  created(): void {\n    this._initStyle();\n  }\n\n  /**\n   * 外部调用，根据 spec 初始化 style（如果由 IModel 派生类调用，请使用 IModel.initMarkStyleWithSpec）\n   * @param spec\n   * @param key\n   * @returns\n   */\n  initStyleWithSpec(spec: IMarkSpec<T>, key?: string) {\n    if (!spec) {\n      return;\n    }\n\n    if (isValid(spec.id)) {\n      this._userId = spec.id;\n    }\n\n    // interactive\n    if (isBoolean(spec.interactive)) {\n      this._markConfig.interactive = spec.interactive;\n    }\n    // zIndex\n    if (isValid(spec.zIndex)) {\n      this._markConfig.zIndex = spec.zIndex;\n    }\n    // visible\n    if (isBoolean(spec.visible)) {\n      this.setVisible(spec.visible);\n    }\n    // style\n    this._initSpecStyle(spec, this.stateStyle, key);\n  }\n\n  protected _transformStyleValue<T>(\n    styleConverter: StyleConvert<T>,\n    transform: (value: ValueType<T>) => ValueType<T>\n  ): StyleConvert<any> {\n    if ((styleConverter as VisualScaleType).scale) {\n      const scale = (styleConverter as VisualScaleType).scale;\n      const range = scale.range();\n      scale.range(range.map(transform));\n      return styleConverter as StyleConvert<T>;\n    } else if (typeof styleConverter === 'function') {\n      return ((...args) => {\n        return transform((styleConverter as FunctionType<number>)(...args) as ValueType<T>);\n      }) as StyleConvert<T>;\n    }\n    return transform(styleConverter as ValueType<T>);\n  }\n\n  convertAngleToRadian(styleConverter: StyleConvert<number>) {\n    // 用户传入的角度配置，需要做一层转换\n    return this._transformStyleValue(styleConverter, degreeToRadian);\n  }\n\n  isUserLevel(level: number) {\n    return [\n      AttributeLevel.User_Mark,\n      AttributeLevel.User_Series,\n      AttributeLevel.User_Chart,\n      AttributeLevel.User_SeriesStyle\n    ].includes(level);\n  }\n\n  /**\n   * 由外部series调用，设置markStyle的接口（如果由 IModel 派生类调用，请使用 IModel.setMarkStyle）\n   * @param style\n   * @param level\n   * @param state\n   */\n  setStyle<U extends keyof T>(\n    style: Partial<IMarkStyle<T>>,\n    state: StateValueType = 'normal',\n    level: number = 0,\n    stateStyle = this.stateStyle\n  ): void {\n    if (isNil(style)) {\n      return;\n    }\n\n    if (stateStyle[state] === undefined) {\n      stateStyle[state] = {};\n    }\n\n    const isUserLevel = this.isUserLevel(level);\n\n    Object.keys(style).forEach((attr: string) => {\n      let attrStyle = style[attr] as MarkInputStyle<T[U]>;\n      if (isNil(attrStyle)) {\n        return;\n      }\n\n      attrStyle = this._filterAttribute(attr as any, attrStyle, state, level, isUserLevel, stateStyle);\n\n      this.setAttribute(attr as any, attrStyle, state, level, stateStyle);\n    });\n  }\n\n  getStyle(key: string, state: StateValueType = 'normal'): any {\n    return this.stateStyle[state][key]?.style;\n  }\n\n  /** 过滤单个 attribute */\n  protected _filterAttribute<U extends keyof T>(\n    attr: U,\n    style: MarkInputStyle<T[U]>,\n    state: StateValueType,\n    level: number,\n    isUserLevel: boolean,\n    stateStyle = this.stateStyle\n  ): StyleConvert<T[U]> {\n    let newStyle = this._styleConvert(style);\n    if (isUserLevel) {\n      switch (attr) {\n        case 'angle':\n          newStyle = this.convertAngleToRadian(newStyle);\n          break;\n        case 'innerPadding':\n        case 'outerPadding':\n          // VRender 的 padding 定义基于 centent-box 盒模型，默认正方向是向外扩，与 VChart 不一致。这里将 padding 符号取反\n          newStyle = this._transformStyleValue(newStyle, (value: number) => -value);\n          break;\n        case 'curveType':\n          newStyle = this._transformStyleValue(newStyle, (value: string) =>\n            curveTypeTransform(value, (this._option.model as any).direction)\n          );\n          break;\n      }\n    }\n    return newStyle;\n  }\n\n  /**\n   * TODO: 没有外部调用\n   * 设置mark样式所参考的图元\n   */\n  setReferer<U extends keyof T>(mark: IMarkRaw<T>, styleKey?: U, state?: StateValueType, stateStyle = this.stateStyle) {\n    if (!mark) {\n      return;\n    }\n    if (styleKey && state) {\n      const style = stateStyle[state] ?? { [styleKey]: {} };\n      stateStyle[state][styleKey] = {\n        ...(style[styleKey] as unknown as any),\n        ...{ referer: mark }\n      };\n      return;\n    }\n\n    Object.entries(stateStyle).forEach(([state, style]) => {\n      Object.entries(style).forEach(([styleKey, style]) => {\n        stateStyle[state][styleKey].referer = mark;\n      });\n    });\n  }\n\n  setPostProcess<U extends keyof T>(key: U, postProcessFunc: any, state: StateValueType = 'normal') {\n    if (this.stateStyle[state]?.[key]) {\n      this.stateStyle[state][key].postProcess = postProcessFunc;\n    }\n  }\n\n  getAttribute<U extends keyof T>(key: U, datum: Datum, state: StateValueType = 'normal', opt?: IAttributeOpt) {\n    return this._computeAttribute(key, state)(datum, opt);\n  }\n\n  setAttribute<U extends keyof T>(\n    attr: U,\n    style: MarkInputStyle<T[U]>,\n    state: StateValueType = 'normal',\n    level: number = 0,\n    stateStyle = this.stateStyle\n  ) {\n    if (stateStyle[state] === undefined) {\n      stateStyle[state] = {};\n    }\n\n    if (stateStyle[state][attr] === undefined) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      stateStyle[state][attr] = {\n        level,\n        style,\n        referer: undefined\n      };\n    }\n    const attrLevel = stateStyle[state][attr]?.level;\n    if (isValid(attrLevel) && attrLevel <= level) {\n      mergeSpec(stateStyle[state][attr], { style, level });\n    }\n\n    // some attr has extension channel in VChart to make some effect\n    if (state !== 'normal') {\n      if (attr in this._extensionChannel) {\n        this._extensionChannel[attr].forEach(key => {\n          if (stateStyle[state][key] === undefined) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            stateStyle[state][key as keyof T] = stateStyle.normal[key];\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * 与 vgrammar 默认值一致的样式可以不设置默认值或设置为undefined, 减少encode属性\n   */\n  protected _getDefaultStyle() {\n    return {\n      visible: true,\n      // mark的层级应该在mark层 不在encode属性层\n      // zIndex: LayoutZIndex.Mark,\n      x: 0,\n      y: 0\n    } as IMarkStyle<T>;\n  }\n\n  // /**\n  //  * 获取该 mark 不支持的图形属性，由子类覆写\n  //  * @returns\n  //  */\n  // protected getIgnoreAttributes(): string[] {\n  //   return [];\n  // }\n\n  protected _styleConvert<U extends keyof T>(style?: MarkInputStyle<T[U]>): StyleConvert<T[U]> | undefined {\n    if (!style) {\n      return style as undefined;\n    }\n    // visual spec 转换为 scale 类型的mark style\n    if (isValidScaleType((style as IVisualSpecStyle<unknown, T[U]>).type) || (style as IVisualScale).scale) {\n      // const _style = style as IVisual<T[U]>;\n      const scale = createScaleWithSpec(style as IVisual<T[U]>, {\n        globalScale: this._option.globalScale,\n        seriesId: this._option.seriesId\n      });\n      if (scale) {\n        return {\n          scale,\n          field: (style as IVisual<T[U]>).field,\n          changeDomain: (style as IVisualScale).changeDomain\n        };\n      }\n    }\n    return style as StyleConvert<T[U]>;\n  }\n\n  protected _computeAttribute<U extends keyof T>(key: U, state: StateValueType) {\n    let stateStyle = this.stateStyle[state]?.[key];\n    if (!stateStyle) {\n      stateStyle = this.stateStyle.normal[key];\n    }\n    const baseValueFunctor = this._computeStateAttribute(stateStyle, key, state);\n    const hasPostProcess = isFunction(stateStyle?.postProcess);\n    const hasExCompute = key in this._computeExChannel;\n\n    if (hasPostProcess && hasExCompute) {\n      const exCompute = this._computeExChannel[key];\n      return (datum: Datum, opt: IAttributeOpt) => {\n        let baseValue = baseValueFunctor(datum, opt);\n\n        baseValue = stateStyle.postProcess(baseValue, datum, this._attributeContext, opt, this.getDataView());\n\n        return exCompute(key, datum, state, opt, baseValue);\n      };\n    } else if (hasPostProcess) {\n      return (datum: Datum, opt: IAttributeOpt) => {\n        return stateStyle.postProcess(\n          baseValueFunctor(datum, opt),\n          datum,\n          this._attributeContext,\n          opt,\n          this.getDataView()\n        );\n      };\n    } else if (hasExCompute) {\n      const exCompute = this._computeExChannel[key];\n      return (datum: Datum, opt: IAttributeOpt) => {\n        return exCompute(key, datum, state, opt, baseValueFunctor(datum, opt));\n      };\n    }\n    return baseValueFunctor;\n  }\n\n  protected _computeStateAttribute<U extends keyof T>(stateStyle: any, key: U, state: StateValueType) {\n    if (!stateStyle) {\n      return (datum: Datum, opt: IAttributeOpt) => undefined as any;\n    }\n    if (stateStyle.referer) {\n      return stateStyle.referer._computeAttribute(key, state);\n    }\n    if (!stateStyle.style) {\n      return (datum: Datum, opt: IAttributeOpt) => stateStyle.style;\n    }\n\n    if (typeof stateStyle.style === 'function') {\n      return (datum: Datum, opt: IAttributeOpt) =>\n        stateStyle.style(datum, this._attributeContext, opt, this.getDataView());\n    }\n\n    if (GradientType.includes(stateStyle.style.gradient)) {\n      // 渐变色处理，支持各个属性回调\n      return this._computeGradientAttr(stateStyle.style);\n    }\n\n    if (['outerBorder', 'innerBorder'].includes(key as string)) {\n      // 内外描边处理，支持各个属性回调\n      return this._computeBorderAttr(stateStyle.style);\n    }\n\n    if (isValidScaleType(stateStyle.style.scale?.type)) {\n      return (datum: Datum, opt: IAttributeOpt) => {\n        let data = datum;\n        if (this.model.modelType === 'series' && (this.model as ISeries).getMarkData) {\n          data = (this.model as ISeries).getMarkData(datum);\n        }\n\n        return stateStyle.style.scale.scale(data[stateStyle.style.field]);\n      };\n    }\n    return (datum: Datum, opt: IAttributeOpt) => {\n      return stateStyle.style;\n    };\n  }\n\n  private _initStyle(): void {\n    const defaultStyle = this._getDefaultStyle();\n    this.setStyle(defaultStyle, 'normal', 0);\n  }\n\n  private _initSpecStyle(spec: IMarkSpec<T>, stateStyle: IMarkStateStyle<T>, key?: string) {\n    // style\n    if (spec.style) {\n      this.setStyle(spec.style, 'normal', AttributeLevel.User_Mark, stateStyle);\n    }\n    const state = spec.state;\n    if (state) {\n      Object.keys(state).forEach(key => {\n        const stateTemp = state[key];\n        if ('style' in stateTemp) {\n          const style = stateTemp.style;\n          let stateInfo: IStateInfo = { stateValue: key };\n          if ('level' in stateTemp) {\n            stateInfo.level = stateTemp.level as number;\n          }\n          if ('filter' in stateTemp) {\n            if (isFunction(stateTemp.filter)) {\n              stateInfo = {\n                filter: stateTemp.filter as (datum: any, options: Record<string, any>) => boolean,\n                ...stateInfo\n              };\n            } else {\n              stateInfo = { ...stateTemp.filter, ...stateInfo };\n            }\n          }\n          this.state.addStateInfo(stateInfo);\n          this.setStyle(style as ConvertToMarkStyleSpec<T>, key, AttributeLevel.User_Mark, stateStyle);\n        } else {\n          this.setStyle(stateTemp, key, AttributeLevel.User_Mark, stateStyle);\n        }\n      });\n    }\n  }\n\n  private _computeGradientAttr(gradientStyle: any) {\n    const { gradient, scale, field, ...rest } = gradientStyle;\n\n    let colorScale = scale;\n    let colorField = field;\n    if ((!scale || !field) && this.model.modelType === 'series') {\n      // 目前只有series有这个属性\n      const { scale: globalColorScale, field: globalField } = (this.model as BaseSeries<any>).getColorAttribute();\n      if (!scale) {\n        // 获取全局的 colorScale\n        colorScale = globalColorScale;\n      }\n      if (!colorField) {\n        colorField = globalField;\n      }\n    }\n\n    const themeColor = computeActualDataScheme(\n      getDataScheme(\n        this.model.getColorScheme(),\n        this.model.modelType === 'series' ? this.model.getSpec?.() : undefined\n      ),\n      (this.model as ISeries).getDefaultColorDomain()\n    );\n    // 默认配置处理\n    const mergedStyle = {\n      ...DEFAULT_GRADIENT_CONFIG[gradient],\n      ...rest\n    };\n    return (data: Datum, opt: IAttributeOpt) => {\n      const computeStyle: any = {};\n      const markData = this.getDataView();\n      Object.keys(mergedStyle).forEach(key => {\n        const value = mergedStyle[key];\n        if (key === 'stops') {\n          computeStyle.stops = value.map((stop: GradientStop) => {\n            const { opacity, color, offset } = stop;\n            let computeColor = color ?? colorScale?.scale(data[colorField]);\n            if (isFunction(color)) {\n              computeColor = color(data, this._attributeContext, opt, markData);\n            }\n\n            if (isValid(opacity)) {\n              computeColor = Color.SetOpacity(computeColor as string, opacity);\n            }\n\n            return {\n              offset: isFunction(offset) ? offset(data, this._attributeContext, opt, markData) : offset,\n              color: computeColor || themeColor[0]\n            };\n          });\n        } else if (isFunction(value)) {\n          computeStyle[key] = value(data, this._attributeContext, opt, markData);\n        } else {\n          computeStyle[key] = value;\n        }\n      });\n\n      computeStyle.gradient = gradient;\n\n      return computeStyle;\n    };\n  }\n\n  private _computeBorderAttr(borderStyle: any) {\n    const { scale, field, ...mergedStyle } = borderStyle;\n\n    return (data: Datum, opt: IAttributeOpt) => {\n      const computeStyle: any = {};\n\n      Object.keys(mergedStyle).forEach(key => {\n        const value = mergedStyle[key];\n        if (isFunction(value)) {\n          computeStyle[key] = value(data, this._attributeContext, opt, this.getDataView());\n        } else {\n          computeStyle[key] = value;\n        }\n      });\n      if (!('stroke' in computeStyle)) {\n        const themeColor = computeActualDataScheme(\n          getDataScheme(\n            this.model.getColorScheme(),\n            this.model.modelType === 'series' ? this.model.getSpec?.() : undefined\n          ),\n          (this.model as ISeries).getDefaultColorDomain()\n        );\n        let colorScale = scale;\n        let colorField = field;\n        if ((!scale || !field) && this.model.modelType === 'series') {\n          // 目前只有series有这个属性\n          const { scale: globalColorScale, field: globalField } = (this.model as BaseSeries<any>).getColorAttribute();\n          if (!scale) {\n            // 获取全局的 colorScale\n            colorScale = globalColorScale;\n          }\n          if (!colorField) {\n            colorField = globalField;\n          }\n          computeStyle.stroke = colorScale?.scale(data[colorField]) || themeColor[0];\n        }\n      } else if (GradientType.includes(mergedStyle.stroke?.gradient)) {\n        computeStyle.stroke = this._computeGradientAttr(mergedStyle.stroke)(data, opt);\n      }\n      return computeStyle;\n    };\n  }\n}\n"]}