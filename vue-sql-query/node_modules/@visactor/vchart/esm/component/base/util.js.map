{"version":3,"sources":["../src/component/base/util.ts"],"names":[],"mappings":"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","file":"util.js","sourcesContent":["import type { ITheme } from '../../theme';\nimport { Direction, type IOrientType } from '../../typings';\nimport { getDirectionByOrient, getOrient } from '../axis/cartesian/util/common';\nimport { getCartesianAxisTheme, getPolarAxisTheme } from '../axis/util';\nimport { getCartesianCrosshairTheme, getPolarCrosshairTheme } from '../crosshair/utils';\nimport type { ComponentThemeWithDirection } from '../interface';\nimport { ComponentTypeEnum } from '../interface/type';\nimport { getComponentThemeFromOption } from '../util';\nimport { mergeSpec } from '@visactor/vutils-extension';\n\nexport function getComponentThemeFromGlobalTheme(\n  type: ComponentTypeEnum,\n  chartTheme: ITheme,\n  componentSpec: any,\n  chartSpec: any\n) {\n  switch (type) {\n    case ComponentTypeEnum.cartesianBandAxis:\n      return getCartesianAxisTheme(getOrient(componentSpec, ['z']), 'band', chartTheme);\n    case ComponentTypeEnum.cartesianLinearAxis:\n      return getCartesianAxisTheme(getOrient(componentSpec, ['z']), 'linear', chartTheme);\n    case ComponentTypeEnum.cartesianLogAxis:\n      return getCartesianAxisTheme(getOrient(componentSpec, ['z']), 'log', chartTheme);\n    case ComponentTypeEnum.cartesianSymlogAxis:\n      return getCartesianAxisTheme(getOrient(componentSpec, ['z']), 'symlog', chartTheme);\n    case ComponentTypeEnum.cartesianAxis:\n    case ComponentTypeEnum.cartesianTimeAxis:\n      return getCartesianAxisTheme(getOrient(componentSpec), undefined, chartTheme);\n    case ComponentTypeEnum.polarBandAxis:\n      return getPolarAxisTheme(componentSpec.orient, 'band', chartTheme);\n    case ComponentTypeEnum.polarLinearAxis:\n      return getPolarAxisTheme(componentSpec.orient, 'linear', chartTheme);\n    case ComponentTypeEnum.polarAxis:\n      return getPolarAxisTheme(componentSpec.orient, undefined, chartTheme);\n    case ComponentTypeEnum.cartesianCrosshair:\n      return getCartesianCrosshairTheme(chartTheme, chartSpec);\n    case ComponentTypeEnum.polarCrosshair:\n      return getPolarCrosshairTheme(chartTheme, chartSpec);\n    case ComponentTypeEnum.colorLegend:\n    case ComponentTypeEnum.sizeLegend:\n    case ComponentTypeEnum.discreteLegend:\n    case ComponentTypeEnum.dataZoom:\n    case ComponentTypeEnum.scrollBar:\n      return getComponentThemeWithDirection(componentSpec, getComponentThemeFromOption(type, chartTheme));\n    default:\n      return getComponentThemeFromOption(type, chartTheme);\n  }\n}\n\nexport const getComponentThemeWithDirection = <T>(\n  componentSpec: { orient?: IOrientType },\n  originalTheme: ComponentThemeWithDirection<T>\n): T => {\n  const orient = componentSpec.orient ?? originalTheme.orient;\n  const directionTheme = originalTheme[getDirectionByOrient(orient)];\n  const finalTheme = mergeSpec({}, originalTheme, directionTheme);\n\n  delete finalTheme[Direction.horizontal];\n  delete finalTheme[Direction.vertical];\n  return finalTheme;\n};\n"]}