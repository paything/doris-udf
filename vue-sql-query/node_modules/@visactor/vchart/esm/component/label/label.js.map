{"version":3,"sources":["../src/component/label/label.ts"],"names":[],"mappings":"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","file":"label.js","sourcesContent":["import type { IComponentOption } from '../interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { ComponentTypeEnum } from '../interface/type';\nimport type { IRegion } from '../../region/interface';\nimport type { IModelInitOption, IModelSpecInfo } from '../../model/interface';\nimport { STACK_FIELD_TOTAL_BOTTOM, STACK_FIELD_TOTAL_TOP } from '../../constant/data';\nimport { ChartEvent, VGRAMMAR_HOOK_EVENT } from '../../constant/event';\nimport { AttributeLevel } from '../../constant/attribute';\nimport { LayoutZIndex } from '../../constant/layout';\nimport type { IComponentMark, ILabelMark } from '../../mark/interface';\nimport { MarkTypeEnum } from '../../mark/interface/type';\nimport { mergeSpec } from '@visactor/vutils-extension';\nimport { eachSeries } from '../../util/model';\nimport type { ISeries, SeriesMarkNameEnum } from '../../series/interface';\nimport type { IGroupMark, ILabel, IMark as IVGrammarMark } from '@visactor/vgrammar-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { registerLabel as registerVGrammarLabel } from '@visactor/vgrammar-core';\nimport { defaultLabelConfig, textAttribute } from './util';\n// eslint-disable-next-line no-duplicate-imports\nimport { registerComponentMark } from '../../mark/component';\nimport { BaseLabelComponent } from './base-label';\nimport type { Maybe } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport { array, isArray, isFunction, isValid, pickWithout } from '@visactor/vutils';\nimport type { ILabelInfo, ILabelSpec, TransformedLabelSpec } from './interface';\nimport { Factory } from '../../core/factory';\n// eslint-disable-next-line no-duplicate-imports\nimport { registerLabelMark } from '../../mark/label';\nimport type { IChartSpecInfo } from '../../chart/interface';\nimport type { IChartSpec } from '../../typings';\nimport { LabelSpecTransformer } from './label-transformer';\nimport type { IGraphic } from '@visactor/vrender-core';\n\nexport class Label<T extends IChartSpec = any> extends BaseLabelComponent<T> {\n  static type = ComponentTypeEnum.label;\n  type = ComponentTypeEnum.label;\n  name: string = ComponentTypeEnum.label;\n\n  static specKey = 'label';\n  specKey = 'label';\n\n  static readonly transformerConstructor = LabelSpecTransformer as any;\n  readonly transformerConstructor = LabelSpecTransformer;\n\n  layoutZIndex: number = LayoutZIndex.Label;\n\n  protected _labelInfoMap: Map<IRegion, ILabelInfo[]>;\n\n  protected _labelComponentMap: Map<IComponentMark, () => ILabelInfo | ILabelInfo[]>;\n\n  protected _layoutRule: 'series' | 'region';\n\n  constructor(spec: T, options: IComponentOption) {\n    super(spec, options);\n    this._layoutRule = (spec as any).labelLayout || 'series';\n  }\n\n  static getSpecInfo(chartSpec: any, chartSpecInfo: IChartSpecInfo): Maybe<IModelSpecInfo[]> {\n    const specInfo: IModelSpecInfo[] = [];\n    const regionSpecInfo = chartSpecInfo?.region || [];\n    const isLabelVisible = (labelSpecList: ILabelSpec[]) => {\n      return labelSpecList.some(labelSpec => labelSpec.visible);\n    };\n\n    regionSpecInfo.forEach((regionInfo, i) => {\n      const seriesIndexes = regionInfo.seriesIndexes || [];\n      const hasVisibleLabel = seriesIndexes.some(seriesIndex => {\n        const seriesInfo = chartSpecInfo.series[seriesIndex];\n        const { markLabelSpec = {} } = seriesInfo;\n\n        return Object.values(markLabelSpec).some(\n          labelSpecList => Array.isArray(labelSpecList) && isLabelVisible(labelSpecList)\n        );\n      });\n      if (hasVisibleLabel) {\n        specInfo.push({\n          spec: chartSpec,\n          type: ComponentTypeEnum.label,\n          specInfoPath: ['component', this.specKey, i],\n          regionIndexes: [i]\n        });\n      }\n    });\n    return specInfo;\n  }\n\n  init(option: IModelInitOption): void {\n    super.init(option);\n    this.initEvent();\n    this._initTextMark();\n    this._initLabelComponent();\n    this._initTextMarkStyle();\n  }\n\n  reInit(spec?: T) {\n    super.reInit(spec);\n    this._labelInfoMap && this._labelInfoMap.clear();\n    this._initTextMark();\n    this._initTextMarkStyle();\n  }\n\n  initEvent() {\n    this.event.on(ChartEvent.dataZoomChange, () => {\n      this._labelComponentMap.forEach((info, component) => {\n        const graphicItem = component.getProduct().getGroupGraphicItem();\n        if (graphicItem) {\n          graphicItem.disableAnimation();\n        }\n      });\n      this.event.on(VGRAMMAR_HOOK_EVENT.AFTER_MARK_RENDER_END, enableAnimation);\n    });\n    const enableAnimation = () => {\n      this._labelComponentMap.forEach((info, component) => {\n        const graphicItem = component.getProduct().getGroupGraphicItem();\n        if (graphicItem) {\n          graphicItem.enableAnimation();\n        }\n      });\n      this.event.off(VGRAMMAR_HOOK_EVENT.AFTER_MARK_RENDER_END, enableAnimation);\n    };\n  }\n\n  protected _initTextMark() {\n    if (!this._labelInfoMap) {\n      this._labelInfoMap = new Map();\n    }\n\n    if (!this._labelComponentMap) {\n      this._labelComponentMap = new Map();\n    }\n    eachSeries(this._regions, (series: ISeries) => {\n      const { markLabelSpec = {} } = series.getSpecInfo();\n      const markNames = Object.keys(markLabelSpec);\n      const region = series.getRegion();\n\n      if (!this._labelInfoMap.get(region)) {\n        this._labelInfoMap.set(region, []);\n      }\n      for (let i = 0; i < markNames.length; i++) {\n        const markName = markNames[i];\n        const mark = series.getMarkInName(markName);\n        if (!mark) {\n          continue;\n        }\n        markLabelSpec[markName as SeriesMarkNameEnum].forEach((spec: TransformedLabelSpec, index: number) => {\n          if (spec.visible) {\n            const info = this._labelInfoMap.get(region);\n            const labelMark = this._createMark(\n              {\n                type: MarkTypeEnum.label,\n                name: `${markName}-label-${index}`\n              },\n              { noSeparateStyle: true, attributeContext: series.getMarkAttributeContext() }\n            ) as ILabelMark;\n            if (spec.showRelatedMarkTooltip) {\n              series.tooltipHelper?.activeTriggerSet.mark?.add(labelMark);\n            }\n            labelMark.setTarget(mark);\n            info.push({\n              labelMark,\n              baseMark: mark,\n              series,\n              labelSpec: spec\n            });\n          }\n        });\n      }\n    });\n  }\n\n  protected _initLabelComponent() {\n    this._labelInfoMap.forEach((regionLabelInfo, region) => {\n      if (this._layoutRule === 'region') {\n        const component = this._createMark(\n          { type: MarkTypeEnum.component, name: `${region.getGroupMark().name}-label-component` },\n          {\n            componentType: 'label',\n            noSeparateStyle: true\n          },\n          {\n            support3d: (this._spec as any).support3d\n          }\n        );\n        if (component) {\n          component.setSkipBeforeLayouted(true);\n\n          if (regionLabelInfo[0] && isValid(regionLabelInfo[0].labelSpec.zIndex)) {\n            component.setMarkConfig({ zIndex: regionLabelInfo[0].labelSpec.zIndex });\n          }\n          this._marks.addMark(component);\n          this._labelComponentMap.set(component, () => {\n            return this._labelInfoMap.get(region);\n          });\n        }\n      } else {\n        regionLabelInfo.forEach((labelInfo, i) => {\n          const component = this._createMark(\n            { type: MarkTypeEnum.component, name: `${labelInfo.labelMark.name}-component` },\n            {\n              componentType: 'label',\n              noSeparateStyle: true\n            },\n            {\n              support3d: labelInfo.baseMark.getMarkConfig().support3d\n            }\n          );\n          if (component) {\n            if (isValid(labelInfo.labelSpec.zIndex)) {\n              component.setMarkConfig({ zIndex: labelInfo.labelSpec.zIndex });\n            }\n\n            component.setSkipBeforeLayouted(true);\n            this._marks.addMark(component);\n            this._labelComponentMap.set(component, () => {\n              return this._labelInfoMap.get(region)[i];\n            });\n          }\n        });\n      }\n    });\n  }\n\n  protected _initTextMarkStyle() {\n    this._labelComponentMap.forEach((labelInfoCb, labelComponent) => {\n      const labelInfoArray = array(labelInfoCb());\n      labelInfoArray.forEach(({ labelMark }) => {\n        labelMark.setComponent(labelComponent);\n      });\n    });\n    this._labelInfoMap.forEach(labelInfos => {\n      labelInfos.forEach(info => {\n        const { labelMark, labelSpec, series } = info;\n        this.initMarkStyleWithSpec(labelMark, labelSpec, undefined);\n        if (isFunction(labelSpec?.getStyleHandler)) {\n          const styleHandler = labelSpec.getStyleHandler(series);\n          styleHandler?.call(series, labelMark, labelSpec);\n        }\n        if (labelMark.stateStyle?.normal?.lineWidth) {\n          labelMark.setAttribute('stroke', series.getColorAttribute(), 'normal', AttributeLevel.Base_Series);\n        }\n      });\n    });\n  }\n\n  updateLayoutAttribute(): void {\n    super.updateLayoutAttribute();\n    this._labelComponentMap.forEach((labelInfoCb, labelComponent) => {\n      const labelInfo = labelInfoCb();\n      if (isArray(labelInfo)) {\n        this._updateMultiLabelAttribute(labelInfo, labelComponent);\n      } else {\n        this._updateSingleLabelAttribute(labelInfo, labelComponent);\n      }\n    });\n  }\n\n  protected _updateMultiLabelAttribute(labelInfo: ILabelInfo[], labelComponent: IComponentMark) {\n    this._updateLabelComponentAttribute(\n      labelComponent.getProduct() as ILabel,\n      labelInfo.map(({ baseMark }) => baseMark.getProduct()),\n      labelInfo\n    );\n  }\n\n  protected _updateSingleLabelAttribute(labelInfo: ILabelInfo, labelComponent: IComponentMark) {\n    const { baseMark } = labelInfo;\n    this._updateLabelComponentAttribute(labelComponent.getProduct() as ILabel, baseMark.getProduct(), [labelInfo]);\n  }\n\n  protected _updateLabelComponentAttribute(\n    component: ILabel,\n    target: IVGrammarMark | IVGrammarMark[],\n    labelInfos: ILabelInfo[]\n  ) {\n    const dependCmp = this._option.getComponentsByType('totalLabel');\n    component\n      .target(target)\n      .configure({ interactive: false })\n      .depend(dependCmp.map(cmp => cmp.getMarks()[0].getProduct()))\n      .labelStyle((mark: IVGrammarMark, params: Record<string, any>) => {\n        const labelInfo = labelInfos[params.labelIndex];\n        if (labelInfo) {\n          const { labelSpec, labelMark, series } = labelInfo;\n          const rule = labelMark.getRule();\n          const interactive = this._interactiveConfig(labelSpec);\n          /** arc label When setting the centerOffset of the spec, the label also needs to be offset accordingly, and the centerOffset is not in the labelSpec */\n          const centerOffset = (this._spec as any)?.centerOffset ?? 0;\n          let spec = mergeSpec(\n            {\n              textStyle: { pickable: labelSpec.interactive === true, ...labelSpec.style },\n              overlap: {\n                avoidMarks: dependCmp.map(cmp => cmp.getMarks()[0].getProductId())\n              }\n            },\n            defaultLabelConfig(rule, labelInfo),\n            {\n              ...pickWithout(labelSpec, [\n                'position',\n                'style',\n                'state',\n                'type',\n                'stackDataFilterType',\n                'getStyleHandler'\n              ]),\n              ...interactive,\n              centerOffset\n            },\n            labelSpec.stackDataFilterType\n              ? {\n                  dataFilter:\n                    labelSpec.stackDataFilterType === 'min'\n                      ? (data: any) => {\n                          return data.filter((d: any) => d.data[STACK_FIELD_TOTAL_BOTTOM]);\n                        }\n                      : (data: any) => {\n                          return data.filter((d: any) => d.data[STACK_FIELD_TOTAL_TOP]);\n                        }\n                }\n              : {}\n          );\n\n          if (series && series.parseLabelStyle) {\n            spec = series.parseLabelStyle(spec, labelSpec, labelMark);\n          }\n          // TODO 可以优化。vgrammar 的 label 图元类型分发是完全依赖 baseMark 的类型。默认情况下，line/area 图元的标签会使用'line-data'标签，此时需要 vchart 将类型传给 vgrammar\n          if (rule === 'line' || rule === 'area') {\n            spec.type = rule;\n          }\n          return spec;\n        }\n      })\n      .encode((datum, element, params: Record<string, any>) => {\n        const labelInfo = labelInfos[params.labelIndex];\n        if (labelInfo) {\n          const { labelSpec, labelMark } = labelInfos[params.labelIndex];\n\n          return labelMark.skipEncode\n            ? { data: datum }\n            : textAttribute(labelInfos[params.labelIndex], datum, labelSpec.formatMethod, labelSpec.formatter);\n        }\n      })\n      .size(() => {\n        return {\n          padding: labelInfos[0].labelSpec.overlap?.padding,\n          ...labelInfos[0].series.getRegion().getLayoutRect()\n        };\n      });\n  }\n\n  compileMarks() {\n    this.getMarks().forEach(m => {\n      const labelInfo = this._labelComponentMap.get(m)();\n      let group;\n      if (isArray(labelInfo)) {\n        group = labelInfo[0].series.getRegion().getGroupMark().getProduct() as IGroupMark;\n      } else {\n        group = labelInfo.series.getRegion().getGroupMark().getProduct() as IGroupMark;\n      }\n      m.compile({ group, context: { model: this, labelInfo } });\n    });\n  }\n\n  getVRenderComponents() {\n    const labels: any[] = [];\n    this._labelComponentMap.forEach((infoFunc, component) => {\n      const graphicItem = component.getProduct().getGroupGraphicItem();\n      if (graphicItem) {\n        labels.push(graphicItem);\n      }\n    });\n    return labels;\n  }\n\n  getLabelInfoByTextGraphic(text: IGraphic): ILabelInfo {\n    let labelInfo: ILabelInfo;\n    const vrenderLabel = text?.parent;\n    const vrenderDataLabel = vrenderLabel?.parent;\n    if (vrenderDataLabel) {\n      const labelIndex = vrenderDataLabel.getChildren().indexOf(vrenderLabel as any);\n      this._labelComponentMap.forEach((infoFunc, component) => {\n        const graphicItem = component.getProduct().getGroupGraphicItem();\n        if (graphicItem === vrenderDataLabel) {\n          labelInfo = array(infoFunc())[labelIndex];\n        }\n      });\n    }\n    return labelInfo;\n  }\n}\n\nexport const registerLabel = () => {\n  registerVGrammarLabel();\n  registerLabelMark();\n  registerComponentMark();\n  Factory.registerComponent(Label.type, Label, true);\n};\n"]}