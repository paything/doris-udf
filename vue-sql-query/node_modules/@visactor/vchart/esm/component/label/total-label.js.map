{"version":3,"sources":["../src/component/label/total-label.ts"],"names":[],"mappings":"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","file":"total-label.js","sourcesContent":["// eslint-disable-next-line no-duplicate-imports\nimport { registerLabelMark } from '../../mark/label';\n// eslint-disable-next-line no-duplicate-imports\nimport { ComponentTypeEnum } from '../interface/type';\nimport { STACK_FIELD_TOTAL, STACK_FIELD_TOTAL_BOTTOM, STACK_FIELD_TOTAL_TOP } from '../../constant/data';\nimport { LayoutZIndex } from '../../constant/layout';\nimport { AttributeLevel } from '../../constant/attribute';\nimport type { ILabelMark, IMark, MarkType } from '../../mark/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { MarkTypeEnum } from '../../mark/interface';\nimport { mergeSpec } from '@visactor/vutils-extension';\nimport type { ICartesianSeries, ISeries } from '../../series/interface';\nimport type { IGroupMark, IView } from '@visactor/vgrammar-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { registerLabel as registerVGrammarLabel } from '@visactor/vgrammar-core';\nimport { textAttribute } from './util';\nimport { BaseLabelComponent } from './base-label';\nimport type { IModelInitOption, IModelSpecInfo } from '../../model/interface';\nimport type { Datum, Maybe } from '../../typings';\nimport { Factory } from '../../core/factory';\nimport { registerComponentMark } from '../../mark/component';\nimport type { IChartSpecInfo } from '../../chart/interface';\n\nexport class TotalLabel extends BaseLabelComponent {\n  static type = ComponentTypeEnum.totalLabel;\n  type = ComponentTypeEnum.totalLabel;\n  name: string = ComponentTypeEnum.totalLabel;\n\n  static specKey = 'totalLabel';\n  specKey = 'totalLabel';\n\n  layoutZIndex: number = LayoutZIndex.Label;\n\n  private _textMark?: ILabelMark;\n  private _baseMark?: IMark;\n\n  static getSpecInfo(chartSpec: any, chartSpecInfo?: IChartSpecInfo): Maybe<IModelSpecInfo[]> {\n    const specInfo: IModelSpecInfo[] = [];\n    chartSpecInfo?.region?.forEach((regionInfo, regionIndex) => {\n      regionInfo.seriesIndexes?.forEach(seriesIndex => {\n        const { spec } = chartSpecInfo.series[seriesIndex];\n        const labelSpec = spec[this.specKey];\n        if (labelSpec?.visible) {\n          specInfo.push({\n            spec: labelSpec,\n            type: ComponentTypeEnum.totalLabel,\n            specPath: ['series', seriesIndex, this.specKey],\n            specInfoPath: ['component', this.specKey, seriesIndex],\n            regionIndexes: [regionIndex],\n            seriesIndexes: [seriesIndex]\n          });\n        }\n      });\n    });\n    return specInfo;\n  }\n\n  init(option: IModelInitOption): void {\n    super.init(option);\n    this._initTextMark();\n    this._initLabelComponent();\n  }\n\n  reInit(spec?: any) {\n    super.reInit(spec);\n    this._initTextMark();\n  }\n\n  protected _initTextMark() {\n    const series = this._getSeries();\n    if (series.getSpec().totalLabel?.visible) {\n      const mark = series.getSeriesMark();\n      if (mark) {\n        const textMark = this._createMark({ type: MarkTypeEnum.label, name: `${mark.name}-total-label` }) as ILabelMark;\n        this._baseMark = mark;\n        this._textMark = textMark;\n        this._initTextMarkStyle();\n      }\n    }\n  }\n\n  _initTextMarkStyle() {\n    super.initMarkStyleWithSpec(this._textMark, this._spec);\n    this.setMarkStyle(\n      this._textMark,\n      {\n        text: (datum: Datum) => {\n          return datum[STACK_FIELD_TOTAL];\n        }\n      },\n      'normal',\n      AttributeLevel.Default\n    );\n\n    const series = this._getSeries();\n    series.initTotalLabelMarkStyle?.(this._textMark);\n  }\n\n  protected _initLabelComponent() {\n    const series = this._getSeries();\n    const component = this._createMark(\n      { type: MarkTypeEnum.component, name: `${series.name}-total-label-component` },\n      {\n        componentType: 'label',\n        noSeparateStyle: true\n      },\n      {\n        support3d: this._spec.support3d\n      }\n    );\n    if (component) {\n      this._marks.addMark(component);\n    }\n  }\n\n  updateLayoutAttribute(): void {\n    super.updateLayoutAttribute();\n    const series = this._getSeries();\n    this._marks.forEach((componentMark, index) => {\n      const component = componentMark.getProduct() as ReturnType<IView['label']>;\n      component\n        .target(this._baseMark.getProduct())\n        .configure({ interactive: false })\n        .labelStyle(() => {\n          if (this._baseMark) {\n            const { offset, animation, overlap, position = 'top' } = this._spec;\n            const interactive = this._interactiveConfig(this._spec);\n            return mergeSpec(\n              {\n                textStyle: { pickable: this._spec.interactive === true },\n                position: totalLabelPosition(series, this._baseMark.type, position),\n                x: 0,\n                y: 0\n              },\n              series.getTotalLabelComponentStyle?.({\n                baseMark: this._baseMark,\n                labelMark: this._textMark\n              }) ?? {},\n              {\n                offset,\n                animation,\n                overlap,\n                dataFilter: (data: any) => {\n                  return data.filter((d: any) =>\n                    position === 'bottom' ? d.data[STACK_FIELD_TOTAL_BOTTOM] : d.data[STACK_FIELD_TOTAL_TOP]\n                  );\n                },\n                ...interactive\n              }\n            );\n          }\n        })\n        .encode(datum => {\n          return textAttribute(\n            {\n              baseMark: this._baseMark,\n              labelMark: this._textMark,\n              series,\n              labelSpec: series.getSpec().totalLabel\n            },\n            datum,\n            this._spec.formatMethod\n          );\n        })\n        .size(() => {\n          return {\n            padding: this._spec.overlap?.padding,\n            ...this._regions[0].getLayoutRect()\n          };\n        });\n    });\n  }\n\n  compileMarks() {\n    this.getMarks().forEach(m => {\n      const group = this._regions[0].getGroupMark().getProduct() as IGroupMark;\n      m.compile({ group, context: { model: this } });\n    });\n  }\n\n  getVRenderComponents() {\n    const labels: any[] = [];\n    this.getMarks().forEach(m => {\n      const graphicItem = m.getProduct().getGroupGraphicItem();\n      if (graphicItem) {\n        labels.push(graphicItem);\n      }\n    });\n    return labels;\n  }\n\n  protected _getSeries() {\n    return this._option.getSeriesInIndex([this.getSpecPath()[1] as number])[0];\n  }\n}\n\nexport function totalLabelPosition(series: ISeries, type: MarkType, position: 'top' | 'bottom' = 'top') {\n  let finalPosition;\n  const { direction } = series as ICartesianSeries;\n  const isInverse =\n    direction === 'horizontal'\n      ? (series as ICartesianSeries).getXAxisHelper()?.isInverse()\n      : (series as ICartesianSeries).getYAxisHelper()?.isInverse();\n  let positionMap;\n  if (position === 'bottom') {\n    positionMap = { vertical: ['bottom', 'top'], horizontal: ['left', 'right'] };\n  } else {\n    positionMap = { vertical: ['top', 'bottom'], horizontal: ['right', 'left'] };\n  }\n  const index = isInverse ? 1 : 0;\n  switch (type) {\n    case 'rect':\n    case 'symbol':\n      finalPosition = positionMap[direction][index];\n      break;\n    default:\n      finalPosition = 'top';\n  }\n  return finalPosition;\n}\n\nexport const registerTotalLabel = () => {\n  registerVGrammarLabel();\n  registerLabelMark();\n  registerComponentMark();\n  Factory.registerComponent(TotalLabel.type, TotalLabel, true);\n};\n"]}