{"version":3,"sources":["../src/component/axis/cartesian/axis.ts"],"names":[],"mappings":"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","file":"axis.js","sourcesContent":["import type { ICartesianHorizontal } from './interface/spec';\nimport { Bounds, last, type IBounds, type IBoundsLike, type Maybe } from '@visactor/vutils';\n// eslint-disable-next-line no-duplicate-imports\nimport type { IEffect, IModelInitOption, IModelSpecInfo } from '../../../model/interface';\nimport type { ICartesianSeries } from '../../../series/interface';\nimport type { IRegion } from '../../../region/interface';\nimport type { ICartesianAxisCommonSpec, IAxisHelper, ICartesianVertical } from './interface';\nimport { mergeSpec } from '@visactor/vutils-extension';\nimport {\n  isArray,\n  isValid,\n  isValidNumber,\n  eachSeries,\n  isNil,\n  isUndefined,\n  calcLayoutNumber,\n  maxInArr,\n  minInArr,\n  clamp\n} from '../../../util';\nimport type { IOrientType, IRect } from '../../../typings/space';\n// eslint-disable-next-line no-duplicate-imports\nimport { Direction } from '../../../typings/space';\nimport type { IBaseScale } from '@visactor/vscale';\n// eslint-disable-next-line no-duplicate-imports\nimport { isContinuous } from '@visactor/vscale';\nimport { Factory } from '../../../core/factory';\nimport { isXAxis, getOrient, isZAxis, isYAxis, getCartesianAxisInfo, transformInverse } from './util/common';\nimport { ChartEvent } from '../../../constant/event';\nimport { LayoutLevel, DEFAULT_LAYOUT_RECT_LEVEL, LayoutZIndex, USER_LAYOUT_RECT_LEVEL } from '../../../constant/layout';\nimport { AxisSyncPlugin } from '../../../plugin/components/axis-sync/axis-sync';\nimport type { Datum, StringOrNumber } from '../../../typings/common';\nimport type { IPoint } from '../../../typings/coordinate';\nimport type { ILayoutRect, ILayoutType } from '../../../typings/layout';\nimport type { IComponentOption } from '../../interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { ComponentTypeEnum } from '../../interface/type';\nimport { HOOK_EVENT } from '@visactor/vgrammar-core';\nimport type { AxisItem, LineAxisAttributes } from '@visactor/vrender-components';\n// eslint-disable-next-line no-duplicate-imports\nimport { getAxisItem, isValidCartesianAxis, shouldUpdateAxis } from '../util';\nimport type { IAxis, ITick } from '../interface';\n// eslint-disable-next-line no-duplicate-imports\nimport type { ICartesianTickDataOpt } from '@visactor/vrender-components';\n// eslint-disable-next-line no-duplicate-imports\nimport type { DataSet } from '@visactor/vdataset';\n// eslint-disable-next-line no-duplicate-imports\nimport { AxisComponent } from '../base-axis';\nimport type { IGraphic, IText } from '@visactor/vrender-core';\n// eslint-disable-next-line no-duplicate-imports\nimport { createText } from '@visactor/vrender-core';\nimport type { ICartesianChartSpec } from '../../../chart/cartesian/interface';\n\nconst CartesianAxisPlugin = [AxisSyncPlugin];\n\nexport abstract class CartesianAxis<T extends ICartesianAxisCommonSpec = ICartesianAxisCommonSpec>\n  extends AxisComponent<T>\n  implements IAxis\n{\n  static type = ComponentTypeEnum.cartesianAxis;\n  type = ComponentTypeEnum.cartesianAxis;\n  name: string = ComponentTypeEnum.cartesianAxis;\n\n  static specKey = 'axes';\n\n  protected readonly _defaultBandPosition = 0.5;\n  protected readonly _defaultBandInnerPadding = 0.1;\n  protected readonly _defaultBandOuterPadding = 0.3;\n\n  // 标记这个布局Item的方向（left->right, right->left, top->bottom, bottom->top）\n  declare directionStr?: 'l2r' | 'r2l' | 't2b' | 'b2t';\n\n  layoutType: ILayoutType = 'region-relative';\n  layoutZIndex: number = LayoutZIndex.Axis;\n  layoutLevel: number = LayoutLevel.Axis;\n\n  protected _dataSet: DataSet;\n\n  layout3dBox?: { width: number; height: number; length: number };\n\n  protected _orient: IOrientType = 'left';\n  getOrient() {\n    return this._orient;\n  }\n\n  protected getDefaultInteractive() {\n    return true;\n  }\n\n  protected _autoIndentOnce: boolean = false;\n  protected _hasAutoIndent: boolean = false;\n  set autoIndentOnce(v: boolean) {\n    this._autoIndentOnce = v;\n  }\n\n  protected _scales: IBaseScale[] = [];\n  getScales() {\n    return this._scales;\n  }\n\n  protected _tick: ITick | undefined = undefined;\n\n  private _axisStyle: Partial<LineAxisAttributes>;\n  private _latestBounds: IBounds;\n  private _verticalLimitSize: number;\n  private _unitText: IText;\n\n  protected _layoutCache: {\n    width: number;\n    height: number;\n    _lastComputeOutBounds: IBoundsLike;\n  } = { width: 0, height: 0, _lastComputeOutBounds: { x1: 0, x2: 0, y1: 0, y2: 0 } };\n\n  // 内padding\n  protected _innerOffset: { top: number; bottom: number; left: number; right: number } = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  };\n\n  constructor(spec: T, options: IComponentOption) {\n    super(spec, options);\n    this._orient = getOrient(spec, ['z']);\n    if (isZAxis(this._orient)) {\n      this.layoutType = 'absolute';\n    }\n    this._dataSet = options.dataSet;\n    this._coordinateType = 'cartesian';\n  }\n\n  static getSpecInfo(chartSpec: any): Maybe<IModelSpecInfo[]> {\n    const axesSpec = chartSpec[this.specKey];\n    if (!axesSpec) {\n      return null;\n    }\n\n    const isHorizontal = chartSpec.direction === Direction.horizontal;\n\n    if (!isArray(axesSpec)) {\n      // 如果非法，或者只有一个z轴就不创建\n      if (!isValidCartesianAxis(axesSpec)) {\n        return null;\n      }\n      const { axisType, componentName } = getCartesianAxisInfo(axesSpec, isHorizontal);\n      axesSpec.type = axisType;\n      return [\n        {\n          spec: axesSpec,\n          specPath: [this.specKey],\n          specInfoPath: ['component', this.specKey, 0],\n          type: componentName\n        }\n      ];\n    }\n    // 处理spec\n    const zAxis = axesSpec.filter(s => s.orient === 'z')[0];\n    let valid = true;\n    if (zAxis) {\n      const xAxis = axesSpec.filter(s => s.orient === 'bottom')[0];\n      const yAxis = axesSpec.filter(s => isYAxis(s.orient))[0];\n      // 必须有x和y，且x必须是bottom\n      valid = axesSpec.length === 3 && xAxis && yAxis;\n    }\n\n    let axesSpecList = axesSpec.map((spec, index) => ({ spec, index }));\n    if (!valid) {\n      axesSpecList = axesSpecList.filter(({ spec }) => spec.orient !== 'z');\n    }\n    const specInfos: IModelSpecInfo[] = [];\n    axesSpecList.forEach(({ spec, index }) => {\n      if (!isValidCartesianAxis(spec)) {\n        return;\n      }\n      const { axisType, componentName } = getCartesianAxisInfo(spec, isHorizontal);\n      spec.type = axisType;\n      specInfos.push({\n        spec,\n        specPath: [this.specKey, index],\n        specInfoPath: ['component', this.specKey, index],\n        type: componentName\n      });\n    });\n    return specInfos;\n  }\n\n  static createComponent(specInfo: IModelSpecInfo, options: IComponentOption) {\n    const { spec, ...others } = specInfo;\n    const C = Factory.getComponentInKey(others.type);\n    if (C) {\n      return new C(spec, {\n        ...options,\n        ...others\n      }) as IAxis;\n    }\n    options.onError(`Component ${others.type} not found`);\n    return null;\n  }\n\n  initLayout(): void {\n    super.initLayout();\n    this._layout.autoIndent = this._spec.autoIndent !== false;\n    this._layout.layoutOrient = this._orient;\n  }\n\n  setLayout3dBox(box3d: { width: number; height: number; length: number }) {\n    this.layout3dBox = box3d;\n  }\n\n  effect: IEffect = {\n    scaleUpdate: params => {\n      this.computeData(params?.value);\n      eachSeries(\n        this._regions,\n        s => {\n          const orient = this.getOrient();\n          if (isXAxis(orient)) {\n            if (\n              shouldUpdateAxis(\n                (s as ICartesianSeries).getXAxisHelper(),\n                this.axisHelper(),\n                isValid(this._seriesUserId) || isValid(this._seriesIndex)\n              )\n            ) {\n              (s as ICartesianSeries).setXAxisHelper(this.axisHelper());\n            }\n          } else if (isYAxis(orient)) {\n            if (\n              shouldUpdateAxis(\n                (s as ICartesianSeries).getYAxisHelper(),\n                this.axisHelper(),\n                isValid(this._seriesUserId) || isValid(this._seriesIndex)\n              )\n            ) {\n              (s as ICartesianSeries).setYAxisHelper(this.axisHelper());\n            }\n          } else if (isZAxis(orient)) {\n            if (\n              shouldUpdateAxis(\n                (s as ICartesianSeries).getZAxisHelper(),\n                this.axisHelper(),\n                isValid(this._seriesUserId) || isValid(this._seriesIndex)\n              )\n            ) {\n              (s as ICartesianSeries).setZAxisHelper(this.axisHelper());\n            }\n          }\n        },\n        {\n          userId: this._seriesUserId,\n          specIndex: this._seriesIndex\n        }\n      );\n    }\n  };\n\n  protected abstract computeDomain(data: { min: number; max: number; values: any[] }[]): StringOrNumber[];\n  abstract valueToPosition(value: any): number;\n\n  protected getNewScaleRange() {\n    const { width, height } = this.getLayoutRect();\n    const { left, right, top, bottom } = this._innerOffset;\n    let newRange: number[] = [];\n    if (isXAxis(this.getOrient())) {\n      if (isValidNumber(width)) {\n        newRange = this._inverse ? [width - right, left] : [left, width - right];\n      }\n    } else if (isZAxis(this.getOrient())) {\n      if (isValidNumber(width)) {\n        newRange = this._inverse ? [width - right, left] : [left, width - right];\n        this._scale.range(newRange);\n      }\n    } else {\n      if (isValidNumber(height)) {\n        newRange = this._inverse ? [top, height - bottom] : [height - bottom, top];\n      }\n    }\n\n    return newRange;\n  }\n\n  protected updateScaleRange() {\n    let isScaleChange = false;\n\n    const newRange = this.getNewScaleRange();\n    const range = this._scale.range();\n    if (newRange.length === range.length && newRange.every((value, index) => value === range[index])) {\n      isScaleChange = false; // No change\n    } else {\n      isScaleChange = true; // Change detected\n      this._scale.range(newRange);\n    }\n\n    return isScaleChange;\n  }\n\n  init(option: IModelInitOption): void {\n    super.init(option);\n    this.pluginService?.load(CartesianAxisPlugin.map(P => new P()));\n    this.callPlugin(plugin => {\n      this.pluginService && plugin.onInit && plugin.onInit(this.pluginService, this);\n    });\n  }\n\n  setAttrFromSpec() {\n    super.setAttrFromSpec();\n\n    if (this.visible) {\n      const isX = isXAxis(this.getOrient());\n      if (isX) {\n        if (isUndefined(this._spec.maxHeight)) {\n          this._spec.maxHeight = '30%';\n        }\n      } else if (isUndefined(this._spec.maxWidth)) {\n        this._spec.maxWidth = '30%';\n      }\n\n      const axisStyle: any = this._getAxisAttributes();\n      axisStyle.label.formatMethod = this._getLabelFormatMethod();\n      axisStyle.verticalFactor = this.getOrient() === 'top' || this.getOrient() === 'right' ? -1 : 1;\n      this._axisStyle = axisStyle;\n    }\n    this._tick = this._spec.tick;\n    const chartSpec = this._option.getChart()?.getSpec() as ICartesianChartSpec;\n    this._inverse = transformInverse(this._spec, chartSpec?.direction === Direction.horizontal);\n  }\n\n  onLayoutStart(layoutRect: IRect, viewRect: ILayoutRect, ctx: any): void {\n    super.onLayoutStart(layoutRect, viewRect, ctx);\n    // 计算innerOffset\n    if (!isZAxis(this.getOrient()) && (this._spec as ICartesianVertical | ICartesianHorizontal).innerOffset) {\n      const spec = this._spec as ICartesianVertical | ICartesianHorizontal;\n      if (isYAxis(this.getOrient())) {\n        ['top', 'bottom'].forEach(orient => {\n          this._innerOffset[orient as 'top' | 'bottom'] = calcLayoutNumber(\n            (spec as ICartesianVertical).innerOffset[orient as 'top' | 'bottom'],\n            viewRect.height,\n            viewRect\n          );\n        });\n      } else {\n        ['left', 'right'].forEach(orient => {\n          this._innerOffset[orient as 'left' | 'right'] = calcLayoutNumber(\n            (spec as ICartesianHorizontal).innerOffset[orient as 'left' | 'right'],\n            viewRect.width,\n            viewRect\n          );\n        });\n      }\n    }\n  }\n\n  protected getSeriesStatisticsField(s: ICartesianSeries) {\n    let f: string[];\n    if (isXAxis(this.getOrient())) {\n      f = s.fieldX;\n    } else if (isZAxis(this.getOrient())) {\n      f = s.fieldZ;\n    } else {\n      f = s.fieldY;\n    }\n    if (isContinuous(this._scale.type)) {\n      return f;\n    }\n    return [f[0]];\n  }\n\n  protected _tickTransformOption() {\n    return {\n      ...super._tickTransformOption(),\n      noDecimals: this._tick?.noDecimals,\n      labelLastVisible: this._spec.label?.lastVisible,\n      labelFirstVisible: this._spec.label?.firstVisible,\n      labelFlush: this._spec.label?.flush\n    } as ICartesianTickDataOpt;\n  }\n\n  protected axisHelper(): IAxisHelper {\n    const getScale = (depth: number = 0) => {\n      return this._scales[depth];\n    };\n    return {\n      isContinuous: isContinuous(this._scale.type),\n      dataToPosition: this.dataToPosition.bind(this),\n      getScale,\n      getAxisType: () => this.type,\n      getAxisId: () => this.id,\n      isInverse: () => this._inverse === true,\n      getSpec: () => this._spec\n    };\n  }\n\n  /** LifeCycle API**/\n  afterCompile() {\n    const product = this._axisMark?.getProduct();\n    if (product) {\n      product.addEventListener(HOOK_EVENT.AFTER_ELEMENT_ENCODE, () => {\n        if (this._isLayout === false) {\n          // 布局结束之后再进行插件的调用\n          // 插件在布局后\n          if (isXAxis(this.getOrient())) {\n            this.callPlugin(plugin => {\n              this.pluginService &&\n                plugin.onDidLayoutHorizontal &&\n                plugin.onDidLayoutHorizontal(this.pluginService, this);\n            });\n          } else {\n            this.callPlugin(plugin => {\n              this.pluginService && plugin.onDidLayoutVertical && plugin.onDidLayoutVertical(this.pluginService, this);\n            });\n          }\n\n          // 更新单位的显示位置\n          if (this._unitText) {\n            const { x, y } = this.getLayoutStartPoint();\n            const pos = isXAxis(this._orient)\n              ? {\n                  x: maxInArr<number>(this._scale.range()) + x,\n                  y\n                }\n              : {\n                  x,\n                  y: minInArr<number>(this._scale.range()) + y\n                };\n\n            this._unitText.setAttributes(pos);\n          }\n        }\n      });\n    }\n    this.callPlugin(plugin => {\n      this.pluginService && plugin.onDidCompile && plugin.onDidCompile(this.pluginService, this);\n    });\n  }\n\n  onRender(ctx: any): void {\n    // do nothing\n  }\n\n  changeRegions(regions: IRegion[]): void {\n    // do nothing\n  }\n\n  update(ctx: IComponentOption) {\n    // TODO\n  }\n\n  resize(ctx: IComponentOption) {\n    // TODO\n  }\n\n  protected collectScale() {\n    const scales: IBaseScale[] = [];\n    eachSeries(\n      this._regions,\n      s => {\n        scales.push(\n          this.getOrient() === 'left' || this.getOrient() === 'right'\n            ? (s as ICartesianSeries).scaleY\n            : (s as ICartesianSeries).scaleX\n        );\n      },\n      {\n        userId: this._seriesUserId,\n        specIndex: this._seriesIndex\n      }\n    );\n    return scales;\n  }\n\n  protected collectSeriesField(depth: number, series: ICartesianSeries) {\n    let field: string | string[];\n    if (depth > 0) {\n      field = series.getGroups()?.fields?.[depth];\n    } else {\n      if (isXAxis(this.getOrient())) {\n        field = series.getSpec().x2Field ? [...series.fieldX, series.fieldX2] : series.fieldX;\n      } else if (isZAxis(this.getOrient())) {\n        field = series.fieldZ;\n      } else {\n        field = series.getSpec().y2Field ? [...series.fieldY, series.fieldY2] : series.fieldY;\n      }\n    }\n    return field;\n  }\n\n  protected updateSeriesScale() {\n    const orient = this.getOrient();\n    eachSeries(\n      this._regions,\n      s => {\n        if (isXAxis(orient)) {\n          if (\n            shouldUpdateAxis(\n              (s as ICartesianSeries).getXAxisHelper(),\n              this.axisHelper(),\n              isValid(this._seriesUserId) || isValid(this._seriesIndex)\n            )\n          ) {\n            (s as ICartesianSeries).setScaleX(this._scale);\n            (s as ICartesianSeries).setXAxisHelper(this.axisHelper());\n          }\n        } else if (isYAxis(orient)) {\n          if (\n            shouldUpdateAxis(\n              (s as ICartesianSeries).getYAxisHelper(),\n              this.axisHelper(),\n              isValid(this._seriesUserId) || isValid(this._seriesIndex)\n            )\n          ) {\n            (s as ICartesianSeries).setScaleY(this._scale);\n            (s as ICartesianSeries).setYAxisHelper(this.axisHelper());\n          }\n        } else if (isZAxis(orient)) {\n          if (\n            shouldUpdateAxis(\n              (s as ICartesianSeries).getZAxisHelper(),\n              this.axisHelper(),\n              isValid(this._seriesUserId) || isValid(this._seriesIndex)\n            )\n          ) {\n            (s as ICartesianSeries).setScaleZ(this._scale);\n            (s as ICartesianSeries).setZAxisHelper(this.axisHelper());\n          }\n        }\n      },\n      {\n        userId: this._seriesUserId,\n        specIndex: this._seriesIndex\n      }\n    );\n  }\n\n  // protected _seriesUpdateAfterScaleChange(updateInfo: { domain?: boolean; range?: boolean; type?: boolean }) {\n  //   const orient = this.getOrient();\n  //   eachSeries(\n  //     this._regions,\n  //     s => {\n  //       if (isXAxis(orient)) {\n  //         (s as ICartesianSeries).xAxisUpdated(updateInfo);\n  //       } else if (isYAxis(orient)) {\n  //         (s as ICartesianSeries).yAxisUpdated(updateInfo);\n  //       } else if (isZAxis(orient)) {\n  //         (s as ICartesianSeries).zAxisUpdated(updateInfo);\n  //       }\n  //     },\n  //     {\n  //       userId: this._seriesUserId,\n  //       specIndex: this._seriesIndex\n  //     }\n  //   );\n  // }\n\n  _transformLayoutPosition = (pos: Partial<IPoint>) => {\n    let { x, y } = pos;\n    if (isValidNumber(x)) {\n      x += Number(this._orient === 'left') * this.getLayoutRect().width;\n    }\n    if (isValidNumber(y)) {\n      y += Number(this._orient === 'top') * this.getLayoutRect().height;\n    }\n    return { x, y };\n  };\n\n  _transformLayoutRect = (result: ILayoutRect) => {\n    if (!this._visible) {\n      return result;\n    }\n    const bounds = this._latestBounds.clone().translate(-this.getLayoutStartPoint().x, -this.getLayoutStartPoint().y);\n    switch (this._layout.layoutOrient) {\n      case 'left':\n        if (this._layout.layoutRectLevelMap.width === DEFAULT_LAYOUT_RECT_LEVEL) {\n          result.width = bounds.x1 < 0 ? -bounds.x1 : 0;\n        }\n        break;\n      case 'right':\n        if (this._layout.layoutRectLevelMap.width === DEFAULT_LAYOUT_RECT_LEVEL) {\n          result.width = bounds.x2 > 0 ? bounds.x2 : 0;\n        }\n        break;\n      case 'top':\n        if (this._layout.layoutRectLevelMap.height === DEFAULT_LAYOUT_RECT_LEVEL) {\n          result.height = bounds.y1 < 0 ? -bounds.y1 : 0;\n        }\n        break;\n      case 'bottom':\n        if (this._layout.layoutRectLevelMap.height === DEFAULT_LAYOUT_RECT_LEVEL) {\n          result.height = bounds.y2 > 0 ? bounds.y2 : 0;\n        }\n        break;\n      default:\n        break;\n    }\n    result.width = Math.ceil(result.width);\n    result.height = Math.ceil(result.height);\n    return this._layout.setRectInSpec(this._layoutCacheProcessing(result));\n  };\n  /**\n   * bounds 预计算\n   * @param rect\n   * @returns\n   */\n  getBoundsInRect(rect: ILayoutRect): IBoundsLike {\n    let result: IBoundsLike = { x1: 0, y1: 0, x2: 0, y2: 0 };\n    if (!this._visible) {\n      return result;\n    }\n    this._verticalLimitSize = isXAxis(this.getOrient()) ? rect.height : rect.width;\n\n    this.setLayoutRect(rect);\n    const isChanged = this.updateScaleRange();\n    // 防止一直没有计算latestData\n    if (isChanged || !isArray(this.getTickData()?.getLatestData())) {\n      this.computeData('range');\n    }\n    const context = { skipLayout: false };\n    const isX = isXAxis(this.getOrient());\n    if (this.pluginService) {\n      isX\n        ? this.callPlugin(plugin => {\n            plugin.onWillLayoutHorizontal && plugin.onWillLayoutHorizontal(this.pluginService, context, this);\n          })\n        : this.callPlugin(plugin => {\n            plugin.onWillLayoutVertical && plugin.onWillLayoutVertical(this.pluginService, context, this);\n          });\n    }\n    const product = this._axisMark.getProduct();\n    let hasBounds = false;\n\n    if (!context.skipLayout) {\n      const attrs = this._getUpdateAttribute(true);\n      const axisComponent = product.getGroupGraphicItem();\n\n      const spec = mergeSpec({ ...this.getLayoutStartPoint() }, this._axisStyle, attrs, { line: { visible: false } });\n      let updateBounds = axisComponent.getBoundsWithoutRender(spec);\n\n      if (updateBounds.empty()) {\n        // 如果包围盒为空，设置为布局起点，宽高为0的包围盒\n        updateBounds = new Bounds().set(spec.x, spec.y, spec.x, spec.y);\n      }\n\n      hasBounds = true;\n      this._latestBounds = updateBounds;\n      // 因为轴单位在某些区域显示的时候，是不参与轴某个方向的包围盒计算的，\n      // 所以不太合适放在轴组件内支持，所以就在 VChart 层的轴组件上通过添加 text 图元支持\n      result = this._appendAxisUnit(updateBounds, isX);\n    }\n\n    if (!hasBounds) {\n      this._latestBounds = product.getBounds();\n    }\n    return result;\n  }\n\n  positionToData(pos: number, isViewPos?: boolean) {\n    const isX = isXAxis(this.getOrient());\n    if (isViewPos) {\n      pos -= isX ? this.getLayoutStartPoint().x : this.getLayoutStartPoint().y;\n    }\n\n    if (this._innerOffset) {\n      pos = isX\n        ? clamp(pos, this._innerOffset.left, this.getLayoutRect().width - this._innerOffset.right)\n        : clamp(pos, this._innerOffset.top, this.getLayoutRect().height - this._innerOffset.bottom);\n    }\n    const range = this._scale.range();\n\n    if ((pos - range[0]) * (pos - last(range)) > 0) {\n      return null;\n    }\n\n    return this._scale.invert(pos);\n  }\n\n  private _getTitleLimit(isX: boolean) {\n    const titleSpec = this._spec.title;\n    if (titleSpec.visible && isNil(titleSpec.style?.maxLineWidth)) {\n      const angle = this._axisStyle.title?.angle ?? titleSpec.style?.angle ?? 0;\n      if (isX) {\n        const width = this.getLayoutRect().width;\n        const cosValue = Math.abs(Math.cos(angle));\n        // VRender 接收到的limit是考虑角度计算后的宽度\n        // TODO：还需要考虑angle后，高度是否太高，综合计算一个limit，比如高度不能超过图表整体高度的1/4\n        return cosValue < 1e-6 ? Infinity : width / cosValue;\n      }\n      const height = this.getLayoutRect().height;\n      const sinValue = Math.abs(Math.sin(angle));\n\n      // TODO：还需要考虑angle后，宽度是否太宽，综合计算一个limit，比如宽度度不能超过图表整体宽度的1/4\n      return sinValue < 1e-6 ? Infinity : height / sinValue;\n    }\n\n    return null;\n  }\n\n  protected _getUpdateAttribute(ignoreGrid: boolean) {\n    // 获取更新的坐标轴属性\n    let regionHeight = 0;\n    let regionWidth = 0;\n\n    if (!ignoreGrid) {\n      const regions = this.getRegions();\n      let { x: minX, y: minY } = regions[0].getLayoutStartPoint();\n      let maxX = minX + regions[0].getLayoutRect().width;\n      let maxY = minY + regions[0].getLayoutRect().height;\n\n      for (let index = 1; index < regions.length; index++) {\n        const region = regions[index];\n        const { x, y } = region.getLayoutStartPoint();\n        const { width, height } = region.getLayoutRect();\n\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, width + x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, height + y);\n      }\n      regionHeight = Math.abs(maxY - minY);\n      regionWidth = Math.abs(maxX - minX);\n    }\n\n    const { width, height } = this.getLayoutRect();\n    const isX = isXAxis(this._orient);\n    const isY = isYAxis(this._orient);\n    const isZ = isZAxis(this._orient);\n    const depth = this.layout3dBox ? this.layout3dBox.length : 0;\n    let end = { x: 0, y: 0 };\n    let gridLength = regionHeight;\n    let axisLength = width;\n\n    if (isX) {\n      end = { x: width, y: 0 };\n    } else if (isY) {\n      end = { x: 0, y: height };\n      gridLength = regionWidth;\n      axisLength = height;\n    } else if (isZ) {\n      end = { x: depth, y: 0 };\n    }\n\n    const items = this.getLabelItems(axisLength);\n    const attrs: any = {\n      start: { x: 0, y: 0 },\n      end,\n      title: {\n        text: this._spec.title.text || this._dataFieldText,\n        maxWidth: this._getTitleLimit(isX)\n      },\n      items\n    };\n    if (!ignoreGrid) {\n      attrs.grid = {\n        type: 'line',\n        start: { x: 0, y: 0 },\n        end,\n        items: items[0],\n        verticalFactor: this._axisStyle.verticalFactor,\n        depth,\n        length: gridLength\n      };\n    }\n\n    if (isZ) {\n      const directionStr = this.directionStr ?? 'r2l';\n      const depthZ = this.layout3dBox ? this.layout3dBox.width : 0;\n      let anchor3d = [0, 0];\n      let alpha = -Math.PI / 2;\n      let z = 0;\n      if (directionStr === 'l2r') {\n        z = this.layout3dBox.length;\n        anchor3d = [0, 0, 0];\n        alpha = Math.PI / 2;\n      }\n      attrs.z = z;\n      attrs.alpha = alpha;\n      attrs.anchor3d = anchor3d;\n\n      if (!ignoreGrid) {\n        attrs.grid.depth = depthZ;\n      }\n    } else {\n      let verticalMinSize = isX ? this.layout.minHeight : this.layout.minWidth;\n      if (\n        (isX && this._layout.layoutRectLevelMap.height === USER_LAYOUT_RECT_LEVEL) ||\n        (isY && this._layout.layoutRectLevelMap.width === USER_LAYOUT_RECT_LEVEL)\n      ) {\n        verticalMinSize = this._verticalLimitSize;\n      }\n\n      attrs.verticalLimitSize = this._verticalLimitSize;\n      attrs.verticalMinSize = verticalMinSize;\n      attrs.label = {\n        overflowLimitLength: this._getLabelOverflowLimit(isX)\n      };\n    }\n\n    return attrs;\n  }\n\n  protected getLabelItems(length: number) {\n    const tickLatestData = this.getTickData()?.getLatestData();\n    if (tickLatestData && tickLatestData.length) {\n      return [\n        tickLatestData\n          .map((obj: Datum) => {\n            const normalizedValue = this._getNormalizedValue([obj.value], length);\n            return getAxisItem(obj.value, normalizedValue);\n          })\n          .filter((entry: AxisItem) => {\n            const { value, rawValue } = entry;\n            const domain = this._scale.domain();\n            if (this.getSpec().type === 'log') {\n              return value >= 0 && value <= 1;\n            }\n            if (isContinuous(this._scale.type)) {\n              return rawValue >= domain[0] && rawValue <= last(domain);\n            }\n            return domain.includes(rawValue);\n          })\n      ];\n    }\n    return [];\n  }\n\n  protected initEvent() {\n    super.initEvent();\n\n    if (this.visible) {\n      // 过程: dolayout -> getBoundsInRect: update tick attr -> forceLayout ->  updateLayoutAttr: update tick attr -> chart layout -> scale update -> mark encode\n      // 问题: chart layout之后, scale发生变化, 导致tick 和 mark position 不同步\n      // 解决方案: chart layout 之后重新计算tick位置\n      this.event.on(ChartEvent.layoutEnd, this._updateAxisLayout);\n      // 布局结束之后处理 0 基线问题\n      this.event.on(ChartEvent.layoutEnd, this._fixAxisOnZero);\n      // 图表resize后，需要正常布局，清除布局缓存\n      this.event.on(ChartEvent.layoutRectUpdate, () => {\n        this._clearLayoutCache();\n      });\n    }\n  }\n\n  protected _updateAxisLayout = () => {\n    const startPoint = this.getLayoutStartPoint();\n    const { grid: updateGridAttrs, ...updateAxisAttrs } = this._getUpdateAttribute(false);\n    const axisProduct = this._axisMark.getProduct(); // 获取语法元素\n    const axisAttrs = mergeSpec({ x: startPoint.x, y: startPoint.y }, this._axisStyle, updateAxisAttrs);\n    axisProduct.encode(axisAttrs);\n\n    if (this._gridMark) {\n      const gridProduct = this._gridMark.getProduct(); // 获取语法元素\n      gridProduct.encode(mergeSpec({ x: startPoint.x, y: startPoint.y }, this._getGridAttributes(), updateGridAttrs));\n    }\n  };\n\n  protected _getNormalizedValue(values: any[], length: number) {\n    return length === 0 ? 0 : this.dataToPosition(values) / length;\n  }\n\n  private _fixAxisOnZero = () => {\n    // 在布局结束之后调整坐标轴零基线\n    const { onZero, visible } = this._spec.domainLine;\n    if (this.visible && onZero && visible !== false) {\n      const { onZeroAxisId, onZeroAxisIndex } = this._spec.domainLine;\n      const axesComponents = this._option.getComponentsByKey('axes') as IAxis[];\n      const isX = isXAxis(this.getOrient());\n\n      // 判断坐标轴是否可用\n      const isValidAxis = (item: any) => {\n        return (\n          (isX ? !isXAxis(item.getOrient()) : isXAxis(item.getOrient())) &&\n          isContinuous(item.getScale().type) &&\n          (item.getTickData()\n            ? item\n                .getTickData()\n                .getLatestData()\n                ?.find((d: any) => d.value === 0)\n            : item.getScale().domain()[0] <= 0 && last(item.getScale().domain()) >= 0)\n        );\n      };\n      const relativeAxes = axesComponents.filter(item => isValidAxis(item));\n      if (relativeAxes.length) {\n        let bindAxis;\n        if (isValid(onZeroAxisId)) {\n          bindAxis = relativeAxes.find(axis => axis.id === onZeroAxisId);\n        } else if (isValid(onZeroAxisIndex)) {\n          const indexAxis = axesComponents[onZeroAxisIndex];\n          if (isValidAxis(indexAxis)) {\n            bindAxis = indexAxis;\n          }\n        } else {\n          // 默认绑定第一条的相对坐标轴\n          bindAxis = relativeAxes[0];\n        }\n        if (bindAxis) {\n          const axisMark = this._axisMark.getProduct();\n          // 找到了绑定的 axis，获取基线的位置\n          const position = bindAxis.valueToPosition(0);\n          // 获取偏移量\n          if (isX) {\n            axisMark.encode({\n              line: {\n                ...this._axisStyle.line,\n                dy:\n                  this._orient === 'bottom'\n                    ? -(\n                        (bindAxis.getInverse() ? bindAxis.getScale().range()[1] : bindAxis.getScale().range()[0]) -\n                        position\n                      )\n                    : position\n              }\n            });\n          } else {\n            axisMark.encode({\n              line: {\n                ...this._axisStyle.line,\n                dx:\n                  this._orient === 'left'\n                    ? position\n                    : -(\n                        (bindAxis.getInverse() ? bindAxis.getScale().range()[0] : bindAxis.getScale().range()[1]) -\n                        position\n                      )\n              }\n            });\n          }\n        }\n      }\n    }\n  };\n\n  protected _layoutCacheProcessing(rect: ILayoutRect) {\n    ['width', 'height'].forEach(key => {\n      if (rect[key as 'width' | 'height'] < this._layoutCache[key as 'width' | 'height']) {\n        rect[key as 'width' | 'height'] = this._layoutCache[key as 'width' | 'height'];\n      } else {\n        this._layoutCache[key as 'width' | 'height'] = rect[key as 'width' | 'height'];\n      }\n    });\n\n    // outBounds\n    if (this._autoIndentOnce && this._hasAutoIndent) {\n      // use cache\n      ['x1', 'x2', 'y1', 'y2'].forEach(key => {\n        this.layout.getLastComputeOutBounds()[key as 'x1' | 'x2' | 'y1' | 'y2'] =\n          this._layoutCache._lastComputeOutBounds[key as 'x1' | 'x2' | 'y1' | 'y2'];\n      });\n    } else {\n      this._hasAutoIndent = true;\n      ['x1', 'x2', 'y1', 'y2'].forEach(key => {\n        if (\n          this.layout.getLastComputeOutBounds()[key as 'x1' | 'x2' | 'y1' | 'y2'] <\n          this._layoutCache._lastComputeOutBounds[key as 'x1' | 'x2' | 'y1' | 'y2']\n        ) {\n          this.layout.getLastComputeOutBounds()[key as 'x1' | 'x2' | 'y1' | 'y2'] =\n            this._layoutCache._lastComputeOutBounds[key as 'x1' | 'x2' | 'y1' | 'y2'];\n        } else {\n          this._layoutCache._lastComputeOutBounds[key as 'x1' | 'x2' | 'y1' | 'y2'] =\n            this.layout.getLastComputeOutBounds()[key as 'x1' | 'x2' | 'y1' | 'y2'];\n        }\n      });\n    }\n\n    return rect;\n  }\n\n  _clearLayoutCache() {\n    this._hasAutoIndent = false;\n    this._layoutCache.width = 0;\n    this._layoutCache.height = 0;\n    this._layoutCache._lastComputeOutBounds = { x1: 0, x2: 0, y1: 0, y2: 0 };\n  }\n\n  onDataUpdate(): void {\n    // clear layout cache\n    this._clearLayoutCache();\n  }\n\n  private _appendAxisUnit(bounds: IBounds, isX: boolean) {\n    if (this._spec.unit && this._spec.unit.visible) {\n      const { text, style } = this._spec.unit;\n      let pos;\n      let unitTextStyle: any;\n      const { x, y } = this.getLayoutStartPoint();\n      if (isX) {\n        pos = {\n          x: maxInArr<number>(this._scale.range()) + x,\n          y\n        };\n        unitTextStyle = {\n          textAlign: 'left',\n          textBaseline: 'middle'\n        };\n      } else {\n        pos = {\n          x,\n          y: minInArr<number>(this._scale.range()) + y\n        };\n        unitTextStyle = {\n          textAlign: this._orient === 'left' ? 'left' : 'right',\n          textBaseline: 'bottom'\n        };\n      }\n\n      unitTextStyle = {\n        ...unitTextStyle,\n        ...style,\n        x: pos.x,\n        y: pos.y,\n        text\n      };\n      if (this._unitText) {\n        this._unitText.setAttributes(unitTextStyle);\n      } else {\n        this._unitText = createText(unitTextStyle);\n        this._unitText.name = 'axis-unit';\n        this.getContainer()?.add(this._unitText);\n      }\n\n      // 左轴\n      const textBounds = this._unitText.AABBBounds;\n      if (!isX) {\n        bounds.x1 += textBounds.x1 < bounds.x1 ? textBounds.x1 - bounds.x1 : 0;\n        bounds.y1 += textBounds.y1 < bounds.y1 ? textBounds.y1 - bounds.y1 : 0;\n      } else {\n        bounds.x2 += textBounds.x2 > bounds.x2 ? textBounds.x2 - bounds.x2 : 0;\n        bounds.y2 += textBounds.y2 > bounds.y2 ? textBounds.y2 - bounds.y2 : 0;\n      }\n    }\n\n    return bounds;\n  }\n\n  protected _getNeedClearVRenderComponents(): IGraphic[] {\n    return this._unitText ? [this._unitText] : [];\n  }\n\n  private _getLabelOverflowLimit(isX: boolean) {\n    if (isX && this._spec.label?.visible !== false && this._spec.label?.autoLimit === true) {\n      const axesComponents = this._option.getComponentsByKey('axes') as IAxis[];\n      const relativeRegions = this.getRegions();\n      const relativeAxes = axesComponents.filter(item => {\n        const orient = item.getOrient();\n        return (\n          (orient === 'left' || orient === 'right') &&\n          item.getRegions().some(region => relativeRegions.includes(region))\n        );\n      });\n\n      let leftLimitLength = 0;\n      let rightLimitLength = 0;\n      const startX = this.getLayoutStartPoint().x;\n      const endX = startX + this.getLayoutRect().width;\n      relativeAxes.forEach(axis => {\n        const relativeStartX = axis.getLayoutStartPoint().x;\n        if (axis.getOrient() === 'left' && relativeStartX === startX) {\n          const leftAxisWidth = axis.getLayoutRect().width;\n          leftLimitLength = Math.max(leftLimitLength, leftAxisWidth);\n        } else if (relativeStartX === endX) {\n          const rightAxisWidth = axis.getLayoutRect().width;\n          rightLimitLength = Math.max(rightLimitLength, rightAxisWidth);\n        }\n      });\n      return { left: leftLimitLength, right: rightLimitLength };\n    }\n    return undefined;\n  }\n}\n"]}