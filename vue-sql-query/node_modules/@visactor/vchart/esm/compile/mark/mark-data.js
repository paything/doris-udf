import { CompilableData } from "../data/compilable-data";

import { PREFIX } from "../../constant/base";

import { isNil, isValid } from "@visactor/vutils";

export class MarkData extends CompilableData {
    constructor(option) {
        super(option), this._mark = option.mark;
    }
    setCompiledProductId(name) {
        this._compiledProductId = name;
    }
    generateProductId() {
        const name = super.generateProductId();
        return isValid(name) ? name : `${PREFIX}_markData_${this._mark.id}`;
    }
    _compileProduct() {
        var _a;
        const data = null === (_a = this._data) || void 0 === _a ? void 0 : _a.latestData;
        isNil(data) || isValid(this.getProduct()) || this._initProduct(data);
    }
}
//# sourceMappingURL=mark-data.js.map
