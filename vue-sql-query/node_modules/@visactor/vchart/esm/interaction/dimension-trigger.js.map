{"version":3,"sources":["../src/interaction/dimension-trigger.ts"],"names":[],"mappings":"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","file":"dimension-trigger.js","sourcesContent":["import { isEmpty, isArray } from '@visactor/vutils';\nimport type { IElement } from '@visactor/vgrammar-core';\nimport type { DimensionEventParams } from '../event/events/dimension/interface';\n// eslint-disable-next-line no-duplicate-imports\nimport { DimensionEventEnum } from '../event/events/dimension/interface';\nimport type { IMark } from '../mark/interface';\nimport type { EventCallback, EventParams, IEvent } from '../event/interface';\nimport type { IHoverSpec, IInteraction, ISelectSpec, ITrigger, ITriggerOption } from './interface';\nimport type { RenderMode } from '../typings/spec';\nimport { MarkSet } from '../mark/mark-set';\nimport { STATE_VALUE_ENUM } from '../compile/mark/interface';\n\nexport class DimensionTrigger implements ITrigger {\n  // 事件\n  readonly event: IEvent;\n\n  protected readonly interaction: IInteraction;\n\n  protected _option: ITriggerOption;\n  protected _marks: MarkSet = new MarkSet();\n  protected _markReverse: MarkSet = new MarkSet();\n\n  private _hover: IHoverSpec;\n  get hover() {\n    return this._hover;\n  }\n  private _select: ISelectSpec;\n  get select() {\n    return this._select;\n  }\n\n  constructor(option: ITriggerOption) {\n    this._option = option;\n    this.event = this._option.model.getOption().getChart().getEvent(); //  new Event(option.eventDispatcher, option.mode);\n    this.interaction = option.interaction;\n    this.initConfig(option.mode);\n  }\n\n  setStateKeys(fields: string[]): void {\n    // do nothing\n  }\n\n  registerMark(mark: IMark): void {\n    // do nothing\n    if (!isEmpty(mark.stateStyle[STATE_VALUE_ENUM.STATE_DIMENSION_HOVER])) {\n      this._marks.addMark(mark);\n    }\n    if (!isEmpty(mark.stateStyle[STATE_VALUE_ENUM.STATE_DIMENSION_HOVER_REVERSE])) {\n      this._markReverse.addMark(mark);\n    }\n  }\n\n  init(): void {\n    this.initEvent();\n  }\n\n  release(): void {\n    this.releaseEvent();\n  }\n\n  // event\n  protected initEvent() {\n    const event = this.event;\n    event.on(DimensionEventEnum.dimensionHover, this.onHover as EventCallback<EventParams>);\n  }\n\n  protected releaseEvent(): void {\n    this.event.release();\n  }\n\n  private initConfig(mode: RenderMode): void {\n    // do nothing\n  }\n\n  protected getEventElement(params: DimensionEventParams, reverse: boolean = false) {\n    // items 修改遍历方法从 mark\n\n    const items: IElement[] = [];\n    params.dimensionInfo.forEach(df => {\n      df.data.forEach(dd => {\n        const seriesMark = (reverse ? this._markReverse : this._marks)\n          .getMarks()\n          .filter(m => m.model === dd.series && m.getVisible());\n\n        seriesMark.forEach(m => {\n          const markProduct = m.getProduct();\n          if (!markProduct || !markProduct.elements) {\n            return;\n          }\n\n          const elements = markProduct.elements.filter(e => {\n            const datum = e.getDatum();\n            let c;\n            if (isArray(datum)) {\n              c = datum.every((oneData, i) => oneData === dd.datum[i]);\n            } else {\n              c = dd.datum.some(dd_d => dd_d === datum);\n            }\n            return reverse ? !c : c;\n          });\n          items.push(...elements);\n        });\n      });\n    });\n\n    return items;\n  }\n\n  private onHover = (params: DimensionEventParams) => {\n    switch (params.action) {\n      case 'enter':\n        // clear last hover\n        // eslint-disable-next-line no-case-declarations\n        const lastHover = this.interaction.getEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER);\n        lastHover.forEach(e => this.interaction.addEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER_REVERSE, e));\n        this.interaction.clearEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER, false);\n        // add new\n        const elements = this.getEventElement(params);\n        elements.forEach(el => this.interaction.addEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER, el));\n        this.interaction.reverseEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER);\n        break;\n      case 'leave':\n        // clear all\n        this.interaction.clearEventElement(STATE_VALUE_ENUM.STATE_DIMENSION_HOVER, true);\n        params = null;\n        break;\n      case 'click':\n      case 'move':\n      default:\n        break;\n    }\n  };\n}\n"]}